
sam4s_quad.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000873c  00400000  00400000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     000001e8  20000000  0040873c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  2 .bss          000006cc  200001e8  00408924  000201e8  2**2
                  ALLOC
  3 .stack        00003004  200008b4  00408ff0  000201e8  2**0
                  ALLOC
  4 .ARM.attributes 0000002a  00000000  00000000  000201e8  2**0
                  CONTENTS, READONLY
  5 .comment      00000075  00000000  00000000  00020212  2**0
                  CONTENTS, READONLY
  6 .debug_info   00021743  00000000  00000000  00020287  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000541d  00000000  00000000  000419ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    0000709c  00000000  00000000  00046de7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000f30  00000000  00000000  0004de83  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00001168  00000000  00000000  0004edb3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00019601  00000000  00000000  0004ff1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0001a431  00000000  00000000  0006951c  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0005667b  00000000  00000000  0008394d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00003904  00000000  00000000  000d9fc8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	b8 38 00 20 65 24 40 00 61 24 40 00 61 24 40 00     .8. e$@.a$@.a$@.
  400010:	61 24 40 00 61 24 40 00 61 24 40 00 00 00 00 00     a$@.a$@.a$@.....
	...
  40002c:	61 24 40 00 61 24 40 00 00 00 00 00 61 24 40 00     a$@.a$@.....a$@.
  40003c:	59 05 40 00 61 24 40 00 61 24 40 00 61 24 40 00     Y.@.a$@.a$@.a$@.
  40004c:	61 24 40 00 61 24 40 00 61 24 40 00 61 24 40 00     a$@.a$@.a$@.a$@.
  40005c:	61 24 40 00 61 24 40 00 c5 09 40 00 00 00 00 00     a$@.a$@...@.....
  40006c:	b5 20 40 00 c5 20 40 00 d5 20 40 00 61 24 40 00     . @.. @.. @.a$@.
  40007c:	61 24 40 00 00 00 00 00 00 00 00 00 61 24 40 00     a$@.........a$@.
  40008c:	61 24 40 00 61 24 40 00 61 24 40 00 61 24 40 00     a$@.a$@.a$@.a$@.
  40009c:	61 24 40 00 61 24 40 00 61 24 40 00 61 24 40 00     a$@.a$@.a$@.a$@.
  4000ac:	61 24 40 00 61 24 40 00 61 24 40 00 61 24 40 00     a$@.a$@.a$@.a$@.
  4000bc:	61 24 40 00 61 24 40 00 61 24 40 00 61 24 40 00     a$@.a$@.a$@.a$@.

004000cc <__do_global_dtors_aux>:
  4000cc:	b510      	push	{r4, lr}
  4000ce:	4c05      	ldr	r4, [pc, #20]	; (4000e4 <__do_global_dtors_aux+0x18>)
  4000d0:	7823      	ldrb	r3, [r4, #0]
  4000d2:	b933      	cbnz	r3, 4000e2 <__do_global_dtors_aux+0x16>
  4000d4:	4b04      	ldr	r3, [pc, #16]	; (4000e8 <__do_global_dtors_aux+0x1c>)
  4000d6:	b113      	cbz	r3, 4000de <__do_global_dtors_aux+0x12>
  4000d8:	4804      	ldr	r0, [pc, #16]	; (4000ec <__do_global_dtors_aux+0x20>)
  4000da:	f3af 8000 	nop.w
  4000de:	2301      	movs	r3, #1
  4000e0:	7023      	strb	r3, [r4, #0]
  4000e2:	bd10      	pop	{r4, pc}
  4000e4:	200001e8 	.word	0x200001e8
  4000e8:	00000000 	.word	0x00000000
  4000ec:	0040873c 	.word	0x0040873c

004000f0 <frame_dummy>:
  4000f0:	b508      	push	{r3, lr}
  4000f2:	4b03      	ldr	r3, [pc, #12]	; (400100 <frame_dummy+0x10>)
  4000f4:	b11b      	cbz	r3, 4000fe <frame_dummy+0xe>
  4000f6:	4903      	ldr	r1, [pc, #12]	; (400104 <frame_dummy+0x14>)
  4000f8:	4803      	ldr	r0, [pc, #12]	; (400108 <frame_dummy+0x18>)
  4000fa:	f3af 8000 	nop.w
  4000fe:	bd08      	pop	{r3, pc}
  400100:	00000000 	.word	0x00000000
  400104:	200001ec 	.word	0x200001ec
  400108:	0040873c 	.word	0x0040873c

0040010c <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  40010c:	b508      	push	{r3, lr}
	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  40010e:	480e      	ldr	r0, [pc, #56]	; (400148 <sysclk_init+0x3c>)
  400110:	f002 fa86 	bl	402620 <system_init_flash>
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400114:	213e      	movs	r1, #62	; 0x3e
  400116:	2000      	movs	r0, #0
  400118:	f002 f816 	bl	402148 <pmc_switch_mainck_to_xtal>
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  40011c:	f002 f83e 	bl	40219c <pmc_osc_is_ready_mainck>
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  400120:	2800      	cmp	r0, #0
  400122:	d0fb      	beq.n	40011c <sysclk_init+0x10>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  400124:	f002 f842 	bl	4021ac <pmc_disable_pllack>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  400128:	4b08      	ldr	r3, [pc, #32]	; (40014c <sysclk_init+0x40>)
  40012a:	4a09      	ldr	r2, [pc, #36]	; (400150 <sysclk_init+0x44>)
  40012c:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
  40012e:	f002 f845 	bl	4021bc <pmc_is_locked_pllack>
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  400132:	2800      	cmp	r0, #0
  400134:	d0fb      	beq.n	40012e <sysclk_init+0x22>

		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  400136:	2010      	movs	r0, #16
  400138:	f001 ffd4 	bl	4020e4 <pmc_switch_mck_to_pllack>
		pmc_switch_mck_to_pllbck(CONFIG_SYSCLK_PRES);
	}
#endif

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  40013c:	f002 f9e8 	bl	402510 <SystemCoreClockUpdate>

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  400140:	4801      	ldr	r0, [pc, #4]	; (400148 <sysclk_init+0x3c>)
  400142:	f002 fa6d 	bl	402620 <system_init_flash>

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = 1;
#endif
}
  400146:	bd08      	pop	{r3, pc}
  400148:	07270e00 	.word	0x07270e00
  40014c:	400e0400 	.word	0x400e0400
  400150:	20133f01 	.word	0x20133f01

00400154 <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
  400154:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
  400158:	b980      	cbnz	r0, 40017c <_read+0x28>
  40015a:	460c      	mov	r4, r1
  40015c:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
  40015e:	2a00      	cmp	r2, #0
  400160:	dd0f      	ble.n	400182 <_read+0x2e>
  400162:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
  400164:	4e08      	ldr	r6, [pc, #32]	; (400188 <_read+0x34>)
  400166:	4d09      	ldr	r5, [pc, #36]	; (40018c <_read+0x38>)
  400168:	6830      	ldr	r0, [r6, #0]
  40016a:	682b      	ldr	r3, [r5, #0]
  40016c:	4621      	mov	r1, r4
  40016e:	4798      	blx	r3
		ptr++;
  400170:	3401      	adds	r4, #1
	for (; len > 0; --len) {
  400172:	42bc      	cmp	r4, r7
  400174:	d1f8      	bne.n	400168 <_read+0x14>
		nChars++;
	}
	return nChars;
}
  400176:	4640      	mov	r0, r8
  400178:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
  40017c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
  400180:	e7f9      	b.n	400176 <_read+0x22>
	int nChars = 0;
  400182:	4680      	mov	r8, r0
  400184:	e7f7      	b.n	400176 <_read+0x22>
  400186:	bf00      	nop
  400188:	20000500 	.word	0x20000500
  40018c:	200004f8 	.word	0x200004f8

00400190 <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
  400190:	3801      	subs	r0, #1
  400192:	2802      	cmp	r0, #2
  400194:	d81a      	bhi.n	4001cc <_write+0x3c>
		return -1;
	}

	for (; len != 0; --len) {
  400196:	b1e2      	cbz	r2, 4001d2 <_write+0x42>
{
  400198:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  40019c:	4617      	mov	r7, r2
  40019e:	460e      	mov	r6, r1
  4001a0:	1e4d      	subs	r5, r1, #1
		if (ptr_put(stdio_base, *ptr++) < 0) {
  4001a2:	f8df 903c 	ldr.w	r9, [pc, #60]	; 4001e0 <_write+0x50>
  4001a6:	f8df 803c 	ldr.w	r8, [pc, #60]	; 4001e4 <_write+0x54>
  4001aa:	f8d9 0000 	ldr.w	r0, [r9]
  4001ae:	1c6c      	adds	r4, r5, #1
  4001b0:	f8d8 3000 	ldr.w	r3, [r8]
  4001b4:	7869      	ldrb	r1, [r5, #1]
  4001b6:	4798      	blx	r3
  4001b8:	2800      	cmp	r0, #0
  4001ba:	db0c      	blt.n	4001d6 <_write+0x46>
			return -1;
		}
		++nChars;
  4001bc:	3502      	adds	r5, #2
  4001be:	1ba8      	subs	r0, r5, r6
  4001c0:	4625      	mov	r5, r4
	for (; len != 0; --len) {
  4001c2:	43e4      	mvns	r4, r4
  4001c4:	443c      	add	r4, r7
  4001c6:	42f4      	cmn	r4, r6
  4001c8:	d1ef      	bne.n	4001aa <_write+0x1a>
  4001ca:	e006      	b.n	4001da <_write+0x4a>
		return -1;
  4001cc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  4001d0:	4770      	bx	lr
	int nChars = 0;
  4001d2:	4610      	mov	r0, r2
	}
	return nChars;
}
  4001d4:	4770      	bx	lr
			return -1;
  4001d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
}
  4001da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4001de:	bf00      	nop
  4001e0:	20000500 	.word	0x20000500
  4001e4:	200004fc 	.word	0x200004fc

004001e8 <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
  4001e8:	b570      	push	{r4, r5, r6, lr}
  4001ea:	b082      	sub	sp, #8
  4001ec:	4605      	mov	r5, r0
  4001ee:	460c      	mov	r4, r1
	uint32_t val = 0;
  4001f0:	2300      	movs	r3, #0
  4001f2:	9301      	str	r3, [sp, #4]
	if (UART == (Uart*)p_usart) {
		while (uart_read((Uart*)p_usart, data));
	}
#else
# ifdef UART0
	if (UART0 == (Uart*)p_usart) {
  4001f4:	4b17      	ldr	r3, [pc, #92]	; (400254 <usart_serial_getchar+0x6c>)
  4001f6:	4298      	cmp	r0, r3
  4001f8:	d00f      	beq.n	40021a <usart_serial_getchar+0x32>
		while (uart_read((Uart*)p_usart, data));
	}
# endif
# ifdef UART1
	if (UART1 == (Uart*)p_usart) {
  4001fa:	4b17      	ldr	r3, [pc, #92]	; (400258 <usart_serial_getchar+0x70>)
  4001fc:	4298      	cmp	r0, r3
  4001fe:	d020      	beq.n	400242 <usart_serial_getchar+0x5a>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
  400200:	4b16      	ldr	r3, [pc, #88]	; (40025c <usart_serial_getchar+0x74>)
  400202:	4298      	cmp	r0, r3
  400204:	d110      	bne.n	400228 <usart_serial_getchar+0x40>
		while (usart_read(p_usart, &val));
  400206:	461d      	mov	r5, r3
  400208:	a901      	add	r1, sp, #4
  40020a:	4628      	mov	r0, r5
  40020c:	f002 f848 	bl	4022a0 <usart_read>
  400210:	2800      	cmp	r0, #0
  400212:	d1f9      	bne.n	400208 <usart_serial_getchar+0x20>
		*data = (uint8_t)(val & 0xFF);
  400214:	9b01      	ldr	r3, [sp, #4]
  400216:	7023      	strb	r3, [r4, #0]
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
  400218:	e01a      	b.n	400250 <usart_serial_getchar+0x68>
		while (uart_read((Uart*)p_usart, data));
  40021a:	461e      	mov	r6, r3
  40021c:	4621      	mov	r1, r4
  40021e:	4630      	mov	r0, r6
  400220:	f002 f82b 	bl	40227a <uart_read>
  400224:	2800      	cmp	r0, #0
  400226:	d1f9      	bne.n	40021c <usart_serial_getchar+0x34>
	if (USART1 == p_usart) {
  400228:	4b0d      	ldr	r3, [pc, #52]	; (400260 <usart_serial_getchar+0x78>)
  40022a:	429d      	cmp	r5, r3
  40022c:	d110      	bne.n	400250 <usart_serial_getchar+0x68>
		while (usart_read(p_usart, &val));
  40022e:	461d      	mov	r5, r3
  400230:	a901      	add	r1, sp, #4
  400232:	4628      	mov	r0, r5
  400234:	f002 f834 	bl	4022a0 <usart_read>
  400238:	2800      	cmp	r0, #0
  40023a:	d1f9      	bne.n	400230 <usart_serial_getchar+0x48>
		*data = (uint8_t)(val & 0xFF);
  40023c:	9b01      	ldr	r3, [sp, #4]
  40023e:	7023      	strb	r3, [r4, #0]
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
  400240:	e006      	b.n	400250 <usart_serial_getchar+0x68>
		while (uart_read((Uart*)p_usart, data));
  400242:	461d      	mov	r5, r3
  400244:	4621      	mov	r1, r4
  400246:	4628      	mov	r0, r5
  400248:	f002 f817 	bl	40227a <uart_read>
  40024c:	2800      	cmp	r0, #0
  40024e:	d1f9      	bne.n	400244 <usart_serial_getchar+0x5c>
}
  400250:	b002      	add	sp, #8
  400252:	bd70      	pop	{r4, r5, r6, pc}
  400254:	400e0600 	.word	0x400e0600
  400258:	400e0800 	.word	0x400e0800
  40025c:	40024000 	.word	0x40024000
  400260:	40028000 	.word	0x40028000

00400264 <usart_serial_putchar>:
{
  400264:	b538      	push	{r3, r4, r5, lr}
  400266:	460c      	mov	r4, r1
	if (UART0 == (Uart*)p_usart) {
  400268:	4b18      	ldr	r3, [pc, #96]	; (4002cc <usart_serial_putchar+0x68>)
  40026a:	4298      	cmp	r0, r3
  40026c:	d00a      	beq.n	400284 <usart_serial_putchar+0x20>
	if (UART1 == (Uart*)p_usart) {
  40026e:	4b18      	ldr	r3, [pc, #96]	; (4002d0 <usart_serial_putchar+0x6c>)
  400270:	4298      	cmp	r0, r3
  400272:	d010      	beq.n	400296 <usart_serial_putchar+0x32>
	if (USART0 == p_usart) {
  400274:	4b17      	ldr	r3, [pc, #92]	; (4002d4 <usart_serial_putchar+0x70>)
  400276:	4298      	cmp	r0, r3
  400278:	d016      	beq.n	4002a8 <usart_serial_putchar+0x44>
	if (USART1 == p_usart) {
  40027a:	4b17      	ldr	r3, [pc, #92]	; (4002d8 <usart_serial_putchar+0x74>)
  40027c:	4298      	cmp	r0, r3
  40027e:	d01c      	beq.n	4002ba <usart_serial_putchar+0x56>
	return 0;
  400280:	2000      	movs	r0, #0
}
  400282:	bd38      	pop	{r3, r4, r5, pc}
		while (uart_write((Uart*)p_usart, c)!=0);
  400284:	461d      	mov	r5, r3
  400286:	4621      	mov	r1, r4
  400288:	4628      	mov	r0, r5
  40028a:	f001 ffee 	bl	40226a <uart_write>
  40028e:	2800      	cmp	r0, #0
  400290:	d1f9      	bne.n	400286 <usart_serial_putchar+0x22>
		return 1;
  400292:	2001      	movs	r0, #1
  400294:	e7f5      	b.n	400282 <usart_serial_putchar+0x1e>
		while (uart_write((Uart*)p_usart, c)!=0);
  400296:	461d      	mov	r5, r3
  400298:	4621      	mov	r1, r4
  40029a:	4628      	mov	r0, r5
  40029c:	f001 ffe5 	bl	40226a <uart_write>
  4002a0:	2800      	cmp	r0, #0
  4002a2:	d1f9      	bne.n	400298 <usart_serial_putchar+0x34>
		return 1;
  4002a4:	2001      	movs	r0, #1
  4002a6:	e7ec      	b.n	400282 <usart_serial_putchar+0x1e>
		while (usart_write(p_usart, c)!=0);
  4002a8:	461d      	mov	r5, r3
  4002aa:	4621      	mov	r1, r4
  4002ac:	4628      	mov	r0, r5
  4002ae:	f001 ffed 	bl	40228c <usart_write>
  4002b2:	2800      	cmp	r0, #0
  4002b4:	d1f9      	bne.n	4002aa <usart_serial_putchar+0x46>
		return 1;
  4002b6:	2001      	movs	r0, #1
  4002b8:	e7e3      	b.n	400282 <usart_serial_putchar+0x1e>
		while (usart_write(p_usart, c)!=0);
  4002ba:	461d      	mov	r5, r3
  4002bc:	4621      	mov	r1, r4
  4002be:	4628      	mov	r0, r5
  4002c0:	f001 ffe4 	bl	40228c <usart_write>
  4002c4:	2800      	cmp	r0, #0
  4002c6:	d1f9      	bne.n	4002bc <usart_serial_putchar+0x58>
		return 1;
  4002c8:	2001      	movs	r0, #1
  4002ca:	e7da      	b.n	400282 <usart_serial_putchar+0x1e>
  4002cc:	400e0600 	.word	0x400e0600
  4002d0:	400e0800 	.word	0x400e0800
  4002d4:	40024000 	.word	0x40024000
  4002d8:	40028000 	.word	0x40028000

004002dc <main>:
    sysclk_enable_peripheral_clock(UART1_SERIAL_BAUDRATE);
	stdio_serial_init(UART1, &uart_serial_options);
}

int main(void)
{
  4002dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4002e0:	b099      	sub	sp, #100	; 0x64
    sysclk_init();
  4002e2:	f7ff ff13 	bl	40010c <sysclk_init>
    board_init();
  4002e6:	f001 fb93 	bl	401a10 <board_init>
    delay_init();
    pmc_enable_periph_clk(IMU_TWI_ID);
  4002ea:	2013      	movs	r0, #19
  4002ec:	f001 ff6e 	bl	4021cc <pmc_enable_periph_clk>
    pmc_enable_periph_clk(ID_PWM);
  4002f0:	201f      	movs	r0, #31
  4002f2:	f001 ff6b 	bl	4021cc <pmc_enable_periph_clk>
    config_init();
  4002f6:	f000 f915 	bl	400524 <config_init>
    cph_millis_init();
  4002fa:	f000 f935 	bl	400568 <cph_millis_init>

    cli_init();
  4002fe:	f000 f95d 	bl	4005bc <cli_init>
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  400302:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
  400306:	f001 ff61 	bl	4021cc <pmc_enable_periph_clk>
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
  40030a:	4c6d      	ldr	r4, [pc, #436]	; (4004c0 <main+0x1e4>)
  40030c:	4b6d      	ldr	r3, [pc, #436]	; (4004c4 <main+0x1e8>)
  40030e:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
  400310:	4b6d      	ldr	r3, [pc, #436]	; (4004c8 <main+0x1ec>)
  400312:	4a6e      	ldr	r2, [pc, #440]	; (4004cc <main+0x1f0>)
  400314:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
  400316:	4b6e      	ldr	r3, [pc, #440]	; (4004d0 <main+0x1f4>)
  400318:	4a6e      	ldr	r2, [pc, #440]	; (4004d4 <main+0x1f8>)
  40031a:	601a      	str	r2, [r3, #0]
	uart_settings.ul_mck = sysclk_get_peripheral_hz();
  40031c:	4b6e      	ldr	r3, [pc, #440]	; (4004d8 <main+0x1fc>)
  40031e:	9315      	str	r3, [sp, #84]	; 0x54
	uart_settings.ul_baudrate = opt->baudrate;
  400320:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
  400324:	9316      	str	r3, [sp, #88]	; 0x58
	uart_settings.ul_mode = opt->paritytype;
  400326:	f44f 6300 	mov.w	r3, #2048	; 0x800
  40032a:	9317      	str	r3, [sp, #92]	; 0x5c
  40032c:	2009      	movs	r0, #9
  40032e:	f001 ff4d 	bl	4021cc <pmc_enable_periph_clk>
		uart_init((Uart*)p_usart, &uart_settings);
  400332:	a915      	add	r1, sp, #84	; 0x54
  400334:	4620      	mov	r0, r4
  400336:	f001 ff77 	bl	402228 <uart_init>
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
  40033a:	4c68      	ldr	r4, [pc, #416]	; (4004dc <main+0x200>)
  40033c:	6823      	ldr	r3, [r4, #0]
  40033e:	2100      	movs	r1, #0
  400340:	6898      	ldr	r0, [r3, #8]
  400342:	f003 fa7f 	bl	403844 <setbuf>
	setbuf(stdin, NULL);
  400346:	6823      	ldr	r3, [r4, #0]
  400348:	2100      	movs	r1, #0
  40034a:	6858      	ldr	r0, [r3, #4]
  40034c:	f003 fa7a 	bl	403844 <setbuf>
    configure_console();
    ap_init();
  400350:	f001 fb54 	bl	4019fc <ap_init>

    puts("\r\n\r\nsam4d32c imu demo...\r\n");
  400354:	4862      	ldr	r0, [pc, #392]	; (4004e0 <main+0x204>)
  400356:	f003 fa6d 	bl	403834 <puts>
  40035a:	240a      	movs	r4, #10

    for (int i=0; i<10; i++) {
        printf(".");
  40035c:	4e61      	ldr	r6, [pc, #388]	; (4004e4 <main+0x208>)
        delay_ms(100);
  40035e:	4d62      	ldr	r5, [pc, #392]	; (4004e8 <main+0x20c>)
        printf(".");
  400360:	4630      	mov	r0, r6
  400362:	f003 f9e1 	bl	403728 <iprintf>
        delay_ms(100);
  400366:	4628      	mov	r0, r5
  400368:	f008 f9e2 	bl	408730 <__portable_delay_cycles_veneer>
    for (int i=0; i<10; i++) {
  40036c:	3c01      	subs	r4, #1
  40036e:	d1f7      	bne.n	400360 <main+0x84>
    }
    printf("\r\n");
  400370:	485e      	ldr	r0, [pc, #376]	; (4004ec <main+0x210>)
  400372:	f003 f9d9 	bl	403728 <iprintf>

    
    if (imu_init()) {
  400376:	f001 f841 	bl	4013fc <imu_init>
  40037a:	b918      	cbnz	r0, 400384 <main+0xa8>
                }
            }
        }

    }
}
  40037c:	2000      	movs	r0, #0
  40037e:	b019      	add	sp, #100	; 0x64
  400380:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        motor_init();
  400384:	f001 f9d6 	bl	401734 <motor_init>
        imu_calibrate();
  400388:	f001 f854 	bl	401434 <imu_calibrate>
        config.imu_calibrate = false;
  40038c:	4b58      	ldr	r3, [pc, #352]	; (4004f0 <main+0x214>)
  40038e:	2200      	movs	r2, #0
  400390:	75da      	strb	r2, [r3, #23]
        printf("please press button to arm motors\r\n");
  400392:	4858      	ldr	r0, [pc, #352]	; (4004f4 <main+0x218>)
  400394:	f003 f9c8 	bl	403728 <iprintf>
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
  400398:	4b57      	ldr	r3, [pc, #348]	; (4004f8 <main+0x21c>)
  40039a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
            if(ioport_get_pin_level(BUTTON_0_PIN) == BUTTON_0_ACTIVE) {
  40039c:	f012 0f04 	tst.w	r2, #4
  4003a0:	d1fb      	bne.n	40039a <main+0xbe>
__always_inline static void arch_ioport_toggle_pin_level(ioport_pin_t pin)
{
	Pio *port = arch_ioport_pin_to_base(pin);
	ioport_port_mask_t mask = arch_ioport_pin_to_mask(pin);

	if (port->PIO_PDSR & arch_ioport_pin_to_mask(pin)) {
  4003a2:	4b56      	ldr	r3, [pc, #344]	; (4004fc <main+0x220>)
  4003a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
  4003a6:	f413 0f00 	tst.w	r3, #8388608	; 0x800000
		port->PIO_CODR = mask;
  4003aa:	4b54      	ldr	r3, [pc, #336]	; (4004fc <main+0x220>)
  4003ac:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  4003b0:	bf14      	ite	ne
  4003b2:	635a      	strne	r2, [r3, #52]	; 0x34
	} else {
		port->PIO_SODR = mask;
  4003b4:	631a      	streq	r2, [r3, #48]	; 0x30
                config.motor_armed = true;
  4003b6:	2101      	movs	r1, #1
  4003b8:	4b4d      	ldr	r3, [pc, #308]	; (4004f0 <main+0x214>)
  4003ba:	7519      	strb	r1, [r3, #20]
                printf("motor_armed: %d\r\n", config.motor_armed);
  4003bc:	4850      	ldr	r0, [pc, #320]	; (400500 <main+0x224>)
  4003be:	f003 f9b3 	bl	403728 <iprintf>
            if (config.imu_calibrate) {
  4003c2:	4c4b      	ldr	r4, [pc, #300]	; (4004f0 <main+0x214>)
                config.imu_calibrate = false;
  4003c4:	2600      	movs	r6, #0
            long x = ap.imu.x_axis;
  4003c6:	f8df b154 	ldr.w	fp, [pc, #340]	; 40051c <main+0x240>
            long power_left = map(x, ANGLE_MID, ANGLE_MAX, PWM_MIN, PWM_MAX);
  4003ca:	f44f 7761 	mov.w	r7, #900	; 0x384
                motor_set_power(motors[1], power_left + config.motor_offset);
  4003ce:	f8df 9150 	ldr.w	r9, [pc, #336]	; 400520 <main+0x244>
  4003d2:	f109 0364 	add.w	r3, r9, #100	; 0x64
  4003d6:	9313      	str	r3, [sp, #76]	; 0x4c
                break;
  4003d8:	e044      	b.n	400464 <main+0x188>
                imu_calibrate();
  4003da:	f001 f82b 	bl	401434 <imu_calibrate>
                pid_init();
  4003de:	f001 fae1 	bl	4019a4 <pid_init>
                config.imu_calibrate = false;
  4003e2:	75e6      	strb	r6, [r4, #23]
  4003e4:	e041      	b.n	40046a <main+0x18e>
                motor_set_power(motors[1], power_left + config.motor_offset);
  4003e6:	6923      	ldr	r3, [r4, #16]
  4003e8:	4443      	add	r3, r8
  4003ea:	9311      	str	r3, [sp, #68]	; 0x44
  4003ec:	f04f 0a44 	mov.w	sl, #68	; 0x44
  4003f0:	4652      	mov	r2, sl
  4003f2:	9913      	ldr	r1, [sp, #76]	; 0x4c
  4003f4:	4668      	mov	r0, sp
  4003f6:	f002 fd45 	bl	402e84 <memcpy>
  4003fa:	f109 0354 	add.w	r3, r9, #84	; 0x54
  4003fe:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  400400:	f001 fa5e 	bl	4018c0 <motor_set_power>
                motor_set_power(motors[0], power_right + config.motor_offset);
  400404:	6923      	ldr	r3, [r4, #16]
  400406:	442b      	add	r3, r5
  400408:	9311      	str	r3, [sp, #68]	; 0x44
  40040a:	4652      	mov	r2, sl
  40040c:	f109 0110 	add.w	r1, r9, #16
  400410:	4668      	mov	r0, sp
  400412:	f002 fd37 	bl	402e84 <memcpy>
  400416:	e899 000f 	ldmia.w	r9, {r0, r1, r2, r3}
  40041a:	f001 fa51 	bl	4018c0 <motor_set_power>
  40041e:	e044      	b.n	4004aa <main+0x1ce>
                    f_log_timeout = cph_get_millis() + 100;
  400420:	4b38      	ldr	r3, [pc, #224]	; (400504 <main+0x228>)
  400422:	681b      	ldr	r3, [r3, #0]
  400424:	3364      	adds	r3, #100	; 0x64
  400426:	4a38      	ldr	r2, [pc, #224]	; (400508 <main+0x22c>)
  400428:	6013      	str	r3, [r2, #0]
                    printf("x_axis:\t%f\t", ap.imu.x_axis);
  40042a:	f8db 0000 	ldr.w	r0, [fp]
  40042e:	f006 feb9 	bl	4071a4 <__aeabi_f2d>
  400432:	4602      	mov	r2, r0
  400434:	460b      	mov	r3, r1
  400436:	4835      	ldr	r0, [pc, #212]	; (40050c <main+0x230>)
  400438:	f003 f976 	bl	403728 <iprintf>
                    printf("y_axis:\t%f\t", ap.imu.y_axis);
  40043c:	f8db 0004 	ldr.w	r0, [fp, #4]
  400440:	f006 feb0 	bl	4071a4 <__aeabi_f2d>
  400444:	4602      	mov	r2, r0
  400446:	460b      	mov	r3, r1
  400448:	4831      	ldr	r0, [pc, #196]	; (400510 <main+0x234>)
  40044a:	f003 f96d 	bl	403728 <iprintf>
                    printf("pwr_left:\t%ld\t", power_left);
  40044e:	4641      	mov	r1, r8
  400450:	4830      	ldr	r0, [pc, #192]	; (400514 <main+0x238>)
  400452:	f003 f969 	bl	403728 <iprintf>
                    printf("pwr_right:\t%ld\t", power_right);
  400456:	4629      	mov	r1, r5
  400458:	482f      	ldr	r0, [pc, #188]	; (400518 <main+0x23c>)
  40045a:	f003 f965 	bl	403728 <iprintf>
                    printf("\r\n");
  40045e:	4823      	ldr	r0, [pc, #140]	; (4004ec <main+0x210>)
  400460:	f003 f962 	bl	403728 <iprintf>
            if (config.imu_calibrate) {
  400464:	7de3      	ldrb	r3, [r4, #23]
  400466:	2b00      	cmp	r3, #0
  400468:	d1b7      	bne.n	4003da <main+0xfe>
            cli_tick();
  40046a:	f000 fa85 	bl	400978 <cli_tick>
            imu_tick();
  40046e:	f000 fff7 	bl	401460 <imu_tick>
            motor_tick();
  400472:	f001 fa23 	bl	4018bc <motor_tick>
            long x = ap.imu.x_axis;
  400476:	f8db 0000 	ldr.w	r0, [fp]
  40047a:	f007 fd07 	bl	407e8c <__aeabi_f2iz>
  40047e:	4682      	mov	sl, r0
            long power_left = map(x, ANGLE_MID, ANGLE_MAX, PWM_MIN, PWM_MAX);
  400480:	f640 0534 	movw	r5, #2100	; 0x834
  400484:	9500      	str	r5, [sp, #0]
  400486:	463b      	mov	r3, r7
  400488:	225a      	movs	r2, #90	; 0x5a
  40048a:	4631      	mov	r1, r6
  40048c:	f000 f858 	bl	400540 <map>
  400490:	4680      	mov	r8, r0
            long power_right = map(x, ANGLE_MID, ANGLE_MIN, PWM_MIN, PWM_MAX);
  400492:	9500      	str	r5, [sp, #0]
  400494:	463b      	mov	r3, r7
  400496:	f06f 0259 	mvn.w	r2, #89	; 0x59
  40049a:	4631      	mov	r1, r6
  40049c:	4650      	mov	r0, sl
  40049e:	f000 f84f 	bl	400540 <map>
  4004a2:	4605      	mov	r5, r0
            if (config.motor_armed) {
  4004a4:	7d23      	ldrb	r3, [r4, #20]
  4004a6:	2b00      	cmp	r3, #0
  4004a8:	d19d      	bne.n	4003e6 <main+0x10a>
            if (config.log_imu) {
  4004aa:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
  4004ae:	2b00      	cmp	r3, #0
  4004b0:	d0d8      	beq.n	400464 <main+0x188>
                if (cph_get_millis() >= f_log_timeout) {
  4004b2:	4b14      	ldr	r3, [pc, #80]	; (400504 <main+0x228>)
  4004b4:	681a      	ldr	r2, [r3, #0]
  4004b6:	4b14      	ldr	r3, [pc, #80]	; (400508 <main+0x22c>)
  4004b8:	681b      	ldr	r3, [r3, #0]
  4004ba:	429a      	cmp	r2, r3
  4004bc:	d3d2      	bcc.n	400464 <main+0x188>
  4004be:	e7af      	b.n	400420 <main+0x144>
  4004c0:	400e0800 	.word	0x400e0800
  4004c4:	20000500 	.word	0x20000500
  4004c8:	200004fc 	.word	0x200004fc
  4004cc:	00400265 	.word	0x00400265
  4004d0:	200004f8 	.word	0x200004f8
  4004d4:	004001e9 	.word	0x004001e9
  4004d8:	07270e00 	.word	0x07270e00
  4004dc:	20000014 	.word	0x20000014
  4004e0:	00407f88 	.word	0x00407f88
  4004e4:	00407fa4 	.word	0x00407fa4
  4004e8:	000d1437 	.word	0x000d1437
  4004ec:	00407fa0 	.word	0x00407fa0
  4004f0:	200006f0 	.word	0x200006f0
  4004f4:	00407fa8 	.word	0x00407fa8
  4004f8:	400e0e00 	.word	0x400e0e00
  4004fc:	400e1200 	.word	0x400e1200
  400500:	00407fcc 	.word	0x00407fcc
  400504:	20000208 	.word	0x20000208
  400508:	20000204 	.word	0x20000204
  40050c:	00407fe0 	.word	0x00407fe0
  400510:	00407fec 	.word	0x00407fec
  400514:	00407ff8 	.word	0x00407ff8
  400518:	00408008 	.word	0x00408008
  40051c:	20000854 	.word	0x20000854
  400520:	20000534 	.word	0x20000534

00400524 <config_init>:
	// config.axis_swap_xy = false;
	// config.fpv_freeze_pitch = false;
	// config.fpv_freeze_roll = false;
	// config.max_pwm_fpv_pitch = 80;
	// config.max_pwm_fpv_roll = 80;
    config.gyro_calibrate = true;
  400524:	4b05      	ldr	r3, [pc, #20]	; (40053c <config_init+0x18>)
  400526:	2201      	movs	r2, #1
  400528:	755a      	strb	r2, [r3, #21]
	config.accel_calibrate = false;
  40052a:	2100      	movs	r1, #0
  40052c:	7599      	strb	r1, [r3, #22]
	config.imu_calibrate = true;
  40052e:	75da      	strb	r2, [r3, #23]
	config.log_motor = false;
  400530:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
	config.log_imu = true;
  400534:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
  400538:	4770      	bx	lr
  40053a:	bf00      	nop
  40053c:	200006f0 	.word	0x200006f0

00400540 <map>:
#include "cph_util.h"

long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  400540:	b410      	push	{r4}
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  400542:	1a40      	subs	r0, r0, r1
  400544:	9c01      	ldr	r4, [sp, #4]
  400546:	1ae4      	subs	r4, r4, r3
  400548:	fb04 f000 	mul.w	r0, r4, r0
  40054c:	1a52      	subs	r2, r2, r1
  40054e:	fb90 f0f2 	sdiv	r0, r0, r2
  400552:	4418      	add	r0, r3
  400554:	bc10      	pop	{r4}
  400556:	4770      	bx	lr

00400558 <SysTick_Handler>:


volatile uint32_t g_cph_millis = 0;

void SysTick_Handler(void) {
	g_cph_millis++;
  400558:	4a02      	ldr	r2, [pc, #8]	; (400564 <SysTick_Handler+0xc>)
  40055a:	6813      	ldr	r3, [r2, #0]
  40055c:	3301      	adds	r3, #1
  40055e:	6013      	str	r3, [r2, #0]
}
  400560:	4770      	bx	lr
  400562:	bf00      	nop
  400564:	20000208 	.word	0x20000208

00400568 <cph_millis_init>:
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1) > SysTick_LOAD_RELOAD_Msk)  return (1);      /* Reload value impossible */

  SysTick->LOAD  = ticks - 1;                                  /* set reload register */
  400568:	4b05      	ldr	r3, [pc, #20]	; (400580 <cph_millis_init+0x18>)
  40056a:	4a06      	ldr	r2, [pc, #24]	; (400584 <cph_millis_init+0x1c>)
  40056c:	605a      	str	r2, [r3, #4]
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  40056e:	4a06      	ldr	r2, [pc, #24]	; (400588 <cph_millis_init+0x20>)
  400570:	21f0      	movs	r1, #240	; 0xf0
  400572:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);  /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0;                                          /* Load the SysTick Counter Value */
  400576:	2200      	movs	r2, #0
  400578:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
  40057a:	2207      	movs	r2, #7
  40057c:	601a      	str	r2, [r3, #0]

void cph_millis_init(void) {
	SysTick_Config(sysclk_get_cpu_hz() / 1000);
}
  40057e:	4770      	bx	lr
  400580:	e000e010 	.word	0xe000e010
  400584:	0001d4bf 	.word	0x0001d4bf
  400588:	e000ed00 	.word	0xe000ed00

0040058c <init_buffer>:
	init_buffer();
	init_lines();
}

void init_buffer()
{
  40058c:	b508      	push	{r3, lr}
	cli_line_index = 0;
  40058e:	2100      	movs	r1, #0
  400590:	4b03      	ldr	r3, [pc, #12]	; (4005a0 <init_buffer+0x14>)
  400592:	6019      	str	r1, [r3, #0]
	memset(cli_line_buffer, '\0', sizeof(cli_line_buffer));
  400594:	2281      	movs	r2, #129	; 0x81
  400596:	4803      	ldr	r0, [pc, #12]	; (4005a4 <init_buffer+0x18>)
  400598:	f002 fc82 	bl	402ea0 <memset>
}
  40059c:	bd08      	pop	{r3, pc}
  40059e:	bf00      	nop
  4005a0:	20000414 	.word	0x20000414
  4005a4:	20000718 	.word	0x20000718

004005a8 <init_lines>:

void init_lines()
{
  4005a8:	b508      	push	{r3, lr}
	memset(cli_lines, '\0', sizeof(cli_lines));
  4005aa:	2281      	movs	r2, #129	; 0x81
  4005ac:	2100      	movs	r1, #0
  4005ae:	4802      	ldr	r0, [pc, #8]	; (4005b8 <init_lines+0x10>)
  4005b0:	f002 fc76 	bl	402ea0 <memset>
}
  4005b4:	bd08      	pop	{r3, pc}
  4005b6:	bf00      	nop
  4005b8:	2000079c 	.word	0x2000079c

004005bc <cli_init>:
{
  4005bc:	b508      	push	{r3, lr}
	init_buffer();
  4005be:	f7ff ffe5 	bl	40058c <init_buffer>
	init_lines();
  4005c2:	f7ff fff1 	bl	4005a8 <init_lines>
}
  4005c6:	bd08      	pop	{r3, pc}

004005c8 <cli_handle_command>:

}

//printf("motor0: %d\r\n", atoi(parm));
void cli_handle_command(char *cmd, char *parm)
{
  4005c8:	b5f0      	push	{r4, r5, r6, r7, lr}
  4005ca:	b093      	sub	sp, #76	; 0x4c
  4005cc:	4604      	mov	r4, r0
  4005ce:	460d      	mov	r5, r1

	/*
	 * 	Autopilot settings
	 */
	if (strcmp(cmd, "apx") == 0) {
  4005d0:	4996      	ldr	r1, [pc, #600]	; (40082c <cli_handle_command+0x264>)
  4005d2:	f003 fa01 	bl	4039d8 <strcmp>
  4005d6:	2800      	cmp	r0, #0
  4005d8:	d050      	beq.n	40067c <cli_handle_command+0xb4>
		AP.desired_angle_x = atof(parm);
		printf("AP.desired_angle_x: %f\r\n", AP.desired_angle_x);
	}
	if (strcmp(cmd, "apy") == 0) {
  4005da:	4995      	ldr	r1, [pc, #596]	; (400830 <cli_handle_command+0x268>)
  4005dc:	4620      	mov	r0, r4
  4005de:	f003 f9fb 	bl	4039d8 <strcmp>
  4005e2:	2800      	cmp	r0, #0
  4005e4:	d059      	beq.n	40069a <cli_handle_command+0xd2>
	}	

	/*
	 * 	Pid loop configuration
	 */
	if (strcmp(cmd, "kp") == 0) {
  4005e6:	4993      	ldr	r1, [pc, #588]	; (400834 <cli_handle_command+0x26c>)
  4005e8:	4620      	mov	r0, r4
  4005ea:	f003 f9f5 	bl	4039d8 <strcmp>
  4005ee:	2800      	cmp	r0, #0
  4005f0:	d062      	beq.n	4006b8 <cli_handle_command+0xf0>
		config.pid_kp = atof(parm);
		printf("config.pid_kp: %f\r\n", config.pid_kp);
	}

	if (strcmp(cmd, "ki") == 0) {
  4005f2:	4991      	ldr	r1, [pc, #580]	; (400838 <cli_handle_command+0x270>)
  4005f4:	4620      	mov	r0, r4
  4005f6:	f003 f9ef 	bl	4039d8 <strcmp>
  4005fa:	2800      	cmp	r0, #0
  4005fc:	d06b      	beq.n	4006d6 <cli_handle_command+0x10e>
		config.pid_ki = atof(parm);
		printf("config.pid_ki: %f\r\n", config.pid_ki);
	}

	if (strcmp(cmd, "kd") == 0) {
  4005fe:	498f      	ldr	r1, [pc, #572]	; (40083c <cli_handle_command+0x274>)
  400600:	4620      	mov	r0, r4
  400602:	f003 f9e9 	bl	4039d8 <strcmp>
  400606:	2800      	cmp	r0, #0
  400608:	d074      	beq.n	4006f4 <cli_handle_command+0x12c>

	/*
	 * 	IMU settings
	 */	

	if (strcmp(cmd, "imu_calibrate") == 0) {
  40060a:	498d      	ldr	r1, [pc, #564]	; (400840 <cli_handle_command+0x278>)
  40060c:	4620      	mov	r0, r4
  40060e:	f003 f9e3 	bl	4039d8 <strcmp>
  400612:	2800      	cmp	r0, #0
  400614:	d07d      	beq.n	400712 <cli_handle_command+0x14a>
	}

	/*
	 * 	Motor settings
	 */	
	if (strcmp(cmd, "motor_armed") == 0) {
  400616:	498b      	ldr	r1, [pc, #556]	; (400844 <cli_handle_command+0x27c>)
  400618:	4620      	mov	r0, r4
  40061a:	f003 f9dd 	bl	4039d8 <strcmp>
  40061e:	2800      	cmp	r0, #0
  400620:	f000 8083 	beq.w	40072a <cli_handle_command+0x162>
		config.motor_armed = atoi(parm);
		printf("motor_armed: %d\r\n", config.motor_armed);
	}

	if (strcmp(cmd, "motor_offset") == 0) {
  400624:	4988      	ldr	r1, [pc, #544]	; (400848 <cli_handle_command+0x280>)
  400626:	4620      	mov	r0, r4
  400628:	f003 f9d6 	bl	4039d8 <strcmp>
  40062c:	2800      	cmp	r0, #0
  40062e:	f000 8088 	beq.w	400742 <cli_handle_command+0x17a>
		config.motor_offset = atoi(parm);
		printf("motor_offset: %d\r\n", config.motor_offset);
	}

	if (strcmp(cmd, "motor_min") == 0) {
  400632:	4986      	ldr	r1, [pc, #536]	; (40084c <cli_handle_command+0x284>)
  400634:	4620      	mov	r0, r4
  400636:	f003 f9cf 	bl	4039d8 <strcmp>
  40063a:	2800      	cmp	r0, #0
  40063c:	f000 808b 	beq.w	400756 <cli_handle_command+0x18e>
		printf("motor min command issued\r\n");
		motor_min(motors[0]);
		motor_min(motors[1]);
	}

	if (strcmp(cmd, "motor_mid") == 0) {
  400640:	4983      	ldr	r1, [pc, #524]	; (400850 <cli_handle_command+0x288>)
  400642:	4620      	mov	r0, r4
  400644:	f003 f9c8 	bl	4039d8 <strcmp>
  400648:	2800      	cmp	r0, #0
  40064a:	f000 809f 	beq.w	40078c <cli_handle_command+0x1c4>
		printf("motor mid command issued\r\n");
		motor_mid(motors[0]);
		motor_mid(motors[1]);
	}

	if (strcmp(cmd, "motor_max") == 0) {
  40064e:	4981      	ldr	r1, [pc, #516]	; (400854 <cli_handle_command+0x28c>)
  400650:	4620      	mov	r0, r4
  400652:	f003 f9c1 	bl	4039d8 <strcmp>
  400656:	2800      	cmp	r0, #0
  400658:	f000 80b3 	beq.w	4007c2 <cli_handle_command+0x1fa>
	} 

	/*
	 * 	Log settings
	 */	
	if (strcmp(cmd, "log_imu") == 0) {
  40065c:	497e      	ldr	r1, [pc, #504]	; (400858 <cli_handle_command+0x290>)
  40065e:	4620      	mov	r0, r4
  400660:	f003 f9ba 	bl	4039d8 <strcmp>
  400664:	2800      	cmp	r0, #0
  400666:	f000 80c7 	beq.w	4007f8 <cli_handle_command+0x230>
		config.log_imu = atoi(parm);
		printf("log_imu: %d\r\n", config.log_imu);
	}

	if (strcmp(cmd, "log_motor") == 0) {
  40066a:	497c      	ldr	r1, [pc, #496]	; (40085c <cli_handle_command+0x294>)
  40066c:	4620      	mov	r0, r4
  40066e:	f003 f9b3 	bl	4039d8 <strcmp>
  400672:	2800      	cmp	r0, #0
  400674:	f000 80cd 	beq.w	400812 <cli_handle_command+0x24a>
		config.log_motor = atoi(parm);
		printf("log_motor: %d\r\n", config.log_motor);
	}	
}
  400678:	b013      	add	sp, #76	; 0x4c
  40067a:	bdf0      	pop	{r4, r5, r6, r7, pc}
		AP.desired_angle_x = atof(parm);
  40067c:	4628      	mov	r0, r5
  40067e:	f002 fbcf 	bl	402e20 <atof>
  400682:	f007 f8df 	bl	407844 <__aeabi_d2f>
  400686:	4b76      	ldr	r3, [pc, #472]	; (400860 <cli_handle_command+0x298>)
  400688:	6058      	str	r0, [r3, #4]
		printf("AP.desired_angle_x: %f\r\n", AP.desired_angle_x);
  40068a:	f006 fd8b 	bl	4071a4 <__aeabi_f2d>
  40068e:	4602      	mov	r2, r0
  400690:	460b      	mov	r3, r1
  400692:	4874      	ldr	r0, [pc, #464]	; (400864 <cli_handle_command+0x29c>)
  400694:	f003 f848 	bl	403728 <iprintf>
  400698:	e79f      	b.n	4005da <cli_handle_command+0x12>
		AP.desired_angle_y = atof(parm);
  40069a:	4628      	mov	r0, r5
  40069c:	f002 fbc0 	bl	402e20 <atof>
  4006a0:	f007 f8d0 	bl	407844 <__aeabi_d2f>
  4006a4:	4b6e      	ldr	r3, [pc, #440]	; (400860 <cli_handle_command+0x298>)
  4006a6:	6098      	str	r0, [r3, #8]
		printf("AP.desired_angle_y: %f\r\n", AP.desired_angle_y);
  4006a8:	f006 fd7c 	bl	4071a4 <__aeabi_f2d>
  4006ac:	4602      	mov	r2, r0
  4006ae:	460b      	mov	r3, r1
  4006b0:	486d      	ldr	r0, [pc, #436]	; (400868 <cli_handle_command+0x2a0>)
  4006b2:	f003 f839 	bl	403728 <iprintf>
  4006b6:	e796      	b.n	4005e6 <cli_handle_command+0x1e>
		config.pid_kp = atof(parm);
  4006b8:	4628      	mov	r0, r5
  4006ba:	f002 fbb1 	bl	402e20 <atof>
  4006be:	f007 f8c1 	bl	407844 <__aeabi_d2f>
  4006c2:	4b6a      	ldr	r3, [pc, #424]	; (40086c <cli_handle_command+0x2a4>)
  4006c4:	6018      	str	r0, [r3, #0]
		printf("config.pid_kp: %f\r\n", config.pid_kp);
  4006c6:	f006 fd6d 	bl	4071a4 <__aeabi_f2d>
  4006ca:	4602      	mov	r2, r0
  4006cc:	460b      	mov	r3, r1
  4006ce:	4868      	ldr	r0, [pc, #416]	; (400870 <cli_handle_command+0x2a8>)
  4006d0:	f003 f82a 	bl	403728 <iprintf>
  4006d4:	e78d      	b.n	4005f2 <cli_handle_command+0x2a>
		config.pid_ki = atof(parm);
  4006d6:	4628      	mov	r0, r5
  4006d8:	f002 fba2 	bl	402e20 <atof>
  4006dc:	f007 f8b2 	bl	407844 <__aeabi_d2f>
  4006e0:	4b62      	ldr	r3, [pc, #392]	; (40086c <cli_handle_command+0x2a4>)
  4006e2:	6058      	str	r0, [r3, #4]
		printf("config.pid_ki: %f\r\n", config.pid_ki);
  4006e4:	f006 fd5e 	bl	4071a4 <__aeabi_f2d>
  4006e8:	4602      	mov	r2, r0
  4006ea:	460b      	mov	r3, r1
  4006ec:	4861      	ldr	r0, [pc, #388]	; (400874 <cli_handle_command+0x2ac>)
  4006ee:	f003 f81b 	bl	403728 <iprintf>
  4006f2:	e784      	b.n	4005fe <cli_handle_command+0x36>
		config.pid_kd = atof(parm);
  4006f4:	4628      	mov	r0, r5
  4006f6:	f002 fb93 	bl	402e20 <atof>
  4006fa:	f007 f8a3 	bl	407844 <__aeabi_d2f>
  4006fe:	4b5b      	ldr	r3, [pc, #364]	; (40086c <cli_handle_command+0x2a4>)
  400700:	6098      	str	r0, [r3, #8]
		printf("config.pid_kd: %f\r\n", config.pid_kd);
  400702:	f006 fd4f 	bl	4071a4 <__aeabi_f2d>
  400706:	4602      	mov	r2, r0
  400708:	460b      	mov	r3, r1
  40070a:	485b      	ldr	r0, [pc, #364]	; (400878 <cli_handle_command+0x2b0>)
  40070c:	f003 f80c 	bl	403728 <iprintf>
  400710:	e77b      	b.n	40060a <cli_handle_command+0x42>
		config.imu_calibrate = atoi(parm);
  400712:	4628      	mov	r0, r5
  400714:	f002 fb87 	bl	402e26 <atoi>
  400718:	1c01      	adds	r1, r0, #0
  40071a:	bf18      	it	ne
  40071c:	2101      	movne	r1, #1
  40071e:	4b53      	ldr	r3, [pc, #332]	; (40086c <cli_handle_command+0x2a4>)
  400720:	75d9      	strb	r1, [r3, #23]
		printf("imu_calibrate: %d\r\n", config.imu_calibrate);
  400722:	4856      	ldr	r0, [pc, #344]	; (40087c <cli_handle_command+0x2b4>)
  400724:	f003 f800 	bl	403728 <iprintf>
  400728:	e775      	b.n	400616 <cli_handle_command+0x4e>
		config.motor_armed = atoi(parm);
  40072a:	4628      	mov	r0, r5
  40072c:	f002 fb7b 	bl	402e26 <atoi>
  400730:	1c01      	adds	r1, r0, #0
  400732:	bf18      	it	ne
  400734:	2101      	movne	r1, #1
  400736:	4b4d      	ldr	r3, [pc, #308]	; (40086c <cli_handle_command+0x2a4>)
  400738:	7519      	strb	r1, [r3, #20]
		printf("motor_armed: %d\r\n", config.motor_armed);
  40073a:	4851      	ldr	r0, [pc, #324]	; (400880 <cli_handle_command+0x2b8>)
  40073c:	f002 fff4 	bl	403728 <iprintf>
  400740:	e770      	b.n	400624 <cli_handle_command+0x5c>
		config.motor_offset = atoi(parm);
  400742:	4628      	mov	r0, r5
  400744:	f002 fb6f 	bl	402e26 <atoi>
  400748:	4601      	mov	r1, r0
  40074a:	4b48      	ldr	r3, [pc, #288]	; (40086c <cli_handle_command+0x2a4>)
  40074c:	6118      	str	r0, [r3, #16]
		printf("motor_offset: %d\r\n", config.motor_offset);
  40074e:	484d      	ldr	r0, [pc, #308]	; (400884 <cli_handle_command+0x2bc>)
  400750:	f002 ffea 	bl	403728 <iprintf>
  400754:	e76d      	b.n	400632 <cli_handle_command+0x6a>
		printf("motor min command issued\r\n");
  400756:	484c      	ldr	r0, [pc, #304]	; (400888 <cli_handle_command+0x2c0>)
  400758:	f002 ffe6 	bl	403728 <iprintf>
		motor_min(motors[0]);
  40075c:	4e4b      	ldr	r6, [pc, #300]	; (40088c <cli_handle_command+0x2c4>)
  40075e:	2744      	movs	r7, #68	; 0x44
  400760:	463a      	mov	r2, r7
  400762:	f106 0110 	add.w	r1, r6, #16
  400766:	4668      	mov	r0, sp
  400768:	f002 fb8c 	bl	402e84 <memcpy>
  40076c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  400770:	f001 f8c4 	bl	4018fc <motor_min>
		motor_min(motors[1]);
  400774:	463a      	mov	r2, r7
  400776:	f106 0164 	add.w	r1, r6, #100	; 0x64
  40077a:	4668      	mov	r0, sp
  40077c:	f002 fb82 	bl	402e84 <memcpy>
  400780:	3654      	adds	r6, #84	; 0x54
  400782:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  400786:	f001 f8b9 	bl	4018fc <motor_min>
  40078a:	e759      	b.n	400640 <cli_handle_command+0x78>
		printf("motor mid command issued\r\n");
  40078c:	4840      	ldr	r0, [pc, #256]	; (400890 <cli_handle_command+0x2c8>)
  40078e:	f002 ffcb 	bl	403728 <iprintf>
		motor_mid(motors[0]);
  400792:	4e3e      	ldr	r6, [pc, #248]	; (40088c <cli_handle_command+0x2c4>)
  400794:	2744      	movs	r7, #68	; 0x44
  400796:	463a      	mov	r2, r7
  400798:	f106 0110 	add.w	r1, r6, #16
  40079c:	4668      	mov	r0, sp
  40079e:	f002 fb71 	bl	402e84 <memcpy>
  4007a2:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  4007a6:	f001 f8c5 	bl	401934 <motor_mid>
		motor_mid(motors[1]);
  4007aa:	463a      	mov	r2, r7
  4007ac:	f106 0164 	add.w	r1, r6, #100	; 0x64
  4007b0:	4668      	mov	r0, sp
  4007b2:	f002 fb67 	bl	402e84 <memcpy>
  4007b6:	3654      	adds	r6, #84	; 0x54
  4007b8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  4007bc:	f001 f8ba 	bl	401934 <motor_mid>
  4007c0:	e745      	b.n	40064e <cli_handle_command+0x86>
		printf("motor max command issued\r\n");
  4007c2:	4834      	ldr	r0, [pc, #208]	; (400894 <cli_handle_command+0x2cc>)
  4007c4:	f002 ffb0 	bl	403728 <iprintf>
		motor_max(motors[0]);
  4007c8:	4e30      	ldr	r6, [pc, #192]	; (40088c <cli_handle_command+0x2c4>)
  4007ca:	2744      	movs	r7, #68	; 0x44
  4007cc:	463a      	mov	r2, r7
  4007ce:	f106 0110 	add.w	r1, r6, #16
  4007d2:	4668      	mov	r0, sp
  4007d4:	f002 fb56 	bl	402e84 <memcpy>
  4007d8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  4007dc:	f001 f8c6 	bl	40196c <motor_max>
		motor_max(motors[1]);
  4007e0:	463a      	mov	r2, r7
  4007e2:	f106 0164 	add.w	r1, r6, #100	; 0x64
  4007e6:	4668      	mov	r0, sp
  4007e8:	f002 fb4c 	bl	402e84 <memcpy>
  4007ec:	3654      	adds	r6, #84	; 0x54
  4007ee:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
  4007f2:	f001 f8bb 	bl	40196c <motor_max>
  4007f6:	e731      	b.n	40065c <cli_handle_command+0x94>
		config.log_imu = atoi(parm);
  4007f8:	4628      	mov	r0, r5
  4007fa:	f002 fb14 	bl	402e26 <atoi>
  4007fe:	1c01      	adds	r1, r0, #0
  400800:	bf18      	it	ne
  400802:	2101      	movne	r1, #1
  400804:	4b19      	ldr	r3, [pc, #100]	; (40086c <cli_handle_command+0x2a4>)
  400806:	f883 1025 	strb.w	r1, [r3, #37]	; 0x25
		printf("log_imu: %d\r\n", config.log_imu);
  40080a:	4823      	ldr	r0, [pc, #140]	; (400898 <cli_handle_command+0x2d0>)
  40080c:	f002 ff8c 	bl	403728 <iprintf>
  400810:	e72b      	b.n	40066a <cli_handle_command+0xa2>
		config.log_motor = atoi(parm);
  400812:	4628      	mov	r0, r5
  400814:	f002 fb07 	bl	402e26 <atoi>
  400818:	1c01      	adds	r1, r0, #0
  40081a:	bf18      	it	ne
  40081c:	2101      	movne	r1, #1
  40081e:	4b13      	ldr	r3, [pc, #76]	; (40086c <cli_handle_command+0x2a4>)
  400820:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
		printf("log_motor: %d\r\n", config.log_motor);
  400824:	481d      	ldr	r0, [pc, #116]	; (40089c <cli_handle_command+0x2d4>)
  400826:	f002 ff7f 	bl	403728 <iprintf>
}
  40082a:	e725      	b.n	400678 <cli_handle_command+0xb0>
  40082c:	00408018 	.word	0x00408018
  400830:	00408038 	.word	0x00408038
  400834:	00408058 	.word	0x00408058
  400838:	00408070 	.word	0x00408070
  40083c:	00408088 	.word	0x00408088
  400840:	004080a0 	.word	0x004080a0
  400844:	004080c4 	.word	0x004080c4
  400848:	004080d0 	.word	0x004080d0
  40084c:	004080f4 	.word	0x004080f4
  400850:	0040811c 	.word	0x0040811c
  400854:	00408144 	.word	0x00408144
  400858:	0040816c 	.word	0x0040816c
  40085c:	00408184 	.word	0x00408184
  400860:	20000890 	.word	0x20000890
  400864:	0040801c 	.word	0x0040801c
  400868:	0040803c 	.word	0x0040803c
  40086c:	200006f0 	.word	0x200006f0
  400870:	0040805c 	.word	0x0040805c
  400874:	00408074 	.word	0x00408074
  400878:	0040808c 	.word	0x0040808c
  40087c:	004080b0 	.word	0x004080b0
  400880:	00407fcc 	.word	0x00407fcc
  400884:	004080e0 	.word	0x004080e0
  400888:	00408100 	.word	0x00408100
  40088c:	20000534 	.word	0x20000534
  400890:	00408128 	.word	0x00408128
  400894:	00408150 	.word	0x00408150
  400898:	00408174 	.word	0x00408174
  40089c:	00408190 	.word	0x00408190

004008a0 <cli_put_char>:
	return false;
}

void cli_put_char(unsigned char c)
{
	int i = (unsigned int)(cli_buffer.head + 1) % CLI_RX_BUFFER_SIZE;
  4008a0:	4a07      	ldr	r2, [pc, #28]	; (4008c0 <cli_put_char+0x20>)
  4008a2:	f8d2 1200 	ldr.w	r1, [r2, #512]	; 0x200
  4008a6:	1c4b      	adds	r3, r1, #1
  4008a8:	f3c3 0308 	ubfx	r3, r3, #0, #9

	// if we should be storing the received character into the location
	// just before the tail (meaning that the head would advance to the
	// current location of the tail), we're about to overflow the buffer
	// and so we don't write the character or advance the head.
	if (i != cli_buffer.tail) {
  4008ac:	f8d2 2204 	ldr.w	r2, [r2, #516]	; 0x204
  4008b0:	429a      	cmp	r2, r3
  4008b2:	d003      	beq.n	4008bc <cli_put_char+0x1c>
		cli_buffer.buffer[cli_buffer.head] = c;
  4008b4:	4a02      	ldr	r2, [pc, #8]	; (4008c0 <cli_put_char+0x20>)
  4008b6:	5450      	strb	r0, [r2, r1]
		cli_buffer.head = i;
  4008b8:	f8c2 3200 	str.w	r3, [r2, #512]	; 0x200
	}
}
  4008bc:	4770      	bx	lr
  4008be:	bf00      	nop
  4008c0:	2000020c 	.word	0x2000020c

004008c4 <cli_read_device>:
{
  4008c4:	b500      	push	{lr}
  4008c6:	b083      	sub	sp, #12
	if (uart_is_rx_ready(UART1)) {
  4008c8:	4809      	ldr	r0, [pc, #36]	; (4008f0 <cli_read_device+0x2c>)
  4008ca:	f001 fcca 	bl	402262 <uart_is_rx_ready>
  4008ce:	b910      	cbnz	r0, 4008d6 <cli_read_device+0x12>
}
  4008d0:	b003      	add	sp, #12
  4008d2:	f85d fb04 	ldr.w	pc, [sp], #4
		uc_flag = uart_read(UART1, &uc_char);
  4008d6:	f10d 0107 	add.w	r1, sp, #7
  4008da:	4805      	ldr	r0, [pc, #20]	; (4008f0 <cli_read_device+0x2c>)
  4008dc:	f001 fccd 	bl	40227a <uart_read>
		if (!uc_flag) {
  4008e0:	b2c0      	uxtb	r0, r0
  4008e2:	2800      	cmp	r0, #0
  4008e4:	d1f4      	bne.n	4008d0 <cli_read_device+0xc>
			cli_put_char(uc_char);
  4008e6:	f89d 0007 	ldrb.w	r0, [sp, #7]
  4008ea:	f7ff ffd9 	bl	4008a0 <cli_put_char>
}
  4008ee:	e7ef      	b.n	4008d0 <cli_read_device+0xc>
  4008f0:	400e0800 	.word	0x400e0800

004008f4 <cli_data_available>:
}

uint8_t cli_data_available()
{

	return (uint8_t)(CLI_RX_BUFFER_SIZE + cli_buffer.head - cli_buffer.tail) % CLI_RX_BUFFER_SIZE;
  4008f4:	4b03      	ldr	r3, [pc, #12]	; (400904 <cli_data_available+0x10>)
  4008f6:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
  4008fa:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
  4008fe:	1ac0      	subs	r0, r0, r3
}
  400900:	b2c0      	uxtb	r0, r0
  400902:	4770      	bx	lr
  400904:	2000020c 	.word	0x2000020c

00400908 <cli_data_read>:

uint8_t cli_data_read(void)
{
	// if the head isn't ahead of the tail, we don't have any characters
	if (cli_buffer.head == cli_buffer.tail) {
  400908:	4a08      	ldr	r2, [pc, #32]	; (40092c <cli_data_read+0x24>)
  40090a:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
  40090e:	f8d2 2200 	ldr.w	r2, [r2, #512]	; 0x200
  400912:	429a      	cmp	r2, r3
  400914:	d007      	beq.n	400926 <cli_data_read+0x1e>
		return -1;
	} else {
		uint8_t c = cli_buffer.buffer[cli_buffer.tail];
  400916:	4a05      	ldr	r2, [pc, #20]	; (40092c <cli_data_read+0x24>)
  400918:	5cd0      	ldrb	r0, [r2, r3]
		cli_buffer.tail = (unsigned int)(cli_buffer.tail + 1) % CLI_RX_BUFFER_SIZE;
  40091a:	3301      	adds	r3, #1
  40091c:	f3c3 0308 	ubfx	r3, r3, #0, #9
  400920:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
		return c;
  400924:	4770      	bx	lr
		return -1;
  400926:	20ff      	movs	r0, #255	; 0xff
	}
  400928:	4770      	bx	lr
  40092a:	bf00      	nop
  40092c:	2000020c 	.word	0x2000020c

00400930 <handle_data>:
{
  400930:	b508      	push	{r3, lr}
	char c = cli_data_read();
  400932:	f7ff ffe9 	bl	400908 <cli_data_read>
	if(c == '\0') return false;
  400936:	b1a8      	cbz	r0, 400964 <handle_data+0x34>
	if(cli_line_index >= CLI_MAX_CHARS) return false;
  400938:	4b0c      	ldr	r3, [pc, #48]	; (40096c <handle_data+0x3c>)
  40093a:	681b      	ldr	r3, [r3, #0]
  40093c:	2b7f      	cmp	r3, #127	; 0x7f
  40093e:	dc13      	bgt.n	400968 <handle_data+0x38>
	cli_line_buffer[cli_line_index] = c;
  400940:	490b      	ldr	r1, [pc, #44]	; (400970 <handle_data+0x40>)
  400942:	54c8      	strb	r0, [r1, r3]
	cli_line_index++;
  400944:	3301      	adds	r3, #1
  400946:	4909      	ldr	r1, [pc, #36]	; (40096c <handle_data+0x3c>)
  400948:	600b      	str	r3, [r1, #0]
	if(c == CLI_TKEND) {
  40094a:	280d      	cmp	r0, #13
	return false;
  40094c:	bf18      	it	ne
  40094e:	2000      	movne	r0, #0
	if(c == CLI_TKEND) {
  400950:	d000      	beq.n	400954 <handle_data+0x24>
}
  400952:	bd08      	pop	{r3, pc}
		strcpy(cli_lines, cli_line_buffer);
  400954:	4906      	ldr	r1, [pc, #24]	; (400970 <handle_data+0x40>)
  400956:	4807      	ldr	r0, [pc, #28]	; (400974 <handle_data+0x44>)
  400958:	f003 f848 	bl	4039ec <strcpy>
		init_buffer();
  40095c:	f7ff fe16 	bl	40058c <init_buffer>
		return true;
  400960:	2001      	movs	r0, #1
  400962:	e7f6      	b.n	400952 <handle_data+0x22>
	if(c == '\0') return false;
  400964:	2000      	movs	r0, #0
  400966:	e7f4      	b.n	400952 <handle_data+0x22>
	if(cli_line_index >= CLI_MAX_CHARS) return false;
  400968:	2000      	movs	r0, #0
  40096a:	e7f2      	b.n	400952 <handle_data+0x22>
  40096c:	20000414 	.word	0x20000414
  400970:	20000718 	.word	0x20000718
  400974:	2000079c 	.word	0x2000079c

00400978 <cli_tick>:
{
  400978:	b530      	push	{r4, r5, lr}
  40097a:	b083      	sub	sp, #12
	cli_read_device();
  40097c:	f7ff ffa2 	bl	4008c4 <cli_read_device>
	if (cli_data_available()) {
  400980:	f7ff ffb8 	bl	4008f4 <cli_data_available>
  400984:	b908      	cbnz	r0, 40098a <cli_tick+0x12>
}
  400986:	b003      	add	sp, #12
  400988:	bd30      	pop	{r4, r5, pc}
		if (handle_data()) {
  40098a:	f7ff ffd1 	bl	400930 <handle_data>
  40098e:	2800      	cmp	r0, #0
  400990:	d0f9      	beq.n	400986 <cli_tick+0xe>
			cmd = strtok_r(cli_lines, CLI_DELIM, &saveptr);
  400992:	4c0a      	ldr	r4, [pc, #40]	; (4009bc <cli_tick+0x44>)
  400994:	aa01      	add	r2, sp, #4
  400996:	4621      	mov	r1, r4
  400998:	4809      	ldr	r0, [pc, #36]	; (4009c0 <cli_tick+0x48>)
  40099a:	f003 fe86 	bl	4046aa <strtok_r>
  40099e:	4605      	mov	r5, r0
			parm = strtok_r(NULL, CLI_DELIM, &saveptr);
  4009a0:	aa01      	add	r2, sp, #4
  4009a2:	4621      	mov	r1, r4
  4009a4:	2000      	movs	r0, #0
  4009a6:	f003 fe80 	bl	4046aa <strtok_r>
			if (parm != NULL)
  4009aa:	4601      	mov	r1, r0
  4009ac:	b110      	cbz	r0, 4009b4 <cli_tick+0x3c>
				cli_handle_command(cmd, parm);
  4009ae:	4628      	mov	r0, r5
  4009b0:	f7ff fe0a 	bl	4005c8 <cli_handle_command>
			init_lines();
  4009b4:	f7ff fdf8 	bl	4005a8 <init_lines>
}
  4009b8:	e7e5      	b.n	400986 <cli_tick+0xe>
  4009ba:	bf00      	nop
  4009bc:	004081a0 	.word	0x004081a0
  4009c0:	2000079c 	.word	0x2000079c

004009c4 <UART1_Handler>:

        lib_uart_write(u_cfg, *(data++));
	}
}

void UART1_Handler() {
  4009c4:	b500      	push	{lr}
  4009c6:	b083      	sub	sp, #12

   uint32_t dw_status = uart_get_status(UART1);
  4009c8:	480a      	ldr	r0, [pc, #40]	; (4009f4 <UART1_Handler+0x30>)
  4009ca:	f001 fc48 	bl	40225e <uart_get_status>
   
   if(dw_status & UART_SR_RXRDY) {
  4009ce:	f010 0f01 	tst.w	r0, #1
  4009d2:	d102      	bne.n	4009da <UART1_Handler+0x16>
      uint8_t received_byte;
      uart_read(UART1, &received_byte);
      uart_evt.on_datareceive(received_byte, 1);

   }
  4009d4:	b003      	add	sp, #12
  4009d6:	f85d fb04 	ldr.w	pc, [sp], #4
      uart_read(UART1, &received_byte);
  4009da:	f10d 0107 	add.w	r1, sp, #7
  4009de:	4805      	ldr	r0, [pc, #20]	; (4009f4 <UART1_Handler+0x30>)
  4009e0:	f001 fc4b 	bl	40227a <uart_read>
      uart_evt.on_datareceive(received_byte, 1);
  4009e4:	4b04      	ldr	r3, [pc, #16]	; (4009f8 <UART1_Handler+0x34>)
  4009e6:	681b      	ldr	r3, [r3, #0]
  4009e8:	2101      	movs	r1, #1
  4009ea:	f89d 0007 	ldrb.w	r0, [sp, #7]
  4009ee:	4798      	blx	r3
  4009f0:	e7f0      	b.n	4009d4 <UART1_Handler+0x10>
  4009f2:	bf00      	nop
  4009f4:	400e0800 	.word	0x400e0800
  4009f8:	20000820 	.word	0x20000820

004009fc <write_register8>:
int16_t read_register16(uint8_t address, uint8_t reg);
uint8_t read_bytes(uint8_t address, uint8_t reg, int8_t length, uint8_t *data);


void write_register8(uint8_t address, uint8_t reg, uint8_t value)
{
  4009fc:	b500      	push	{lr}
  4009fe:	b089      	sub	sp, #36	; 0x24
  400a00:	f88d 2007 	strb.w	r2, [sp, #7]
    twi_packet_t packet_tx;

    packet_tx.chip = address;
  400a04:	f88d 001c 	strb.w	r0, [sp, #28]
    packet_tx.addr[0] = reg;
  400a08:	f88d 100c 	strb.w	r1, [sp, #12]
    packet_tx.addr_length = sizeof(uint8_t);
  400a0c:	2301      	movs	r3, #1
  400a0e:	9304      	str	r3, [sp, #16]
    packet_tx.buffer = &value;
  400a10:	f10d 0207 	add.w	r2, sp, #7
  400a14:	9205      	str	r2, [sp, #20]
    packet_tx.length = sizeof(uint8_t);
  400a16:	9306      	str	r3, [sp, #24]

    uint32_t status = twi_master_write(IMU_TWI, &packet_tx);
  400a18:	a903      	add	r1, sp, #12
  400a1a:	4804      	ldr	r0, [pc, #16]	; (400a2c <write_register8+0x30>)
  400a1c:	f001 f950 	bl	401cc0 <twi_master_write>
    
    // if (status == TWI_SUCCESS) {
    //     puts("write_register: success\r\n");
    // }

    delay_ms(TWI_WAIT_TIME);
  400a20:	4803      	ldr	r0, [pc, #12]	; (400a30 <write_register8+0x34>)
  400a22:	f007 fe85 	bl	408730 <__portable_delay_cycles_veneer>
}
  400a26:	b009      	add	sp, #36	; 0x24
  400a28:	f85d fb04 	ldr.w	pc, [sp], #4
  400a2c:	40018000 	.word	0x40018000
  400a30:	00014ed3 	.word	0x00014ed3

00400a34 <read_register8>:

    delay_ms(TWI_WAIT_TIME);
}

uint8_t read_register8(uint8_t address, uint8_t reg)
{
  400a34:	b510      	push	{r4, lr}
  400a36:	b086      	sub	sp, #24
    uint8_t value = 0;
    twi_packet_t packet_rx;

    memset(mpu_buffer, 0, sizeof(mpu_buffer));
  400a38:	4b0e      	ldr	r3, [pc, #56]	; (400a74 <read_register8+0x40>)
  400a3a:	2200      	movs	r2, #0
  400a3c:	601a      	str	r2, [r3, #0]
  400a3e:	605a      	str	r2, [r3, #4]
  400a40:	609a      	str	r2, [r3, #8]
  400a42:	60da      	str	r2, [r3, #12]

    packet_rx.chip = address;
  400a44:	f88d 0014 	strb.w	r0, [sp, #20]
    packet_rx.addr[0] = reg;
  400a48:	f88d 1004 	strb.w	r1, [sp, #4]
    packet_rx.addr_length = sizeof(uint8_t);
  400a4c:	2201      	movs	r2, #1
  400a4e:	9202      	str	r2, [sp, #8]
    packet_rx.buffer = &mpu_buffer;
  400a50:	9303      	str	r3, [sp, #12]
    packet_rx.length = sizeof(uint8_t);
  400a52:	9204      	str	r2, [sp, #16]

    uint32_t status = twi_master_read(IMU_TWI, &packet_rx);
  400a54:	a901      	add	r1, sp, #4
  400a56:	4808      	ldr	r0, [pc, #32]	; (400a78 <read_register8+0x44>)
  400a58:	f001 f8d3 	bl	401c02 <twi_master_read>

    // printf("read_register status: %d\r\n", status);
    
    if (status == TWI_SUCCESS) {
  400a5c:	b910      	cbnz	r0, 400a64 <read_register8+0x30>
        // puts("read_register: success\r\n");
        value = mpu_buffer[0];
  400a5e:	4b05      	ldr	r3, [pc, #20]	; (400a74 <read_register8+0x40>)
  400a60:	781c      	ldrb	r4, [r3, #0]
  400a62:	e000      	b.n	400a66 <read_register8+0x32>
    uint8_t value = 0;
  400a64:	2400      	movs	r4, #0
    }

    delay_ms(TWI_WAIT_TIME);
  400a66:	4805      	ldr	r0, [pc, #20]	; (400a7c <read_register8+0x48>)
  400a68:	f007 fe62 	bl	408730 <__portable_delay_cycles_veneer>

    return value;
}
  400a6c:	4620      	mov	r0, r4
  400a6e:	b006      	add	sp, #24
  400a70:	bd10      	pop	{r4, pc}
  400a72:	bf00      	nop
  400a74:	20000434 	.word	0x20000434
  400a78:	40018000 	.word	0x40018000
  400a7c:	00014ed3 	.word	0x00014ed3

00400a80 <read_bytes>:

    return value;
}

uint8_t read_bytes(uint8_t address, uint8_t reg, int8_t length, uint8_t *data)
{
  400a80:	b530      	push	{r4, r5, lr}
  400a82:	b087      	sub	sp, #28
  400a84:	4615      	mov	r5, r2
    // uint8_t value = 0;
    twi_packet_t packet_rx;

    memset(mpu_buffer, 0, sizeof(mpu_buffer));
  400a86:	4a0c      	ldr	r2, [pc, #48]	; (400ab8 <read_bytes+0x38>)
  400a88:	2400      	movs	r4, #0
  400a8a:	6014      	str	r4, [r2, #0]
  400a8c:	6054      	str	r4, [r2, #4]
  400a8e:	6094      	str	r4, [r2, #8]
  400a90:	60d4      	str	r4, [r2, #12]

    packet_rx.chip = address;
  400a92:	f88d 0014 	strb.w	r0, [sp, #20]
    packet_rx.addr[0] = reg;
  400a96:	f88d 1004 	strb.w	r1, [sp, #4]
    packet_rx.addr_length = sizeof(uint8_t);
  400a9a:	2201      	movs	r2, #1
  400a9c:	9202      	str	r2, [sp, #8]
    packet_rx.buffer = data;
  400a9e:	9303      	str	r3, [sp, #12]
    packet_rx.length = length;
  400aa0:	9504      	str	r5, [sp, #16]

    uint32_t status = twi_master_read(IMU_TWI, &packet_rx);
  400aa2:	a901      	add	r1, sp, #4
  400aa4:	4805      	ldr	r0, [pc, #20]	; (400abc <read_bytes+0x3c>)
  400aa6:	f001 f8ac 	bl	401c02 <twi_master_read>
    if (status == TWI_SUCCESS) {
        // puts("read_register: success\r\n");
        // value = mpu_buffer[0];
    }

    delay_ms(TWI_WAIT_TIME);
  400aaa:	4805      	ldr	r0, [pc, #20]	; (400ac0 <read_bytes+0x40>)
  400aac:	f007 fe40 	bl	408730 <__portable_delay_cycles_veneer>

    return length;
}
  400ab0:	b2e8      	uxtb	r0, r5
  400ab2:	b007      	add	sp, #28
  400ab4:	bd30      	pop	{r4, r5, pc}
  400ab6:	bf00      	nop
  400ab8:	20000434 	.word	0x20000434
  400abc:	40018000 	.word	0x40018000
  400ac0:	00014ed3 	.word	0x00014ed3

00400ac4 <write_register_bit>:


void write_register_bit(uint8_t address, uint8_t reg, uint8_t pos, bool state)
{
  400ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  400ac6:	4604      	mov	r4, r0
  400ac8:	460d      	mov	r5, r1
  400aca:	4616      	mov	r6, r2
  400acc:	461f      	mov	r7, r3
    uint8_t value;
    value = read_register8(address, reg);
  400ace:	f7ff ffb1 	bl	400a34 <read_register8>

    if (state) {
  400ad2:	b147      	cbz	r7, 400ae6 <write_register_bit+0x22>
        value |= (1 << pos);
  400ad4:	2201      	movs	r2, #1
  400ad6:	40b2      	lsls	r2, r6
  400ad8:	4302      	orrs	r2, r0
  400ada:	b2d2      	uxtb	r2, r2
    } else {
        value &= ~(1 << pos);
    }

    write_register8(address, reg, value);
  400adc:	4629      	mov	r1, r5
  400ade:	4620      	mov	r0, r4
  400ae0:	f7ff ff8c 	bl	4009fc <write_register8>
}
  400ae4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        value &= ~(1 << pos);
  400ae6:	2201      	movs	r2, #1
  400ae8:	40b2      	lsls	r2, r6
  400aea:	ea20 0202 	bic.w	r2, r0, r2
  400aee:	b2d2      	uxtb	r2, r2
  400af0:	e7f4      	b.n	400adc <write_register_bit+0x18>

00400af2 <read_register_bit>:

bool read_register_bit(uint8_t address, uint8_t reg, uint8_t pos)
{
  400af2:	b510      	push	{r4, lr}
  400af4:	4614      	mov	r4, r2
    uint8_t value;
    value = read_register8(address, reg);
  400af6:	f7ff ff9d 	bl	400a34 <read_register8>
    return ((value >> pos) & 1);
  400afa:	4120      	asrs	r0, r4
}
  400afc:	f000 0001 	and.w	r0, r0, #1
  400b00:	bd10      	pop	{r4, pc}
	...

00400b04 <mpu_init>:

bool mpu_init(void)
{
  400b04:	b500      	push	{lr}
  400b06:	b085      	sub	sp, #20
    twi_options_t opt;

	/* Configure the options of TWI driver */
	opt.master_clk = sysclk_get_peripheral_hz();
  400b08:	4b0d      	ldr	r3, [pc, #52]	; (400b40 <mpu_init+0x3c>)
  400b0a:	9301      	str	r3, [sp, #4]
    opt.speed      = TWI_CLK;
  400b0c:	4b0d      	ldr	r3, [pc, #52]	; (400b44 <mpu_init+0x40>)
  400b0e:	9302      	str	r3, [sp, #8]

    if (twi_master_init(IMU_TWI, &opt) != TWI_SUCCESS) {
  400b10:	a901      	add	r1, sp, #4
  400b12:	480d      	ldr	r0, [pc, #52]	; (400b48 <mpu_init+0x44>)
  400b14:	f001 f846 	bl	401ba4 <twi_master_init>
  400b18:	b148      	cbz	r0, 400b2e <mpu_init+0x2a>
        
        puts("twi_master_init: failed\r\n");
  400b1a:	480c      	ldr	r0, [pc, #48]	; (400b4c <mpu_init+0x48>)
  400b1c:	f002 fe8a 	bl	403834 <puts>
        // Give I2C time to settle
        delay_ms(TWI_WAIT_TIME);
  400b20:	480b      	ldr	r0, [pc, #44]	; (400b50 <mpu_init+0x4c>)
  400b22:	f007 fe05 	bl	408730 <__portable_delay_cycles_veneer>
        return false;
  400b26:	2000      	movs	r0, #0
        // Give I2C time to settle
        delay_ms(TWI_WAIT_TIME);
        return true;
    }
    
}
  400b28:	b005      	add	sp, #20
  400b2a:	f85d fb04 	ldr.w	pc, [sp], #4
        puts("twi_master_init: success\r\n");
  400b2e:	4809      	ldr	r0, [pc, #36]	; (400b54 <mpu_init+0x50>)
  400b30:	f002 fe80 	bl	403834 <puts>
        delay_ms(TWI_WAIT_TIME);
  400b34:	4806      	ldr	r0, [pc, #24]	; (400b50 <mpu_init+0x4c>)
  400b36:	f007 fdfb 	bl	408730 <__portable_delay_cycles_veneer>
        return true;
  400b3a:	2001      	movs	r0, #1
  400b3c:	e7f4      	b.n	400b28 <mpu_init+0x24>
  400b3e:	bf00      	nop
  400b40:	07270e00 	.word	0x07270e00
  400b44:	00061a80 	.word	0x00061a80
  400b48:	40018000 	.word	0x40018000
  400b4c:	004081a4 	.word	0x004081a4
  400b50:	00014ed3 	.word	0x00014ed3
  400b54:	004081c0 	.word	0x004081c0

00400b58 <mpu_probe>:

bool mpu_probe(void)
{
  400b58:	b508      	push	{r3, lr}
    if (twi_probe(IMU_TWI, IMU_ADDRESS) != TWI_SUCCESS) {
  400b5a:	2168      	movs	r1, #104	; 0x68
  400b5c:	4809      	ldr	r0, [pc, #36]	; (400b84 <mpu_probe+0x2c>)
  400b5e:	f001 f8f8 	bl	401d52 <twi_probe>
  400b62:	b138      	cbz	r0, 400b74 <mpu_probe+0x1c>
        puts("twi_probe: failed\r\n");
  400b64:	4808      	ldr	r0, [pc, #32]	; (400b88 <mpu_probe+0x30>)
  400b66:	f002 fe65 	bl	403834 <puts>
        // Give I2C time to settle
        delay_ms(TWI_WAIT_TIME);
  400b6a:	4808      	ldr	r0, [pc, #32]	; (400b8c <mpu_probe+0x34>)
  400b6c:	f007 fde0 	bl	408730 <__portable_delay_cycles_veneer>
        return false;
  400b70:	2000      	movs	r0, #0
        puts("twi_probe: success\r\n");
        // Give I2C time to settle
        delay_ms(TWI_WAIT_TIME);
        return true;
    }
}
  400b72:	bd08      	pop	{r3, pc}
        puts("twi_probe: success\r\n");
  400b74:	4806      	ldr	r0, [pc, #24]	; (400b90 <mpu_probe+0x38>)
  400b76:	f002 fe5d 	bl	403834 <puts>
        delay_ms(TWI_WAIT_TIME);
  400b7a:	4804      	ldr	r0, [pc, #16]	; (400b8c <mpu_probe+0x34>)
  400b7c:	f007 fdd8 	bl	408730 <__portable_delay_cycles_veneer>
        return true;
  400b80:	2001      	movs	r0, #1
  400b82:	e7f6      	b.n	400b72 <mpu_probe+0x1a>
  400b84:	40018000 	.word	0x40018000
  400b88:	004082fc 	.word	0x004082fc
  400b8c:	00014ed3 	.word	0x00014ed3
  400b90:	00408310 	.word	0x00408310

00400b94 <mpu_who_am_i>:

    return true;
}

uint8_t mpu_who_am_i(void)
{
  400b94:	b508      	push	{r3, lr}
    uint8_t value = read_register8(IMU_ADDRESS, MPU6050_RA_WHO_AM_I);
  400b96:	2175      	movs	r1, #117	; 0x75
  400b98:	2068      	movs	r0, #104	; 0x68
  400b9a:	f7ff ff4b 	bl	400a34 <read_register8>
    if (value == 0x68) {
        // puts("who_am_i: success\r\n");
    }

    return value;
}
  400b9e:	bd08      	pop	{r3, pc}

00400ba0 <mpu_set_clock_source>:
    T = read_register16(IMU_ADDRESS, MPU6050_RA_TEMP_OUT_H);
    return T;
}

void mpu_set_clock_source(uint8_t source)
{
  400ba0:	b510      	push	{r4, lr}
  400ba2:	4604      	mov	r4, r0
    uint8_t value;

    value = read_register8(IMU_ADDRESS, MPU6050_RA_PWR_MGMT_1);
  400ba4:	216b      	movs	r1, #107	; 0x6b
  400ba6:	2068      	movs	r0, #104	; 0x68
  400ba8:	f7ff ff44 	bl	400a34 <read_register8>
    value &= 0b11111000; // mask
  400bac:	f000 02f8 	and.w	r2, r0, #248	; 0xf8
    value |= source;

    write_register8(IMU_ADDRESS, MPU6050_RA_PWR_MGMT_1, value);
  400bb0:	4322      	orrs	r2, r4
  400bb2:	216b      	movs	r1, #107	; 0x6b
  400bb4:	2068      	movs	r0, #104	; 0x68
  400bb6:	f7ff ff21 	bl	4009fc <write_register8>
}
  400bba:	bd10      	pop	{r4, pc}

00400bbc <mpu_get_clock_source>:

uint8_t mpu_get_clock_source(void)
{
  400bbc:	b508      	push	{r3, lr}
    uint8_t value;

    value = read_register8(IMU_ADDRESS, MPU6050_RA_PWR_MGMT_1);
  400bbe:	216b      	movs	r1, #107	; 0x6b
  400bc0:	2068      	movs	r0, #104	; 0x68
  400bc2:	f7ff ff37 	bl	400a34 <read_register8>
    value &= 0b00000111; // mask

    return (uint8_t)value;
}
  400bc6:	f000 0007 	and.w	r0, r0, #7
  400bca:	bd08      	pop	{r3, pc}

00400bcc <mpu_set_gyro_scale>:

void mpu_set_gyro_scale(uint8_t scale)
{
  400bcc:	b510      	push	{r4, lr}
  400bce:	4604      	mov	r4, r0
    uint8_t value;

    switch (scale) {
  400bd0:	2803      	cmp	r0, #3
  400bd2:	d806      	bhi.n	400be2 <mpu_set_gyro_scale+0x16>
  400bd4:	e8df f000 	tbb	[pc, r0]
  400bd8:	1b171302 	.word	0x1b171302
        case MPU6050_GYRO_FS_250:
            dps_per_digit = .007633f;
  400bdc:	4b0e      	ldr	r3, [pc, #56]	; (400c18 <mpu_set_gyro_scale+0x4c>)
  400bde:	4a0f      	ldr	r2, [pc, #60]	; (400c1c <mpu_set_gyro_scale+0x50>)
  400be0:	601a      	str	r2, [r3, #0]
        case MPU6050_GYRO_FS_2000:
            dps_per_digit = .060975f;
            break;
    }

    value = read_register8(IMU_ADDRESS, MPU6050_RA_GYRO_CONFIG);
  400be2:	211b      	movs	r1, #27
  400be4:	2068      	movs	r0, #104	; 0x68
  400be6:	f7ff ff25 	bl	400a34 <read_register8>
    value &= 0b11100111; // mask
  400bea:	f020 0218 	bic.w	r2, r0, #24
    value |= (scale << 3);
  400bee:	ea42 02c4 	orr.w	r2, r2, r4, lsl #3

    write_register8(IMU_ADDRESS, MPU6050_RA_GYRO_CONFIG, value);
  400bf2:	b2d2      	uxtb	r2, r2
  400bf4:	211b      	movs	r1, #27
  400bf6:	2068      	movs	r0, #104	; 0x68
  400bf8:	f7ff ff00 	bl	4009fc <write_register8>
}
  400bfc:	bd10      	pop	{r4, pc}
            dps_per_digit = .015267f;
  400bfe:	4b06      	ldr	r3, [pc, #24]	; (400c18 <mpu_set_gyro_scale+0x4c>)
  400c00:	4a07      	ldr	r2, [pc, #28]	; (400c20 <mpu_set_gyro_scale+0x54>)
  400c02:	601a      	str	r2, [r3, #0]
            break;
  400c04:	e7ed      	b.n	400be2 <mpu_set_gyro_scale+0x16>
            dps_per_digit = .030487f;
  400c06:	4b04      	ldr	r3, [pc, #16]	; (400c18 <mpu_set_gyro_scale+0x4c>)
  400c08:	4a06      	ldr	r2, [pc, #24]	; (400c24 <mpu_set_gyro_scale+0x58>)
  400c0a:	601a      	str	r2, [r3, #0]
            break;
  400c0c:	e7e9      	b.n	400be2 <mpu_set_gyro_scale+0x16>
            dps_per_digit = .060975f;
  400c0e:	4b02      	ldr	r3, [pc, #8]	; (400c18 <mpu_set_gyro_scale+0x4c>)
  400c10:	4a05      	ldr	r2, [pc, #20]	; (400c28 <mpu_set_gyro_scale+0x5c>)
  400c12:	601a      	str	r2, [r3, #0]
            break;
  400c14:	e7e5      	b.n	400be2 <mpu_set_gyro_scale+0x16>
  400c16:	bf00      	nop
  400c18:	2000041c 	.word	0x2000041c
  400c1c:	3bfa1e3f 	.word	0x3bfa1e3f
  400c20:	3c7a2270 	.word	0x3c7a2270
  400c24:	3cf9bfdf 	.word	0x3cf9bfdf
  400c28:	3d79c0ec 	.word	0x3d79c0ec

00400c2c <mpu_get_gyro_scale>:

uint8_t mpu_get_gyro_scale(void)
{
  400c2c:	b508      	push	{r3, lr}
    uint8_t value;

    value = read_register8(IMU_ADDRESS, MPU6050_RA_GYRO_CONFIG);
  400c2e:	211b      	movs	r1, #27
  400c30:	2068      	movs	r0, #104	; 0x68
  400c32:	f7ff feff 	bl	400a34 <read_register8>
    value &= 0b00011000; // mask
    value >>= 3;

    return (uint8_t)value;
}
  400c36:	f3c0 00c1 	ubfx	r0, r0, #3, #2
  400c3a:	bd08      	pop	{r3, pc}

00400c3c <mpu_set_accel_range>:

void mpu_set_accel_range(uint8_t range)
{
  400c3c:	b510      	push	{r4, lr}
  400c3e:	4604      	mov	r4, r0
    uint8_t value;

    switch (range) {
  400c40:	2803      	cmp	r0, #3
  400c42:	d806      	bhi.n	400c52 <mpu_set_accel_range+0x16>
  400c44:	e8df f000 	tbb	[pc, r0]
  400c48:	1b171302 	.word	0x1b171302
        case MPU6050_ACCEL_FS_2:
        	range_per_digit = .000061f;
  400c4c:	4b0e      	ldr	r3, [pc, #56]	; (400c88 <mpu_set_accel_range+0x4c>)
  400c4e:	4a0f      	ldr	r2, [pc, #60]	; (400c8c <mpu_set_accel_range+0x50>)
  400c50:	601a      	str	r2, [r3, #0]
        case MPU6050_ACCEL_FS_16:
        	range_per_digit = .0004882f;
	        break;                                                           
    }

    value = read_register8(IMU_ADDRESS, MPU6050_RA_ACCEL_CONFIG);
  400c52:	211c      	movs	r1, #28
  400c54:	2068      	movs	r0, #104	; 0x68
  400c56:	f7ff feed 	bl	400a34 <read_register8>
    value &= 0b11100111; // mask
  400c5a:	f020 0218 	bic.w	r2, r0, #24
    value |= (range << 3);
  400c5e:	ea42 02c4 	orr.w	r2, r2, r4, lsl #3

    write_register8(IMU_ADDRESS, MPU6050_RA_ACCEL_CONFIG, value);
  400c62:	b2d2      	uxtb	r2, r2
  400c64:	211c      	movs	r1, #28
  400c66:	2068      	movs	r0, #104	; 0x68
  400c68:	f7ff fec8 	bl	4009fc <write_register8>
}
  400c6c:	bd10      	pop	{r4, pc}
        	range_per_digit = .000122f;
  400c6e:	4b06      	ldr	r3, [pc, #24]	; (400c88 <mpu_set_accel_range+0x4c>)
  400c70:	4a07      	ldr	r2, [pc, #28]	; (400c90 <mpu_set_accel_range+0x54>)
  400c72:	601a      	str	r2, [r3, #0]
            break;   
  400c74:	e7ed      	b.n	400c52 <mpu_set_accel_range+0x16>
        	range_per_digit = .000244f;
  400c76:	4b04      	ldr	r3, [pc, #16]	; (400c88 <mpu_set_accel_range+0x4c>)
  400c78:	4a06      	ldr	r2, [pc, #24]	; (400c94 <mpu_set_accel_range+0x58>)
  400c7a:	601a      	str	r2, [r3, #0]
            break;   
  400c7c:	e7e9      	b.n	400c52 <mpu_set_accel_range+0x16>
        	range_per_digit = .0004882f;
  400c7e:	4b02      	ldr	r3, [pc, #8]	; (400c88 <mpu_set_accel_range+0x4c>)
  400c80:	4a05      	ldr	r2, [pc, #20]	; (400c98 <mpu_set_accel_range+0x5c>)
  400c82:	601a      	str	r2, [r3, #0]
	        break;                                                           
  400c84:	e7e5      	b.n	400c52 <mpu_set_accel_range+0x16>
  400c86:	bf00      	nop
  400c88:	20000444 	.word	0x20000444
  400c8c:	387fda40 	.word	0x387fda40
  400c90:	38ffda40 	.word	0x38ffda40
  400c94:	397fda40 	.word	0x397fda40
  400c98:	39fff518 	.word	0x39fff518

00400c9c <mpu_set_sleep_enabled>:

    return (uint8_t)value;
}

void mpu_set_sleep_enabled(bool state)
{
  400c9c:	b508      	push	{r3, lr}
    write_register_bit(IMU_ADDRESS, MPU6050_RA_PWR_MGMT_1, 6, state);
  400c9e:	4603      	mov	r3, r0
  400ca0:	2206      	movs	r2, #6
  400ca2:	216b      	movs	r1, #107	; 0x6b
  400ca4:	2068      	movs	r0, #104	; 0x68
  400ca6:	f7ff ff0d 	bl	400ac4 <write_register_bit>
}
  400caa:	bd08      	pop	{r3, pc}

00400cac <mpu_begin>:
{
  400cac:	b538      	push	{r3, r4, r5, lr}
  400cae:	4605      	mov	r5, r0
  400cb0:	460c      	mov	r4, r1
    delta_gyro.x_axis = 0;
  400cb2:	4a11      	ldr	r2, [pc, #68]	; (400cf8 <mpu_begin+0x4c>)
  400cb4:	2300      	movs	r3, #0
  400cb6:	6013      	str	r3, [r2, #0]
    delta_gyro.y_axis = 0;
  400cb8:	6053      	str	r3, [r2, #4]
    delta_gyro.z_axis = 0;
  400cba:	6093      	str	r3, [r2, #8]
    use_calibrate = false;
  400cbc:	4a0f      	ldr	r2, [pc, #60]	; (400cfc <mpu_begin+0x50>)
  400cbe:	2100      	movs	r1, #0
  400cc0:	7011      	strb	r1, [r2, #0]
    threshold_gyro.x_axis = 0;
  400cc2:	4a0f      	ldr	r2, [pc, #60]	; (400d00 <mpu_begin+0x54>)
  400cc4:	6013      	str	r3, [r2, #0]
    threshold_gyro.y_axis = 0;
  400cc6:	6053      	str	r3, [r2, #4]
    threshold_gyro.z_axis = 0;
  400cc8:	6093      	str	r3, [r2, #8]
    actual_threshold = 0;
  400cca:	4a0e      	ldr	r2, [pc, #56]	; (400d04 <mpu_begin+0x58>)
  400ccc:	6013      	str	r3, [r2, #0]
    if (mpu_who_am_i() != 0x68) {
  400cce:	f7ff ff61 	bl	400b94 <mpu_who_am_i>
  400cd2:	2868      	cmp	r0, #104	; 0x68
  400cd4:	d001      	beq.n	400cda <mpu_begin+0x2e>
        return false;
  400cd6:	2000      	movs	r0, #0
}
  400cd8:	bd38      	pop	{r3, r4, r5, pc}
    mpu_set_clock_source(MPU6050_CLOCK_PLL_XGYRO);
  400cda:	2001      	movs	r0, #1
  400cdc:	f7ff ff60 	bl	400ba0 <mpu_set_clock_source>
    mpu_set_gyro_scale(scale);
  400ce0:	4628      	mov	r0, r5
  400ce2:	f7ff ff73 	bl	400bcc <mpu_set_gyro_scale>
    mpu_set_accel_range(range);
  400ce6:	4620      	mov	r0, r4
  400ce8:	f7ff ffa8 	bl	400c3c <mpu_set_accel_range>
    mpu_set_sleep_enabled(false);
  400cec:	2000      	movs	r0, #0
  400cee:	f7ff ffd5 	bl	400c9c <mpu_set_sleep_enabled>
    return true;
  400cf2:	2001      	movs	r0, #1
  400cf4:	e7f0      	b.n	400cd8 <mpu_begin+0x2c>
  400cf6:	bf00      	nop
  400cf8:	200006d0 	.word	0x200006d0
  400cfc:	20000448 	.word	0x20000448
  400d00:	20000684 	.word	0x20000684
  400d04:	20000418 	.word	0x20000418

00400d08 <mpu_get_sleep_enabled>:

bool mpu_get_sleep_enabled(void)
{
  400d08:	b508      	push	{r3, lr}
    return read_register_bit(IMU_ADDRESS, MPU6050_RA_PWR_MGMT_1, 6);
  400d0a:	2206      	movs	r2, #6
  400d0c:	216b      	movs	r1, #107	; 0x6b
  400d0e:	2068      	movs	r0, #104	; 0x68
  400d10:	f7ff feef 	bl	400af2 <read_register_bit>
}
  400d14:	bd08      	pop	{r3, pc}

00400d16 <mpu_set_i2c_bypass_enabled>:
{
    return read_register_bit(IMU_ADDRESS, MPU6050_RA_USER_CTRL, 5);
}

void mpu_set_i2c_bypass_enabled(bool state)
{
  400d16:	b508      	push	{r3, lr}
    write_register_bit(IMU_ADDRESS, MPU6050_RA_INT_PIN_CFG, 1, state);
  400d18:	4603      	mov	r3, r0
  400d1a:	2201      	movs	r2, #1
  400d1c:	2137      	movs	r1, #55	; 0x37
  400d1e:	2068      	movs	r0, #104	; 0x68
  400d20:	f7ff fed0 	bl	400ac4 <write_register_bit>
}
  400d24:	bd08      	pop	{r3, pc}

00400d26 <mpu_read_gyro>:
    a->is_pos_activity_on_z = ((data >> 2) & 1);

}

void mpu_read_gyro(int16_t *x, int16_t *y, int16_t *z)
{
  400d26:	b570      	push	{r4, r5, r6, lr}
  400d28:	b082      	sub	sp, #8
  400d2a:	4606      	mov	r6, r0
  400d2c:	460d      	mov	r5, r1
  400d2e:	4614      	mov	r4, r2
    uint8_t i2c_buffer[6];
    memset(i2c_buffer, 0, sizeof(i2c_buffer));
  400d30:	2300      	movs	r3, #0
  400d32:	9300      	str	r3, [sp, #0]
  400d34:	f8ad 3004 	strh.w	r3, [sp, #4]
    
    read_bytes(IMU_ADDRESS, MPU6050_RA_GYRO_XOUT_H, 6, i2c_buffer);
  400d38:	466b      	mov	r3, sp
  400d3a:	2206      	movs	r2, #6
  400d3c:	2143      	movs	r1, #67	; 0x43
  400d3e:	2068      	movs	r0, #104	; 0x68
  400d40:	f7ff fe9e 	bl	400a80 <read_bytes>

    *x = (((int16_t)i2c_buffer[0]) << 8) | i2c_buffer[1];
  400d44:	f89d 2000 	ldrb.w	r2, [sp]
  400d48:	f89d 3001 	ldrb.w	r3, [sp, #1]
  400d4c:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400d50:	8033      	strh	r3, [r6, #0]
    *y = (((int16_t)i2c_buffer[2]) << 8) | i2c_buffer[3];
  400d52:	f89d 2002 	ldrb.w	r2, [sp, #2]
  400d56:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400d5a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400d5e:	802b      	strh	r3, [r5, #0]
    *z = (((int16_t)i2c_buffer[4]) << 8) | i2c_buffer[5];
  400d60:	f89d 2004 	ldrb.w	r2, [sp, #4]
  400d64:	f89d 3005 	ldrb.w	r3, [sp, #5]
  400d68:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400d6c:	8023      	strh	r3, [r4, #0]

}
  400d6e:	b002      	add	sp, #8
  400d70:	bd70      	pop	{r4, r5, r6, pc}
	...

00400d74 <mpu_read_raw_gyro>:

void mpu_read_raw_gyro(void)
{
  400d74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    mpu_read_gyro(&gx, &gy, &gz);
  400d76:	4d0c      	ldr	r5, [pc, #48]	; (400da8 <mpu_read_raw_gyro+0x34>)
  400d78:	4e0c      	ldr	r6, [pc, #48]	; (400dac <mpu_read_raw_gyro+0x38>)
  400d7a:	4f0d      	ldr	r7, [pc, #52]	; (400db0 <mpu_read_raw_gyro+0x3c>)
  400d7c:	462a      	mov	r2, r5
  400d7e:	4631      	mov	r1, r6
  400d80:	4638      	mov	r0, r7
  400d82:	f7ff ffd0 	bl	400d26 <mpu_read_gyro>
    raw_gyro.x_axis = (float)gx;
  400d86:	4c0b      	ldr	r4, [pc, #44]	; (400db4 <mpu_read_raw_gyro+0x40>)
  400d88:	f9b7 0000 	ldrsh.w	r0, [r7]
  400d8c:	f006 fe64 	bl	407a58 <__aeabi_i2f>
  400d90:	6020      	str	r0, [r4, #0]
    raw_gyro.y_axis = (float)gy;
  400d92:	f9b6 0000 	ldrsh.w	r0, [r6]
  400d96:	f006 fe5f 	bl	407a58 <__aeabi_i2f>
  400d9a:	6060      	str	r0, [r4, #4]
    raw_gyro.z_axis = (float)gz;
  400d9c:	f9b5 0000 	ldrsh.w	r0, [r5]
  400da0:	f006 fe5a 	bl	407a58 <__aeabi_i2f>
  400da4:	60a0      	str	r0, [r4, #8]

}
  400da6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400da8:	200006c0 	.word	0x200006c0
  400dac:	2000051c 	.word	0x2000051c
  400db0:	200006dc 	.word	0x200006dc
  400db4:	20000510 	.word	0x20000510

00400db8 <mpu_read_normalized_gyro>:

t_fp_vector mpu_read_normalized_gyro(void)
{
  400db8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400dbc:	4604      	mov	r4, r0
    mpu_read_raw_gyro();
  400dbe:	f7ff ffd9 	bl	400d74 <mpu_read_raw_gyro>

    if (use_calibrate) {
  400dc2:	4b3d      	ldr	r3, [pc, #244]	; (400eb8 <mpu_read_normalized_gyro+0x100>)
  400dc4:	781b      	ldrb	r3, [r3, #0]
  400dc6:	2b00      	cmp	r3, #0
  400dc8:	d062      	beq.n	400e90 <mpu_read_normalized_gyro+0xd8>
        norm_gyro.x_axis = (raw_gyro.x_axis - delta_gyro.x_axis) * dps_per_digit;
  400dca:	4b3c      	ldr	r3, [pc, #240]	; (400ebc <mpu_read_normalized_gyro+0x104>)
  400dcc:	681e      	ldr	r6, [r3, #0]
  400dce:	4d3c      	ldr	r5, [pc, #240]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400dd0:	4f3c      	ldr	r7, [pc, #240]	; (400ec4 <mpu_read_normalized_gyro+0x10c>)
  400dd2:	f8df 80fc 	ldr.w	r8, [pc, #252]	; 400ed0 <mpu_read_normalized_gyro+0x118>
  400dd6:	f8d8 1000 	ldr.w	r1, [r8]
  400dda:	6838      	ldr	r0, [r7, #0]
  400ddc:	f006 fd86 	bl	4078ec <__aeabi_fsub>
  400de0:	4631      	mov	r1, r6
  400de2:	f006 fe8d 	bl	407b00 <__aeabi_fmul>
  400de6:	6028      	str	r0, [r5, #0]
        norm_gyro.y_axis = (raw_gyro.y_axis - delta_gyro.y_axis) * dps_per_digit;
  400de8:	f8d8 1004 	ldr.w	r1, [r8, #4]
  400dec:	6878      	ldr	r0, [r7, #4]
  400dee:	f006 fd7d 	bl	4078ec <__aeabi_fsub>
  400df2:	4631      	mov	r1, r6
  400df4:	f006 fe84 	bl	407b00 <__aeabi_fmul>
  400df8:	6068      	str	r0, [r5, #4]
        norm_gyro.z_axis = (raw_gyro.z_axis - delta_gyro.z_axis) * dps_per_digit;
  400dfa:	f8d8 1008 	ldr.w	r1, [r8, #8]
  400dfe:	68b8      	ldr	r0, [r7, #8]
  400e00:	f006 fd74 	bl	4078ec <__aeabi_fsub>
  400e04:	4631      	mov	r1, r6
  400e06:	f006 fe7b 	bl	407b00 <__aeabi_fmul>
  400e0a:	60a8      	str	r0, [r5, #8]
        norm_gyro.x_axis = raw_gyro.x_axis  * dps_per_digit;
        norm_gyro.y_axis = raw_gyro.y_axis  * dps_per_digit;
        norm_gyro.z_axis = raw_gyro.z_axis  * dps_per_digit;
    }

    if (actual_threshold) {
  400e0c:	2100      	movs	r1, #0
  400e0e:	4b2e      	ldr	r3, [pc, #184]	; (400ec8 <mpu_read_normalized_gyro+0x110>)
  400e10:	6818      	ldr	r0, [r3, #0]
  400e12:	f007 f809 	bl	407e28 <__aeabi_fcmpeq>
  400e16:	2800      	cmp	r0, #0
  400e18:	d132      	bne.n	400e80 <mpu_read_normalized_gyro+0xc8>
        if (abs(norm_gyro.x_axis) < threshold_gyro.x_axis) norm_gyro.x_axis = 0;
  400e1a:	4b29      	ldr	r3, [pc, #164]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e1c:	6818      	ldr	r0, [r3, #0]
  400e1e:	f007 f835 	bl	407e8c <__aeabi_f2iz>
  400e22:	2800      	cmp	r0, #0
  400e24:	bfb8      	it	lt
  400e26:	4240      	neglt	r0, r0
  400e28:	f006 fe16 	bl	407a58 <__aeabi_i2f>
  400e2c:	4b27      	ldr	r3, [pc, #156]	; (400ecc <mpu_read_normalized_gyro+0x114>)
  400e2e:	6819      	ldr	r1, [r3, #0]
  400e30:	f007 f804 	bl	407e3c <__aeabi_fcmplt>
  400e34:	b110      	cbz	r0, 400e3c <mpu_read_normalized_gyro+0x84>
  400e36:	4b22      	ldr	r3, [pc, #136]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e38:	2200      	movs	r2, #0
  400e3a:	601a      	str	r2, [r3, #0]
        if (abs(norm_gyro.y_axis) < threshold_gyro.y_axis) norm_gyro.y_axis = 0;
  400e3c:	4b20      	ldr	r3, [pc, #128]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e3e:	6858      	ldr	r0, [r3, #4]
  400e40:	f007 f824 	bl	407e8c <__aeabi_f2iz>
  400e44:	2800      	cmp	r0, #0
  400e46:	bfb8      	it	lt
  400e48:	4240      	neglt	r0, r0
  400e4a:	f006 fe05 	bl	407a58 <__aeabi_i2f>
  400e4e:	4b1f      	ldr	r3, [pc, #124]	; (400ecc <mpu_read_normalized_gyro+0x114>)
  400e50:	6859      	ldr	r1, [r3, #4]
  400e52:	f006 fff3 	bl	407e3c <__aeabi_fcmplt>
  400e56:	b110      	cbz	r0, 400e5e <mpu_read_normalized_gyro+0xa6>
  400e58:	4b19      	ldr	r3, [pc, #100]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e5a:	2200      	movs	r2, #0
  400e5c:	605a      	str	r2, [r3, #4]
        if (abs(norm_gyro.z_axis) < threshold_gyro.z_axis) norm_gyro.z_axis = 0;
  400e5e:	4b18      	ldr	r3, [pc, #96]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e60:	6898      	ldr	r0, [r3, #8]
  400e62:	f007 f813 	bl	407e8c <__aeabi_f2iz>
  400e66:	2800      	cmp	r0, #0
  400e68:	bfb8      	it	lt
  400e6a:	4240      	neglt	r0, r0
  400e6c:	f006 fdf4 	bl	407a58 <__aeabi_i2f>
  400e70:	4b16      	ldr	r3, [pc, #88]	; (400ecc <mpu_read_normalized_gyro+0x114>)
  400e72:	6899      	ldr	r1, [r3, #8]
  400e74:	f006 ffe2 	bl	407e3c <__aeabi_fcmplt>
  400e78:	b110      	cbz	r0, 400e80 <mpu_read_normalized_gyro+0xc8>
  400e7a:	4b11      	ldr	r3, [pc, #68]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e7c:	2200      	movs	r2, #0
  400e7e:	609a      	str	r2, [r3, #8]
    }

    return norm_gyro;
  400e80:	4b0f      	ldr	r3, [pc, #60]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e82:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
  400e86:	e884 0007 	stmia.w	r4, {r0, r1, r2}
}
  400e8a:	4620      	mov	r0, r4
  400e8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        norm_gyro.x_axis = raw_gyro.x_axis  * dps_per_digit;
  400e90:	4b0a      	ldr	r3, [pc, #40]	; (400ebc <mpu_read_normalized_gyro+0x104>)
  400e92:	681f      	ldr	r7, [r3, #0]
  400e94:	4d0a      	ldr	r5, [pc, #40]	; (400ec0 <mpu_read_normalized_gyro+0x108>)
  400e96:	4e0b      	ldr	r6, [pc, #44]	; (400ec4 <mpu_read_normalized_gyro+0x10c>)
  400e98:	4639      	mov	r1, r7
  400e9a:	6830      	ldr	r0, [r6, #0]
  400e9c:	f006 fe30 	bl	407b00 <__aeabi_fmul>
  400ea0:	6028      	str	r0, [r5, #0]
        norm_gyro.y_axis = raw_gyro.y_axis  * dps_per_digit;
  400ea2:	4639      	mov	r1, r7
  400ea4:	6870      	ldr	r0, [r6, #4]
  400ea6:	f006 fe2b 	bl	407b00 <__aeabi_fmul>
  400eaa:	6068      	str	r0, [r5, #4]
        norm_gyro.z_axis = raw_gyro.z_axis  * dps_per_digit;
  400eac:	4639      	mov	r1, r7
  400eae:	68b0      	ldr	r0, [r6, #8]
  400eb0:	f006 fe26 	bl	407b00 <__aeabi_fmul>
  400eb4:	60a8      	str	r0, [r5, #8]
  400eb6:	e7a9      	b.n	400e0c <mpu_read_normalized_gyro+0x54>
  400eb8:	20000448 	.word	0x20000448
  400ebc:	2000041c 	.word	0x2000041c
  400ec0:	200006e4 	.word	0x200006e4
  400ec4:	20000510 	.word	0x20000510
  400ec8:	20000418 	.word	0x20000418
  400ecc:	20000684 	.word	0x20000684
  400ed0:	200006d0 	.word	0x200006d0

00400ed4 <mpu_read_acceleration>:



void mpu_read_acceleration(int16_t *x, int16_t *y, int16_t *z)
{
  400ed4:	b570      	push	{r4, r5, r6, lr}
  400ed6:	b082      	sub	sp, #8
  400ed8:	4606      	mov	r6, r0
  400eda:	460d      	mov	r5, r1
  400edc:	4614      	mov	r4, r2
    uint8_t i2c_buffer[6];
    memset(i2c_buffer, 0, sizeof(i2c_buffer));
  400ede:	2300      	movs	r3, #0
  400ee0:	9300      	str	r3, [sp, #0]
  400ee2:	f8ad 3004 	strh.w	r3, [sp, #4]
    
    read_bytes(IMU_ADDRESS, MPU6050_RA_ACCEL_XOUT_H, 6, i2c_buffer);
  400ee6:	466b      	mov	r3, sp
  400ee8:	2206      	movs	r2, #6
  400eea:	213b      	movs	r1, #59	; 0x3b
  400eec:	2068      	movs	r0, #104	; 0x68
  400eee:	f7ff fdc7 	bl	400a80 <read_bytes>

    *x = (((int16_t)i2c_buffer[0]) << 8) | i2c_buffer[1];
  400ef2:	f89d 2000 	ldrb.w	r2, [sp]
  400ef6:	f89d 3001 	ldrb.w	r3, [sp, #1]
  400efa:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400efe:	8033      	strh	r3, [r6, #0]
    *y = (((int16_t)i2c_buffer[2]) << 8) | i2c_buffer[3];
  400f00:	f89d 2002 	ldrb.w	r2, [sp, #2]
  400f04:	f89d 3003 	ldrb.w	r3, [sp, #3]
  400f08:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400f0c:	802b      	strh	r3, [r5, #0]
    *z = (((int16_t)i2c_buffer[4]) << 8) | i2c_buffer[5];
  400f0e:	f89d 2004 	ldrb.w	r2, [sp, #4]
  400f12:	f89d 3005 	ldrb.w	r3, [sp, #5]
  400f16:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400f1a:	8023      	strh	r3, [r4, #0]
}
  400f1c:	b002      	add	sp, #8
  400f1e:	bd70      	pop	{r4, r5, r6, pc}

00400f20 <mpu_read_raw_acceleration>:

void mpu_read_raw_acceleration(void)
{
  400f20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    mpu_read_acceleration(&ax, &ay, &az);
  400f22:	4d0c      	ldr	r5, [pc, #48]	; (400f54 <mpu_read_raw_acceleration+0x34>)
  400f24:	4e0c      	ldr	r6, [pc, #48]	; (400f58 <mpu_read_raw_acceleration+0x38>)
  400f26:	4f0d      	ldr	r7, [pc, #52]	; (400f5c <mpu_read_raw_acceleration+0x3c>)
  400f28:	462a      	mov	r2, r5
  400f2a:	4631      	mov	r1, r6
  400f2c:	4638      	mov	r0, r7
  400f2e:	f7ff ffd1 	bl	400ed4 <mpu_read_acceleration>
    raw_accel.x_axis = (float)ax;
  400f32:	4c0b      	ldr	r4, [pc, #44]	; (400f60 <mpu_read_raw_acceleration+0x40>)
  400f34:	f9b7 0000 	ldrsh.w	r0, [r7]
  400f38:	f006 fd8e 	bl	407a58 <__aeabi_i2f>
  400f3c:	6020      	str	r0, [r4, #0]
    raw_accel.y_axis = (float)ay;
  400f3e:	f9b6 0000 	ldrsh.w	r0, [r6]
  400f42:	f006 fd89 	bl	407a58 <__aeabi_i2f>
  400f46:	6060      	str	r0, [r4, #4]
    raw_accel.z_axis = (float)az;
  400f48:	f9b5 0000 	ldrsh.w	r0, [r5]
  400f4c:	f006 fd84 	bl	407a58 <__aeabi_i2f>
  400f50:	60a0      	str	r0, [r4, #8]
}
  400f52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400f54:	2000051e 	.word	0x2000051e
  400f58:	200006de 	.word	0x200006de
  400f5c:	20000530 	.word	0x20000530
  400f60:	200006c4 	.word	0x200006c4

00400f64 <mpu_read_normalized_acceleration>:

void mpu_read_normalized_acceleration(void)
{
  400f64:	b570      	push	{r4, r5, r6, lr}
    mpu_read_raw_acceleration();
  400f66:	f7ff ffdb 	bl	400f20 <mpu_read_raw_acceleration>

    norm_accel.x_axis = raw_accel.x_axis * range_per_digit * 9.80665f;
  400f6a:	4b0e      	ldr	r3, [pc, #56]	; (400fa4 <mpu_read_normalized_acceleration+0x40>)
  400f6c:	681d      	ldr	r5, [r3, #0]
  400f6e:	4c0e      	ldr	r4, [pc, #56]	; (400fa8 <mpu_read_normalized_acceleration+0x44>)
  400f70:	4e0e      	ldr	r6, [pc, #56]	; (400fac <mpu_read_normalized_acceleration+0x48>)
  400f72:	6831      	ldr	r1, [r6, #0]
  400f74:	4628      	mov	r0, r5
  400f76:	f006 fdc3 	bl	407b00 <__aeabi_fmul>
  400f7a:	490d      	ldr	r1, [pc, #52]	; (400fb0 <mpu_read_normalized_acceleration+0x4c>)
  400f7c:	f006 fdc0 	bl	407b00 <__aeabi_fmul>
  400f80:	6020      	str	r0, [r4, #0]
    norm_accel.y_axis = raw_accel.y_axis * range_per_digit * 9.80665f;
  400f82:	6871      	ldr	r1, [r6, #4]
  400f84:	4628      	mov	r0, r5
  400f86:	f006 fdbb 	bl	407b00 <__aeabi_fmul>
  400f8a:	4909      	ldr	r1, [pc, #36]	; (400fb0 <mpu_read_normalized_acceleration+0x4c>)
  400f8c:	f006 fdb8 	bl	407b00 <__aeabi_fmul>
  400f90:	6060      	str	r0, [r4, #4]
    norm_accel.z_axis = raw_accel.z_axis * range_per_digit * 9.80665f;
  400f92:	68b1      	ldr	r1, [r6, #8]
  400f94:	4628      	mov	r0, r5
  400f96:	f006 fdb3 	bl	407b00 <__aeabi_fmul>
  400f9a:	4905      	ldr	r1, [pc, #20]	; (400fb0 <mpu_read_normalized_acceleration+0x4c>)
  400f9c:	f006 fdb0 	bl	407b00 <__aeabi_fmul>
  400fa0:	60a0      	str	r0, [r4, #8]
}
  400fa2:	bd70      	pop	{r4, r5, r6, pc}
  400fa4:	20000444 	.word	0x20000444
  400fa8:	200006a8 	.word	0x200006a8
  400fac:	200006c4 	.word	0x200006c4
  400fb0:	411ce80a 	.word	0x411ce80a

00400fb4 <mpu_read_mag>:

    return norm_accel;
}

void mpu_read_mag(int16_t *x, int16_t *y, int16_t *z)
{
  400fb4:	b5f0      	push	{r4, r5, r6, r7, lr}
  400fb6:	b083      	sub	sp, #12
  400fb8:	4607      	mov	r7, r0
  400fba:	460e      	mov	r6, r1
  400fbc:	4614      	mov	r4, r2
    // Set bypass enable
    mpu_set_i2c_bypass_enabled(true);
  400fbe:	2001      	movs	r0, #1
  400fc0:	f7ff fea9 	bl	400d16 <mpu_set_i2c_bypass_enabled>
    delay_ms(TWI_WAIT_TIME);
  400fc4:	4d16      	ldr	r5, [pc, #88]	; (401020 <mpu_read_mag+0x6c>)
  400fc6:	4628      	mov	r0, r5
  400fc8:	f007 fbb2 	bl	408730 <__portable_delay_cycles_veneer>

    // Enable magnetometer
    write_register8(MPU9150_RA_MAG_ADDRESS, MPU9150_RA_ZA_OFFS_H, 0x01);
  400fcc:	2201      	movs	r2, #1
  400fce:	210a      	movs	r1, #10
  400fd0:	200c      	movs	r0, #12
  400fd2:	f7ff fd13 	bl	4009fc <write_register8>

    
    delay_ms(TWI_WAIT_TIME);
  400fd6:	4628      	mov	r0, r5
  400fd8:	f007 fbaa 	bl	408730 <__portable_delay_cycles_veneer>

    uint8_t i2c_buffer[6];
    memset(i2c_buffer, 0, sizeof(i2c_buffer));
  400fdc:	2300      	movs	r3, #0
  400fde:	9300      	str	r3, [sp, #0]
  400fe0:	f8ad 3004 	strh.w	r3, [sp, #4]
    
    read_bytes(MPU9150_RA_MAG_ADDRESS, MPU9150_RA_MAG_XOUT_L, 6, i2c_buffer);
  400fe4:	466b      	mov	r3, sp
  400fe6:	2206      	movs	r2, #6
  400fe8:	2103      	movs	r1, #3
  400fea:	200c      	movs	r0, #12
  400fec:	f7ff fd48 	bl	400a80 <read_bytes>

    *x = (((int16_t)i2c_buffer[0]) << 8) | i2c_buffer[1];
  400ff0:	f89d 2000 	ldrb.w	r2, [sp]
  400ff4:	f89d 3001 	ldrb.w	r3, [sp, #1]
  400ff8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  400ffc:	803b      	strh	r3, [r7, #0]
    *y = (((int16_t)i2c_buffer[2]) << 8) | i2c_buffer[3];
  400ffe:	f89d 2002 	ldrb.w	r2, [sp, #2]
  401002:	f89d 3003 	ldrb.w	r3, [sp, #3]
  401006:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  40100a:	8033      	strh	r3, [r6, #0]
    *z = (((int16_t)i2c_buffer[4]) << 8) | i2c_buffer[5];
  40100c:	f89d 2004 	ldrb.w	r2, [sp, #4]
  401010:	f89d 3005 	ldrb.w	r3, [sp, #5]
  401014:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
  401018:	8023      	strh	r3, [r4, #0]
}
  40101a:	b003      	add	sp, #12
  40101c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40101e:	bf00      	nop
  401020:	00014ed3 	.word	0x00014ed3

00401024 <mpu_read_raw_mag>:

void mpu_read_raw_mag(void)
{
  401024:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    mpu_read_mag(&mx, &my, &mz);
  401026:	4d0c      	ldr	r5, [pc, #48]	; (401058 <mpu_read_raw_mag+0x34>)
  401028:	4e0c      	ldr	r6, [pc, #48]	; (40105c <mpu_read_raw_mag+0x38>)
  40102a:	4f0d      	ldr	r7, [pc, #52]	; (401060 <mpu_read_raw_mag+0x3c>)
  40102c:	462a      	mov	r2, r5
  40102e:	4631      	mov	r1, r6
  401030:	4638      	mov	r0, r7
  401032:	f7ff ffbf 	bl	400fb4 <mpu_read_mag>
    raw_mag.x_axis = (float) mx;
  401036:	4c0b      	ldr	r4, [pc, #44]	; (401064 <mpu_read_raw_mag+0x40>)
  401038:	f9b7 0000 	ldrsh.w	r0, [r7]
  40103c:	f006 fd0c 	bl	407a58 <__aeabi_i2f>
  401040:	6020      	str	r0, [r4, #0]
    raw_mag.y_axis = (float) my;
  401042:	f9b6 0000 	ldrsh.w	r0, [r6]
  401046:	f006 fd07 	bl	407a58 <__aeabi_i2f>
  40104a:	6060      	str	r0, [r4, #4]
    raw_mag.z_axis = (float) mz;
  40104c:	f9b5 0000 	ldrsh.w	r0, [r5]
  401050:	f006 fd02 	bl	407a58 <__aeabi_i2f>
  401054:	60a0      	str	r0, [r4, #8]
    // m2  = my * 10.0f/1229.0f/4096.0f + 70.0f;
    // m3  = mz * 10.0f/1229.0f/4096.0f + 270.0f;

    // printf("x:y:z\t%f\t%f\t%f\r\n", m1, m2, m3);

}
  401056:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  401058:	200006c2 	.word	0x200006c2
  40105c:	20000520 	.word	0x20000520
  401060:	200006e0 	.word	0x200006e0
  401064:	2000069c 	.word	0x2000069c

00401068 <mpu_read_normalized_mag>:

void mpu_read_normalized_mag(void)
{
  401068:	b538      	push	{r3, r4, r5, lr}
    mpu_read_raw_mag();
  40106a:	f7ff ffdb 	bl	401024 <mpu_read_raw_mag>
    /*
     * milliGauss (1229 microTesla per 2^12 bits, 10 mG per microTesla)
     * apply calibration offsets in mG that correspond to your environment and magnetometer
     */

    norm_mag.x_axis = raw_mag.x_axis * 10.0f/1229.0f/4096.0f +18.0f;
  40106e:	4c18      	ldr	r4, [pc, #96]	; (4010d0 <mpu_read_normalized_mag+0x68>)
  401070:	4d18      	ldr	r5, [pc, #96]	; (4010d4 <mpu_read_normalized_mag+0x6c>)
  401072:	4919      	ldr	r1, [pc, #100]	; (4010d8 <mpu_read_normalized_mag+0x70>)
  401074:	6828      	ldr	r0, [r5, #0]
  401076:	f006 fd43 	bl	407b00 <__aeabi_fmul>
  40107a:	4918      	ldr	r1, [pc, #96]	; (4010dc <mpu_read_normalized_mag+0x74>)
  40107c:	f006 fdf4 	bl	407c68 <__aeabi_fdiv>
  401080:	f04f 5166 	mov.w	r1, #964689920	; 0x39800000
  401084:	f006 fd3c 	bl	407b00 <__aeabi_fmul>
  401088:	4915      	ldr	r1, [pc, #84]	; (4010e0 <mpu_read_normalized_mag+0x78>)
  40108a:	f006 fc31 	bl	4078f0 <__addsf3>
  40108e:	6020      	str	r0, [r4, #0]
    norm_mag.y_axis = raw_mag.y_axis * 10.0f/1229.0f/4096.0f +70.0f;
  401090:	4911      	ldr	r1, [pc, #68]	; (4010d8 <mpu_read_normalized_mag+0x70>)
  401092:	6868      	ldr	r0, [r5, #4]
  401094:	f006 fd34 	bl	407b00 <__aeabi_fmul>
  401098:	4910      	ldr	r1, [pc, #64]	; (4010dc <mpu_read_normalized_mag+0x74>)
  40109a:	f006 fde5 	bl	407c68 <__aeabi_fdiv>
  40109e:	f04f 5166 	mov.w	r1, #964689920	; 0x39800000
  4010a2:	f006 fd2d 	bl	407b00 <__aeabi_fmul>
  4010a6:	490f      	ldr	r1, [pc, #60]	; (4010e4 <mpu_read_normalized_mag+0x7c>)
  4010a8:	f006 fc22 	bl	4078f0 <__addsf3>
  4010ac:	6060      	str	r0, [r4, #4]
    norm_mag.z_axis = raw_mag.z_axis * 10.0f/1229.0f/4096.0f +270.0f;
  4010ae:	490a      	ldr	r1, [pc, #40]	; (4010d8 <mpu_read_normalized_mag+0x70>)
  4010b0:	68a8      	ldr	r0, [r5, #8]
  4010b2:	f006 fd25 	bl	407b00 <__aeabi_fmul>
  4010b6:	4909      	ldr	r1, [pc, #36]	; (4010dc <mpu_read_normalized_mag+0x74>)
  4010b8:	f006 fdd6 	bl	407c68 <__aeabi_fdiv>
  4010bc:	f04f 5166 	mov.w	r1, #964689920	; 0x39800000
  4010c0:	f006 fd1e 	bl	407b00 <__aeabi_fmul>
  4010c4:	4908      	ldr	r1, [pc, #32]	; (4010e8 <mpu_read_normalized_mag+0x80>)
  4010c6:	f006 fc13 	bl	4078f0 <__addsf3>
  4010ca:	60a0      	str	r0, [r4, #8]

}
  4010cc:	bd38      	pop	{r3, r4, r5, pc}
  4010ce:	bf00      	nop
  4010d0:	200006b4 	.word	0x200006b4
  4010d4:	2000069c 	.word	0x2000069c
  4010d8:	41200000 	.word	0x41200000
  4010dc:	4499a000 	.word	0x4499a000
  4010e0:	41900000 	.word	0x41900000
  4010e4:	428c0000 	.word	0x428c0000
  4010e8:	43870000 	.word	0x43870000

004010ec <mpu_log_settings>:

void mpu_log_settings(void)
{
  4010ec:	b508      	push	{r3, lr}
    printf("Device: 0x%1x\r\n", mpu_who_am_i());
  4010ee:	f7ff fd51 	bl	400b94 <mpu_who_am_i>
  4010f2:	4601      	mov	r1, r0
  4010f4:	482b      	ldr	r0, [pc, #172]	; (4011a4 <mpu_log_settings+0xb8>)
  4010f6:	f002 fb17 	bl	403728 <iprintf>
    printf("Sleep Mode: %s\r\n", mpu_get_sleep_enabled() ? "Enabled" : "Disabled");
  4010fa:	f7ff fe05 	bl	400d08 <mpu_get_sleep_enabled>
  4010fe:	4a2a      	ldr	r2, [pc, #168]	; (4011a8 <mpu_log_settings+0xbc>)
  401100:	492a      	ldr	r1, [pc, #168]	; (4011ac <mpu_log_settings+0xc0>)
  401102:	2800      	cmp	r0, #0
  401104:	bf18      	it	ne
  401106:	4611      	movne	r1, r2
  401108:	4829      	ldr	r0, [pc, #164]	; (4011b0 <mpu_log_settings+0xc4>)
  40110a:	f002 fb0d 	bl	403728 <iprintf>
    printf("Clock Source: ");
  40110e:	4829      	ldr	r0, [pc, #164]	; (4011b4 <mpu_log_settings+0xc8>)
  401110:	f002 fb0a 	bl	403728 <iprintf>
    switch (mpu_get_clock_source()) {
  401114:	f7ff fd52 	bl	400bbc <mpu_get_clock_source>
  401118:	b160      	cbz	r0, 401134 <mpu_log_settings+0x48>
  40111a:	2801      	cmp	r0, #1
  40111c:	d00e      	beq.n	40113c <mpu_log_settings+0x50>
        break;
        case MPU6050_CLOCK_PLL_XGYRO:
        printf("PLL with X axis gyroscope reference\r\n");
        break;
    }
    printf("Gyroscope: ");
  40111e:	4826      	ldr	r0, [pc, #152]	; (4011b8 <mpu_log_settings+0xcc>)
  401120:	f002 fb02 	bl	403728 <iprintf>
        switch (mpu_get_gyro_scale()) {
  401124:	f7ff fd82 	bl	400c2c <mpu_get_gyro_scale>
  401128:	2803      	cmp	r0, #3
  40112a:	d80e      	bhi.n	40114a <mpu_log_settings+0x5e>
  40112c:	e8df f000 	tbb	[pc, r0]
  401130:	36322e0a 	.word	0x36322e0a
        printf("Internal 8MHz oscillator\r\n");
  401134:	4821      	ldr	r0, [pc, #132]	; (4011bc <mpu_log_settings+0xd0>)
  401136:	f002 faf7 	bl	403728 <iprintf>
        break;
  40113a:	e7f0      	b.n	40111e <mpu_log_settings+0x32>
        printf("PLL with X axis gyroscope reference\r\n");
  40113c:	4820      	ldr	r0, [pc, #128]	; (4011c0 <mpu_log_settings+0xd4>)
  40113e:	f002 faf3 	bl	403728 <iprintf>
        break;
  401142:	e7ec      	b.n	40111e <mpu_log_settings+0x32>
        case MPU6050_GYRO_FS_250:
        printf("250 dps\r\n");
  401144:	481f      	ldr	r0, [pc, #124]	; (4011c4 <mpu_log_settings+0xd8>)
  401146:	f002 faef 	bl	403728 <iprintf>
        break;
        case MPU6050_GYRO_FS_2000:
        printf("2000 dps\r\n");
        break;
    }
    printf("use_calibrate: %d\r\n", use_calibrate);
  40114a:	4b1f      	ldr	r3, [pc, #124]	; (4011c8 <mpu_log_settings+0xdc>)
  40114c:	7819      	ldrb	r1, [r3, #0]
  40114e:	481f      	ldr	r0, [pc, #124]	; (4011cc <mpu_log_settings+0xe0>)
  401150:	f002 faea 	bl	403728 <iprintf>
    printf("actual_threshold: %f\r\n", actual_threshold);
  401154:	4b1e      	ldr	r3, [pc, #120]	; (4011d0 <mpu_log_settings+0xe4>)
  401156:	6818      	ldr	r0, [r3, #0]
  401158:	f006 f824 	bl	4071a4 <__aeabi_f2d>
  40115c:	4602      	mov	r2, r0
  40115e:	460b      	mov	r3, r1
  401160:	481c      	ldr	r0, [pc, #112]	; (4011d4 <mpu_log_settings+0xe8>)
  401162:	f002 fae1 	bl	403728 <iprintf>
    printf("dps_per_digit: %f\r\n", dps_per_digit);
  401166:	4b1c      	ldr	r3, [pc, #112]	; (4011d8 <mpu_log_settings+0xec>)
  401168:	6818      	ldr	r0, [r3, #0]
  40116a:	f006 f81b 	bl	4071a4 <__aeabi_f2d>
  40116e:	4602      	mov	r2, r0
  401170:	460b      	mov	r3, r1
  401172:	481a      	ldr	r0, [pc, #104]	; (4011dc <mpu_log_settings+0xf0>)
  401174:	f002 fad8 	bl	403728 <iprintf>
    printf("range_per_digit: %f\r\n", range_per_digit);
  401178:	4b19      	ldr	r3, [pc, #100]	; (4011e0 <mpu_log_settings+0xf4>)
  40117a:	6818      	ldr	r0, [r3, #0]
  40117c:	f006 f812 	bl	4071a4 <__aeabi_f2d>
  401180:	4602      	mov	r2, r0
  401182:	460b      	mov	r3, r1
  401184:	4817      	ldr	r0, [pc, #92]	; (4011e4 <mpu_log_settings+0xf8>)
  401186:	f002 facf 	bl	403728 <iprintf>

}
  40118a:	bd08      	pop	{r3, pc}
        printf("500 dps\r\n");
  40118c:	4816      	ldr	r0, [pc, #88]	; (4011e8 <mpu_log_settings+0xfc>)
  40118e:	f002 facb 	bl	403728 <iprintf>
        break;
  401192:	e7da      	b.n	40114a <mpu_log_settings+0x5e>
        printf("1000 dps\r\n");
  401194:	4815      	ldr	r0, [pc, #84]	; (4011ec <mpu_log_settings+0x100>)
  401196:	f002 fac7 	bl	403728 <iprintf>
        break;
  40119a:	e7d6      	b.n	40114a <mpu_log_settings+0x5e>
        printf("2000 dps\r\n");
  40119c:	4814      	ldr	r0, [pc, #80]	; (4011f0 <mpu_log_settings+0x104>)
  40119e:	f002 fac3 	bl	403728 <iprintf>
        break;
  4011a2:	e7d2      	b.n	40114a <mpu_log_settings+0x5e>
  4011a4:	004081f0 	.word	0x004081f0
  4011a8:	004081dc 	.word	0x004081dc
  4011ac:	004081e4 	.word	0x004081e4
  4011b0:	00408200 	.word	0x00408200
  4011b4:	00408214 	.word	0x00408214
  4011b8:	00408268 	.word	0x00408268
  4011bc:	00408224 	.word	0x00408224
  4011c0:	00408240 	.word	0x00408240
  4011c4:	00408274 	.word	0x00408274
  4011c8:	20000448 	.word	0x20000448
  4011cc:	004082a4 	.word	0x004082a4
  4011d0:	20000418 	.word	0x20000418
  4011d4:	004082b8 	.word	0x004082b8
  4011d8:	2000041c 	.word	0x2000041c
  4011dc:	004082d0 	.word	0x004082d0
  4011e0:	20000444 	.word	0x20000444
  4011e4:	004082e4 	.word	0x004082e4
  4011e8:	00408280 	.word	0x00408280
  4011ec:	0040828c 	.word	0x0040828c
  4011f0:	00408298 	.word	0x00408298

004011f4 <mpu_set_threshold>:
{
	return actual_threshold;
}

void mpu_set_threshold(uint8_t multiple)
{
  4011f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if (multiple > 0) {
  4011f6:	4604      	mov	r4, r0
  4011f8:	b308      	cbz	r0, 40123e <mpu_set_threshold+0x4a>
		if (!use_calibrate) {
  4011fa:	4b14      	ldr	r3, [pc, #80]	; (40124c <mpu_set_threshold+0x58>)
  4011fc:	781b      	ldrb	r3, [r3, #0]
  4011fe:	b1d3      	cbz	r3, 401236 <mpu_set_threshold+0x42>
			mpu_calibrate_gyro(GYRO_SAMPLES);
		}

		threshold_gyro.x_axis = threshold.x_axis * multiple;
  401200:	4620      	mov	r0, r4
  401202:	f006 fc29 	bl	407a58 <__aeabi_i2f>
  401206:	4607      	mov	r7, r0
  401208:	4d11      	ldr	r5, [pc, #68]	; (401250 <mpu_set_threshold+0x5c>)
  40120a:	4e12      	ldr	r6, [pc, #72]	; (401254 <mpu_set_threshold+0x60>)
  40120c:	4601      	mov	r1, r0
  40120e:	6830      	ldr	r0, [r6, #0]
  401210:	f006 fc76 	bl	407b00 <__aeabi_fmul>
  401214:	6028      	str	r0, [r5, #0]
		threshold_gyro.y_axis = threshold.y_axis * multiple;
  401216:	4639      	mov	r1, r7
  401218:	6870      	ldr	r0, [r6, #4]
  40121a:	f006 fc71 	bl	407b00 <__aeabi_fmul>
  40121e:	6068      	str	r0, [r5, #4]
		threshold_gyro.z_axis = threshold.z_axis * multiple;
  401220:	4639      	mov	r1, r7
  401222:	68b0      	ldr	r0, [r6, #8]
  401224:	f006 fc6c 	bl	407b00 <__aeabi_fmul>
  401228:	60a8      	str	r0, [r5, #8]
		threshold_gyro.x_axis = 0;
		threshold_gyro.y_axis = 0;
		threshold_gyro.z_axis = 0;
	}

	actual_threshold = multiple;
  40122a:	4620      	mov	r0, r4
  40122c:	f006 fc10 	bl	407a50 <__aeabi_ui2f>
  401230:	4b09      	ldr	r3, [pc, #36]	; (401258 <mpu_set_threshold+0x64>)
  401232:	6018      	str	r0, [r3, #0]
  401234:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			mpu_calibrate_gyro(GYRO_SAMPLES);
  401236:	2032      	movs	r0, #50	; 0x32
  401238:	f000 f810 	bl	40125c <mpu_calibrate_gyro>
  40123c:	e7e0      	b.n	401200 <mpu_set_threshold+0xc>
		threshold_gyro.x_axis = 0;
  40123e:	4b04      	ldr	r3, [pc, #16]	; (401250 <mpu_set_threshold+0x5c>)
  401240:	2200      	movs	r2, #0
  401242:	601a      	str	r2, [r3, #0]
		threshold_gyro.y_axis = 0;
  401244:	605a      	str	r2, [r3, #4]
		threshold_gyro.z_axis = 0;
  401246:	609a      	str	r2, [r3, #8]
  401248:	e7ef      	b.n	40122a <mpu_set_threshold+0x36>
  40124a:	bf00      	nop
  40124c:	20000448 	.word	0x20000448
  401250:	20000684 	.word	0x20000684
  401254:	20000504 	.word	0x20000504
  401258:	20000418 	.word	0x20000418

0040125c <mpu_calibrate_gyro>:
{
  40125c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401260:	b085      	sub	sp, #20
	use_calibrate = true;
  401262:	4b60      	ldr	r3, [pc, #384]	; (4013e4 <mpu_calibrate_gyro+0x188>)
  401264:	2201      	movs	r2, #1
  401266:	701a      	strb	r2, [r3, #0]
	for (uint8_t i=0; i<samples; i++) {
  401268:	4682      	mov	sl, r0
  40126a:	2800      	cmp	r0, #0
  40126c:	f000 80a6 	beq.w	4013bc <mpu_calibrate_gyro+0x160>
  401270:	2400      	movs	r4, #0
	float sigma_z = 0;
  401272:	f04f 0900 	mov.w	r9, #0
	float sigma_y = 0;
  401276:	f8cd 900c 	str.w	r9, [sp, #12]
	float sigma_x = 0;
  40127a:	f8cd 9008 	str.w	r9, [sp, #8]
	float sum_z = 0;
  40127e:	f8cd 9004 	str.w	r9, [sp, #4]
	float sum_y = 0;
  401282:	46cb      	mov	fp, r9
	float sum_x = 0;
  401284:	f8cd 9000 	str.w	r9, [sp]
		sum_x += raw_gyro.x_axis;
  401288:	f8df 816c 	ldr.w	r8, [pc, #364]	; 4013f8 <mpu_calibrate_gyro+0x19c>
        mpu_read_raw_gyro();
  40128c:	f7ff fd72 	bl	400d74 <mpu_read_raw_gyro>
		sum_x += raw_gyro.x_axis;
  401290:	f8d8 7000 	ldr.w	r7, [r8]
  401294:	4639      	mov	r1, r7
  401296:	9800      	ldr	r0, [sp, #0]
  401298:	f006 fb2a 	bl	4078f0 <__addsf3>
  40129c:	9000      	str	r0, [sp, #0]
		sum_y += raw_gyro.y_axis;
  40129e:	f8d8 6004 	ldr.w	r6, [r8, #4]
  4012a2:	4631      	mov	r1, r6
  4012a4:	4658      	mov	r0, fp
  4012a6:	f006 fb23 	bl	4078f0 <__addsf3>
  4012aa:	4683      	mov	fp, r0
		sum_z += raw_gyro.z_axis;
  4012ac:	f8d8 5008 	ldr.w	r5, [r8, #8]
  4012b0:	4629      	mov	r1, r5
  4012b2:	9801      	ldr	r0, [sp, #4]
  4012b4:	f006 fb1c 	bl	4078f0 <__addsf3>
  4012b8:	9001      	str	r0, [sp, #4]
		sigma_x += raw_gyro.x_axis * raw_gyro.x_axis;
  4012ba:	4639      	mov	r1, r7
  4012bc:	4638      	mov	r0, r7
  4012be:	f006 fc1f 	bl	407b00 <__aeabi_fmul>
  4012c2:	4601      	mov	r1, r0
  4012c4:	9802      	ldr	r0, [sp, #8]
  4012c6:	f006 fb13 	bl	4078f0 <__addsf3>
  4012ca:	9002      	str	r0, [sp, #8]
		sigma_y += raw_gyro.y_axis * raw_gyro.y_axis;
  4012cc:	4631      	mov	r1, r6
  4012ce:	4630      	mov	r0, r6
  4012d0:	f006 fc16 	bl	407b00 <__aeabi_fmul>
  4012d4:	4601      	mov	r1, r0
  4012d6:	9803      	ldr	r0, [sp, #12]
  4012d8:	f006 fb0a 	bl	4078f0 <__addsf3>
  4012dc:	9003      	str	r0, [sp, #12]
		sigma_z += raw_gyro.z_axis * raw_gyro.z_axis;
  4012de:	4629      	mov	r1, r5
  4012e0:	4628      	mov	r0, r5
  4012e2:	f006 fc0d 	bl	407b00 <__aeabi_fmul>
  4012e6:	4601      	mov	r1, r0
  4012e8:	4648      	mov	r0, r9
  4012ea:	f006 fb01 	bl	4078f0 <__addsf3>
  4012ee:	4681      	mov	r9, r0
		delay_ms(5);
  4012f0:	f24a 706a 	movw	r0, #42858	; 0xa76a
  4012f4:	f007 fa1c 	bl	408730 <__portable_delay_cycles_veneer>
	for (uint8_t i=0; i<samples; i++) {
  4012f8:	3401      	adds	r4, #1
  4012fa:	b2e4      	uxtb	r4, r4
  4012fc:	45a2      	cmp	sl, r4
  4012fe:	d1c5      	bne.n	40128c <mpu_calibrate_gyro+0x30>
	delta_gyro.x_axis = sum_x/samples;
  401300:	4650      	mov	r0, sl
  401302:	f006 fba9 	bl	407a58 <__aeabi_i2f>
  401306:	4605      	mov	r5, r0
  401308:	4601      	mov	r1, r0
  40130a:	9800      	ldr	r0, [sp, #0]
  40130c:	f006 fcac 	bl	407c68 <__aeabi_fdiv>
  401310:	4606      	mov	r6, r0
  401312:	4c35      	ldr	r4, [pc, #212]	; (4013e8 <mpu_calibrate_gyro+0x18c>)
  401314:	6020      	str	r0, [r4, #0]
	delta_gyro.y_axis = sum_y/samples;
  401316:	4629      	mov	r1, r5
  401318:	4658      	mov	r0, fp
  40131a:	f006 fca5 	bl	407c68 <__aeabi_fdiv>
  40131e:	6060      	str	r0, [r4, #4]
	delta_gyro.z_axis = sum_z/samples;
  401320:	4629      	mov	r1, r5
  401322:	9801      	ldr	r0, [sp, #4]
  401324:	f006 fca0 	bl	407c68 <__aeabi_fdiv>
  401328:	60a0      	str	r0, [r4, #8]
	threshold.x_axis = sqrt((sigma_x/50) - (delta_gyro.x_axis * delta_gyro.x_axis));
  40132a:	4930      	ldr	r1, [pc, #192]	; (4013ec <mpu_calibrate_gyro+0x190>)
  40132c:	9802      	ldr	r0, [sp, #8]
  40132e:	f006 fc9b 	bl	407c68 <__aeabi_fdiv>
  401332:	4605      	mov	r5, r0
  401334:	4631      	mov	r1, r6
  401336:	4630      	mov	r0, r6
  401338:	f006 fbe2 	bl	407b00 <__aeabi_fmul>
  40133c:	4601      	mov	r1, r0
  40133e:	4628      	mov	r0, r5
  401340:	f006 fad4 	bl	4078ec <__aeabi_fsub>
  401344:	f005 ff2e 	bl	4071a4 <__aeabi_f2d>
  401348:	f001 f9dc 	bl	402704 <sqrt>
  40134c:	4d28      	ldr	r5, [pc, #160]	; (4013f0 <mpu_calibrate_gyro+0x194>)
  40134e:	f006 fa79 	bl	407844 <__aeabi_d2f>
  401352:	6028      	str	r0, [r5, #0]
	threshold.y_axis = sqrt((sigma_y/50) - (delta_gyro.y_axis * delta_gyro.y_axis));
  401354:	6866      	ldr	r6, [r4, #4]
  401356:	4925      	ldr	r1, [pc, #148]	; (4013ec <mpu_calibrate_gyro+0x190>)
  401358:	9803      	ldr	r0, [sp, #12]
  40135a:	f006 fc85 	bl	407c68 <__aeabi_fdiv>
  40135e:	4607      	mov	r7, r0
  401360:	4631      	mov	r1, r6
  401362:	4630      	mov	r0, r6
  401364:	f006 fbcc 	bl	407b00 <__aeabi_fmul>
  401368:	4601      	mov	r1, r0
  40136a:	4638      	mov	r0, r7
  40136c:	f006 fabe 	bl	4078ec <__aeabi_fsub>
  401370:	f005 ff18 	bl	4071a4 <__aeabi_f2d>
  401374:	f001 f9c6 	bl	402704 <sqrt>
  401378:	f006 fa64 	bl	407844 <__aeabi_d2f>
  40137c:	6068      	str	r0, [r5, #4]
	threshold.z_axis = sqrt((sigma_z/50) - (delta_gyro.z_axis * delta_gyro.z_axis));
  40137e:	68a4      	ldr	r4, [r4, #8]
  401380:	491a      	ldr	r1, [pc, #104]	; (4013ec <mpu_calibrate_gyro+0x190>)
  401382:	4648      	mov	r0, r9
  401384:	f006 fc70 	bl	407c68 <__aeabi_fdiv>
  401388:	4606      	mov	r6, r0
  40138a:	4621      	mov	r1, r4
  40138c:	4620      	mov	r0, r4
  40138e:	f006 fbb7 	bl	407b00 <__aeabi_fmul>
  401392:	4601      	mov	r1, r0
  401394:	4630      	mov	r0, r6
  401396:	f006 faa9 	bl	4078ec <__aeabi_fsub>
  40139a:	f005 ff03 	bl	4071a4 <__aeabi_f2d>
  40139e:	f001 f9b1 	bl	402704 <sqrt>
  4013a2:	f006 fa4f 	bl	407844 <__aeabi_d2f>
  4013a6:	60a8      	str	r0, [r5, #8]
	if (actual_threshold > 0) {
  4013a8:	4b12      	ldr	r3, [pc, #72]	; (4013f4 <mpu_calibrate_gyro+0x198>)
  4013aa:	681c      	ldr	r4, [r3, #0]
  4013ac:	2100      	movs	r1, #0
  4013ae:	4620      	mov	r0, r4
  4013b0:	f006 fd62 	bl	407e78 <__aeabi_fcmpgt>
  4013b4:	b970      	cbnz	r0, 4013d4 <mpu_calibrate_gyro+0x178>
}
  4013b6:	b005      	add	sp, #20
  4013b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	float sigma_z = 0;
  4013bc:	f04f 0900 	mov.w	r9, #0
	float sigma_y = 0;
  4013c0:	f8cd 900c 	str.w	r9, [sp, #12]
	float sigma_x = 0;
  4013c4:	f8cd 9008 	str.w	r9, [sp, #8]
	float sum_z = 0;
  4013c8:	f8cd 9004 	str.w	r9, [sp, #4]
	float sum_y = 0;
  4013cc:	46cb      	mov	fp, r9
	float sum_x = 0;
  4013ce:	f8cd 9000 	str.w	r9, [sp]
  4013d2:	e795      	b.n	401300 <mpu_calibrate_gyro+0xa4>
		mpu_set_threshold(actual_threshold);
  4013d4:	4620      	mov	r0, r4
  4013d6:	f006 fd7f 	bl	407ed8 <__aeabi_f2uiz>
  4013da:	b2c0      	uxtb	r0, r0
  4013dc:	f7ff ff0a 	bl	4011f4 <mpu_set_threshold>
}
  4013e0:	e7e9      	b.n	4013b6 <mpu_calibrate_gyro+0x15a>
  4013e2:	bf00      	nop
  4013e4:	20000448 	.word	0x20000448
  4013e8:	200006d0 	.word	0x200006d0
  4013ec:	42480000 	.word	0x42480000
  4013f0:	20000504 	.word	0x20000504
  4013f4:	20000418 	.word	0x20000418
  4013f8:	20000510 	.word	0x20000510

004013fc <imu_init>:
float last_gyro_angle_x = 0.0f;
float last_gyro_angle_y = 0.0f;
float last_gyro_angle_z = 0.0f;

bool imu_init(void)
{
  4013fc:	b510      	push	{r4, lr}
    ap.imu.x_axis = 0.0f;
  4013fe:	4b0c      	ldr	r3, [pc, #48]	; (401430 <imu_init+0x34>)
  401400:	2200      	movs	r2, #0
  401402:	601a      	str	r2, [r3, #0]
    ap.imu.y_axis = 0.0f;
  401404:	605a      	str	r2, [r3, #4]
    ap.imu.z_axis = 0.0f;
  401406:	609a      	str	r2, [r3, #8]

    ap.setpoint.x_axis = 0.0f;
  401408:	619a      	str	r2, [r3, #24]
    ap.setpoint.y_axis = 0.0f;
  40140a:	61da      	str	r2, [r3, #28]
    ap.setpoint.z_axis = 0.0f;
  40140c:	621a      	str	r2, [r3, #32]

    ap.command.x_axis = 0.0f;
  40140e:	625a      	str	r2, [r3, #36]	; 0x24
    ap.command.y_axis = 0.0f;
  401410:	629a      	str	r2, [r3, #40]	; 0x28
    ap.command.z_axis = 0.0f;
  401412:	62da      	str	r2, [r3, #44]	; 0x2c

    return (mpu_init() & mpu_probe() & mpu_begin(MPU6050_GYRO_FS_250, MPU6050_ACCEL_FS_2));
  401414:	f7ff fb76 	bl	400b04 <mpu_init>
  401418:	4604      	mov	r4, r0
  40141a:	f7ff fb9d 	bl	400b58 <mpu_probe>
  40141e:	4004      	ands	r4, r0
  401420:	b2e4      	uxtb	r4, r4
  401422:	2100      	movs	r1, #0
  401424:	4608      	mov	r0, r1
  401426:	f7ff fc41 	bl	400cac <mpu_begin>
}
  40142a:	4020      	ands	r0, r4
  40142c:	bd10      	pop	{r4, pc}
  40142e:	bf00      	nop
  401430:	20000854 	.word	0x20000854

00401434 <imu_calibrate>:

void imu_calibrate(void)
{
  401434:	b508      	push	{r3, lr}
    printf("calibrating imu...\r\n");
  401436:	4807      	ldr	r0, [pc, #28]	; (401454 <imu_calibrate+0x20>)
  401438:	f002 f976 	bl	403728 <iprintf>
    mpu_calibrate_gyro(GYRO_SAMPLES);
  40143c:	2032      	movs	r0, #50	; 0x32
  40143e:	f7ff ff0d 	bl	40125c <mpu_calibrate_gyro>
    mpu_set_threshold(0);
  401442:	2000      	movs	r0, #0
  401444:	f7ff fed6 	bl	4011f4 <mpu_set_threshold>
    mpu_log_settings();
  401448:	f7ff fe50 	bl	4010ec <mpu_log_settings>
    printf("calibration complete.\r\n");
  40144c:	4802      	ldr	r0, [pc, #8]	; (401458 <imu_calibrate+0x24>)
  40144e:	f002 f96b 	bl	403728 <iprintf>
}
  401452:	bd08      	pop	{r3, pc}
  401454:	00408328 	.word	0x00408328
  401458:	00408340 	.word	0x00408340
  40145c:	00000000 	.word	0x00000000

00401460 <imu_tick>:

void imu_tick(void)
{
  401460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401464:	b08d      	sub	sp, #52	; 0x34
    clock_time_t t_now = cph_get_millis();
  401466:	4e92      	ldr	r6, [pc, #584]	; (4016b0 <imu_tick+0x250>)
  401468:	6835      	ldr	r5, [r6, #0]

    mpu_read_normalized_gyro();
  40146a:	a808      	add	r0, sp, #32
  40146c:	f7ff fca4 	bl	400db8 <mpu_read_normalized_gyro>
    mpu_read_normalized_acceleration();
  401470:	f7ff fd78 	bl	400f64 <mpu_read_normalized_acceleration>

    float gyro_x = (norm_gyro.x_axis*M_PI)/180.0f;
  401474:	4c8f      	ldr	r4, [pc, #572]	; (4016b4 <imu_tick+0x254>)
  401476:	6820      	ldr	r0, [r4, #0]
  401478:	f005 fe94 	bl	4071a4 <__aeabi_f2d>
  40147c:	a38a      	add	r3, pc, #552	; (adr r3, 4016a8 <imu_tick+0x248>)
  40147e:	e9d3 2300 	ldrd	r2, r3, [r3]
  401482:	f005 fee7 	bl	407254 <__aeabi_dmul>
  401486:	2200      	movs	r2, #0
  401488:	4b8b      	ldr	r3, [pc, #556]	; (4016b8 <imu_tick+0x258>)
  40148a:	f006 f80d 	bl	4074a8 <__aeabi_ddiv>
  40148e:	f006 f9d9 	bl	407844 <__aeabi_d2f>
  401492:	4683      	mov	fp, r0
    float gyro_y = (norm_gyro.y_axis*M_PI)/180.0f;
  401494:	6860      	ldr	r0, [r4, #4]
  401496:	f005 fe85 	bl	4071a4 <__aeabi_f2d>
  40149a:	a383      	add	r3, pc, #524	; (adr r3, 4016a8 <imu_tick+0x248>)
  40149c:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014a0:	f005 fed8 	bl	407254 <__aeabi_dmul>
  4014a4:	2200      	movs	r2, #0
  4014a6:	4b84      	ldr	r3, [pc, #528]	; (4016b8 <imu_tick+0x258>)
  4014a8:	f005 fffe 	bl	4074a8 <__aeabi_ddiv>
  4014ac:	f006 f9ca 	bl	407844 <__aeabi_d2f>
  4014b0:	9006      	str	r0, [sp, #24]
    float gyro_z = (norm_gyro.z_axis*M_PI)/180.0f;
  4014b2:	68a0      	ldr	r0, [r4, #8]
  4014b4:	f005 fe76 	bl	4071a4 <__aeabi_f2d>
  4014b8:	a37b      	add	r3, pc, #492	; (adr r3, 4016a8 <imu_tick+0x248>)
  4014ba:	e9d3 2300 	ldrd	r2, r3, [r3]
  4014be:	f005 fec9 	bl	407254 <__aeabi_dmul>
  4014c2:	2200      	movs	r2, #0
  4014c4:	4b7c      	ldr	r3, [pc, #496]	; (4016b8 <imu_tick+0x258>)
  4014c6:	f005 ffef 	bl	4074a8 <__aeabi_ddiv>
  4014ca:	f006 f9bb 	bl	407844 <__aeabi_d2f>
  4014ce:	9007      	str	r0, [sp, #28]
    float mag_y = 0.0f;
    float mag_z = 0.0f;


    // TODO: Need to tune
    if (cph_get_millis() >= f_mag_timeout) {
  4014d0:	6832      	ldr	r2, [r6, #0]
  4014d2:	4b7a      	ldr	r3, [pc, #488]	; (4016bc <imu_tick+0x25c>)
  4014d4:	681b      	ldr	r3, [r3, #0]
  4014d6:	429a      	cmp	r2, r3
  4014d8:	f080 80d8 	bcs.w	40168c <imu_tick+0x22c>
    float mag_z = 0.0f;
  4014dc:	f04f 0a00 	mov.w	sl, #0
    float mag_y = 0.0f;
  4014e0:	f8cd a014 	str.w	sl, [sp, #20]
    float mag_x = 0.0f;
  4014e4:	f8cd a010 	str.w	sl, [sp, #16]

    }



    float accel_angle_y = atan2(norm_accel.x_axis, sqrt( pow(norm_accel.y_axis, 2) + pow(norm_accel.z_axis, 2))) * 180.0f / M_PI;
  4014e8:	4c75      	ldr	r4, [pc, #468]	; (4016c0 <imu_tick+0x260>)
  4014ea:	6820      	ldr	r0, [r4, #0]
  4014ec:	f005 fe5a 	bl	4071a4 <__aeabi_f2d>
  4014f0:	e9cd 0100 	strd	r0, r1, [sp]
  4014f4:	6860      	ldr	r0, [r4, #4]
  4014f6:	f005 fe55 	bl	4071a4 <__aeabi_f2d>
  4014fa:	4680      	mov	r8, r0
  4014fc:	4689      	mov	r9, r1
  4014fe:	68a0      	ldr	r0, [r4, #8]
  401500:	f005 fe50 	bl	4071a4 <__aeabi_f2d>
  401504:	4606      	mov	r6, r0
  401506:	460f      	mov	r7, r1
  401508:	4642      	mov	r2, r8
  40150a:	464b      	mov	r3, r9
  40150c:	4640      	mov	r0, r8
  40150e:	4649      	mov	r1, r9
  401510:	f005 fea0 	bl	407254 <__aeabi_dmul>
  401514:	4680      	mov	r8, r0
  401516:	4689      	mov	r9, r1
  401518:	4632      	mov	r2, r6
  40151a:	463b      	mov	r3, r7
  40151c:	4630      	mov	r0, r6
  40151e:	4639      	mov	r1, r7
  401520:	f005 fe98 	bl	407254 <__aeabi_dmul>
  401524:	4602      	mov	r2, r0
  401526:	460b      	mov	r3, r1
  401528:	4640      	mov	r0, r8
  40152a:	4649      	mov	r1, r9
  40152c:	f005 fcdc 	bl	406ee8 <__adddf3>
  401530:	f001 f8e8 	bl	402704 <sqrt>
  401534:	4602      	mov	r2, r0
  401536:	460b      	mov	r3, r1
  401538:	e9dd 0100 	ldrd	r0, r1, [sp]
  40153c:	f001 f8e0 	bl	402700 <atan2>
  401540:	e9cd 0100 	strd	r0, r1, [sp]
    float accel_angle_x = atan2(norm_accel.y_axis, sqrt( pow(norm_accel.x_axis, 2) + pow(norm_accel.z_axis, 2))) * 180.0f / M_PI;
  401544:	6860      	ldr	r0, [r4, #4]
  401546:	f005 fe2d 	bl	4071a4 <__aeabi_f2d>
  40154a:	e9cd 0102 	strd	r0, r1, [sp, #8]
  40154e:	6820      	ldr	r0, [r4, #0]
  401550:	f005 fe28 	bl	4071a4 <__aeabi_f2d>
  401554:	4606      	mov	r6, r0
  401556:	460f      	mov	r7, r1
  401558:	68a0      	ldr	r0, [r4, #8]
  40155a:	f005 fe23 	bl	4071a4 <__aeabi_f2d>
  40155e:	4680      	mov	r8, r0
  401560:	4689      	mov	r9, r1
  401562:	4632      	mov	r2, r6
  401564:	463b      	mov	r3, r7
  401566:	4630      	mov	r0, r6
  401568:	4639      	mov	r1, r7
  40156a:	f005 fe73 	bl	407254 <__aeabi_dmul>
  40156e:	4606      	mov	r6, r0
  401570:	460f      	mov	r7, r1
  401572:	4642      	mov	r2, r8
  401574:	464b      	mov	r3, r9
  401576:	4640      	mov	r0, r8
  401578:	4649      	mov	r1, r9
  40157a:	f005 fe6b 	bl	407254 <__aeabi_dmul>
  40157e:	4602      	mov	r2, r0
  401580:	460b      	mov	r3, r1
  401582:	4630      	mov	r0, r6
  401584:	4639      	mov	r1, r7
  401586:	f005 fcaf 	bl	406ee8 <__adddf3>
  40158a:	f001 f8bb 	bl	402704 <sqrt>
  40158e:	4602      	mov	r2, r0
  401590:	460b      	mov	r3, r1
  401592:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  401596:	f001 f8b3 	bl	402700 <atan2>
  40159a:	4606      	mov	r6, r0
  40159c:	460f      	mov	r7, r1
    float accel_angle_z = 0;

    // Compute filtered angles
    clock_time_t delta_t = (t_now-last_time_read);
  40159e:	f8df 9140 	ldr.w	r9, [pc, #320]	; 4016e0 <imu_tick+0x280>
  4015a2:	f8d9 0000 	ldr.w	r0, [r9]
    float dt = ((float)delta_t/1000.0f);
  4015a6:	1a28      	subs	r0, r5, r0
  4015a8:	f006 fa52 	bl	407a50 <__aeabi_ui2f>
  4015ac:	4945      	ldr	r1, [pc, #276]	; (4016c4 <imu_tick+0x264>)
  4015ae:	f006 fb5b 	bl	407c68 <__aeabi_fdiv>
  4015b2:	4680      	mov	r8, r0

    float gyro_angle_x = gyro_x * dt + last_angle_x;
  4015b4:	4601      	mov	r1, r0
  4015b6:	4658      	mov	r0, fp
  4015b8:	f006 faa2 	bl	407b00 <__aeabi_fmul>
  4015bc:	f8df b124 	ldr.w	fp, [pc, #292]	; 4016e4 <imu_tick+0x284>
  4015c0:	f8db 1000 	ldr.w	r1, [fp]
  4015c4:	f006 f994 	bl	4078f0 <__addsf3>
    // Compute drifting gyro angles
    float unfiltered_gyro_angle_x = gyro_x * dt + last_gyro_angle_x;
    float unfiltered_gyro_angle_y = gyro_y * dt + last_gyro_angle_y;
    float unfiltered_gyro_angle_z = gyro_z * dt + last_gyro_angle_z;

    float angle_x = alpha * gyro_angle_x + (1.0f - alpha) * accel_angle_x;
  4015c8:	493f      	ldr	r1, [pc, #252]	; (4016c8 <imu_tick+0x268>)
  4015ca:	f006 fa99 	bl	407b00 <__aeabi_fmul>
  4015ce:	4604      	mov	r4, r0
    float accel_angle_x = atan2(norm_accel.y_axis, sqrt( pow(norm_accel.x_axis, 2) + pow(norm_accel.z_axis, 2))) * 180.0f / M_PI;
  4015d0:	2200      	movs	r2, #0
  4015d2:	4b39      	ldr	r3, [pc, #228]	; (4016b8 <imu_tick+0x258>)
  4015d4:	4630      	mov	r0, r6
  4015d6:	4639      	mov	r1, r7
  4015d8:	f005 fe3c 	bl	407254 <__aeabi_dmul>
  4015dc:	a332      	add	r3, pc, #200	; (adr r3, 4016a8 <imu_tick+0x248>)
  4015de:	e9d3 2300 	ldrd	r2, r3, [r3]
  4015e2:	f005 ff61 	bl	4074a8 <__aeabi_ddiv>
  4015e6:	f006 f92d 	bl	407844 <__aeabi_d2f>
    float angle_x = alpha * gyro_angle_x + (1.0f - alpha) * accel_angle_x;
  4015ea:	4938      	ldr	r1, [pc, #224]	; (4016cc <imu_tick+0x26c>)
  4015ec:	f006 fa88 	bl	407b00 <__aeabi_fmul>
  4015f0:	4601      	mov	r1, r0
  4015f2:	4620      	mov	r0, r4
  4015f4:	f006 f97c 	bl	4078f0 <__addsf3>
  4015f8:	4606      	mov	r6, r0
    float gyro_angle_y = gyro_y * dt + last_angle_y;
  4015fa:	4641      	mov	r1, r8
  4015fc:	9806      	ldr	r0, [sp, #24]
  4015fe:	f006 fa7f 	bl	407b00 <__aeabi_fmul>
  401602:	4f33      	ldr	r7, [pc, #204]	; (4016d0 <imu_tick+0x270>)
  401604:	6839      	ldr	r1, [r7, #0]
  401606:	f006 f973 	bl	4078f0 <__addsf3>
    float angle_y = alpha * gyro_angle_y + (1.0f - alpha) * accel_angle_y;
  40160a:	492f      	ldr	r1, [pc, #188]	; (4016c8 <imu_tick+0x268>)
  40160c:	f006 fa78 	bl	407b00 <__aeabi_fmul>
  401610:	4604      	mov	r4, r0
    float accel_angle_y = atan2(norm_accel.x_axis, sqrt( pow(norm_accel.y_axis, 2) + pow(norm_accel.z_axis, 2))) * 180.0f / M_PI;
  401612:	2200      	movs	r2, #0
  401614:	4b28      	ldr	r3, [pc, #160]	; (4016b8 <imu_tick+0x258>)
  401616:	e9dd 0100 	ldrd	r0, r1, [sp]
  40161a:	f005 fe1b 	bl	407254 <__aeabi_dmul>
  40161e:	a322      	add	r3, pc, #136	; (adr r3, 4016a8 <imu_tick+0x248>)
  401620:	e9d3 2300 	ldrd	r2, r3, [r3]
  401624:	f005 ff40 	bl	4074a8 <__aeabi_ddiv>
  401628:	f006 f90c 	bl	407844 <__aeabi_d2f>
    float angle_y = alpha * gyro_angle_y + (1.0f - alpha) * accel_angle_y;
  40162c:	4927      	ldr	r1, [pc, #156]	; (4016cc <imu_tick+0x26c>)
  40162e:	f006 fa67 	bl	407b00 <__aeabi_fmul>
  401632:	4601      	mov	r1, r0
  401634:	4620      	mov	r0, r4
  401636:	f006 f95b 	bl	4078f0 <__addsf3>
  40163a:	4604      	mov	r4, r0
    float gyro_angle_z = gyro_z * dt + last_angle_z;
  40163c:	4641      	mov	r1, r8
  40163e:	9807      	ldr	r0, [sp, #28]
  401640:	f006 fa5e 	bl	407b00 <__aeabi_fmul>
  401644:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 4016e8 <imu_tick+0x288>
  401648:	f8d8 1000 	ldr.w	r1, [r8]
  40164c:	f006 f950 	bl	4078f0 <__addsf3>
    float angle_z = alpha * gyro_angle_z + (1.0f - alpha) * accel_angle_z;
  401650:	491d      	ldr	r1, [pc, #116]	; (4016c8 <imu_tick+0x268>)
  401652:	f006 fa55 	bl	407b00 <__aeabi_fmul>
  401656:	2100      	movs	r1, #0
  401658:	f006 f94a 	bl	4078f0 <__addsf3>


    last_time_read = t_now;
  40165c:	f8c9 5000 	str.w	r5, [r9]
    last_angle_x = angle_x;
  401660:	f8cb 6000 	str.w	r6, [fp]
    last_angle_y = angle_y;
  401664:	603c      	str	r4, [r7, #0]
    last_angle_z = angle_z;
  401666:	f8c8 0000 	str.w	r0, [r8]

    imu_complementary.x_axis = angle_x;
  40166a:	4b1a      	ldr	r3, [pc, #104]	; (4016d4 <imu_tick+0x274>)
  40166c:	601e      	str	r6, [r3, #0]
    imu_complementary.y_axis = angle_y;
  40166e:	605c      	str	r4, [r3, #4]
    imu_complementary.z_axis = angle_z;
  401670:	6098      	str	r0, [r3, #8]

    ap.imu.x_axis = angle_x;
  401672:	4b19      	ldr	r3, [pc, #100]	; (4016d8 <imu_tick+0x278>)
  401674:	601e      	str	r6, [r3, #0]
    ap.imu.y_axis = angle_y;
  401676:	605c      	str	r4, [r3, #4]
    ap.imu.z_axis = angle_z;
  401678:	6098      	str	r0, [r3, #8]
    ap.mag.x_axis = mag_x;
  40167a:	9a04      	ldr	r2, [sp, #16]
  40167c:	60da      	str	r2, [r3, #12]
    ap.mag.y_axis = mag_y;
  40167e:	9a05      	ldr	r2, [sp, #20]
  401680:	611a      	str	r2, [r3, #16]
    ap.mag.z_axis = mag_z;
  401682:	f8c3 a014 	str.w	sl, [r3, #20]


  401686:	b00d      	add	sp, #52	; 0x34
  401688:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        f_mag_timeout = cph_get_millis() + 100;
  40168c:	6833      	ldr	r3, [r6, #0]
  40168e:	3364      	adds	r3, #100	; 0x64
  401690:	4a0a      	ldr	r2, [pc, #40]	; (4016bc <imu_tick+0x25c>)
  401692:	6013      	str	r3, [r2, #0]
        mpu_read_normalized_mag();
  401694:	f7ff fce8 	bl	401068 <mpu_read_normalized_mag>
        mag_x = norm_mag.x_axis;
  401698:	4b10      	ldr	r3, [pc, #64]	; (4016dc <imu_tick+0x27c>)
  40169a:	681a      	ldr	r2, [r3, #0]
  40169c:	9204      	str	r2, [sp, #16]
        mag_y = norm_mag.y_axis;
  40169e:	685a      	ldr	r2, [r3, #4]
  4016a0:	9205      	str	r2, [sp, #20]
        mag_z = norm_mag.z_axis;
  4016a2:	f8d3 a008 	ldr.w	sl, [r3, #8]
  4016a6:	e71f      	b.n	4014e8 <imu_tick+0x88>
  4016a8:	54442d18 	.word	0x54442d18
  4016ac:	400921fb 	.word	0x400921fb
  4016b0:	20000208 	.word	0x20000208
  4016b4:	200006e4 	.word	0x200006e4
  4016b8:	40668000 	.word	0x40668000
  4016bc:	20000420 	.word	0x20000420
  4016c0:	200006a8 	.word	0x200006a8
  4016c4:	447a0000 	.word	0x447a0000
  4016c8:	3f75c28f 	.word	0x3f75c28f
  4016cc:	3d23d710 	.word	0x3d23d710
  4016d0:	20000428 	.word	0x20000428
  4016d4:	20000884 	.word	0x20000884
  4016d8:	20000854 	.word	0x20000854
  4016dc:	200006b4 	.word	0x200006b4
  4016e0:	20000430 	.word	0x20000430
  4016e4:	20000424 	.word	0x20000424
  4016e8:	2000042c 	.word	0x2000042c

004016ec <motor_config_pins>:
	motors[1].angle_max = AP_ANGLE_MAX;
	motors[1].timeout = 1000;
}

void motor_config_pins(motor_config_t motor_cfg)
{
  4016ec:	b084      	sub	sp, #16
  4016ee:	b508      	push	{r3, lr}
  4016f0:	f10d 0c08 	add.w	ip, sp, #8
  4016f4:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	pio_configure_pin(motor_cfg.ul_pin, motor_cfg.ul_flag);
  4016f8:	9904      	ldr	r1, [sp, #16]
  4016fa:	9803      	ldr	r0, [sp, #12]
  4016fc:	f000 fbb7 	bl	401e6e <pio_configure_pin>

	pmc_enable_periph_clk(motor_cfg.ul_periph_clkid);
  401700:	9805      	ldr	r0, [sp, #20]
  401702:	f000 fd63 	bl	4021cc <pmc_enable_periph_clk>

	pwm_channel_disable(motor_cfg.p_pwm, motor_cfg.ul_channel);
  401706:	9906      	ldr	r1, [sp, #24]
  401708:	9802      	ldr	r0, [sp, #8]
  40170a:	f000 fea4 	bl	402456 <pwm_channel_disable>
	pwm_init(motor_cfg.p_pwm, &motor_cfg.clock_setting);
  40170e:	a902      	add	r1, sp, #8
  401710:	f851 0b14 	ldr.w	r0, [r1], #20
  401714:	f000 fdfa 	bl	40230c <pwm_init>

	pwm_channel_init(motor_cfg.p_pwm, &motor_cfg.pwm_channel.channel);
  401718:	a902      	add	r1, sp, #8
  40171a:	f851 0b20 	ldr.w	r0, [r1], #32
  40171e:	f000 fe14 	bl	40234a <pwm_channel_init>
	pwm_channel_enable(motor_cfg.p_pwm, motor_cfg.ul_channel);
  401722:	9906      	ldr	r1, [sp, #24]
  401724:	9802      	ldr	r0, [sp, #8]
  401726:	f000 fe91 	bl	40244c <pwm_channel_enable>
}
  40172a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  40172e:	b004      	add	sp, #16
  401730:	4770      	bx	lr
	...

00401734 <motor_init>:
{
  401734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401738:	b0b3      	sub	sp, #204	; 0xcc
	printf("motor_init\r\n");
  40173a:	485b      	ldr	r0, [pc, #364]	; (4018a8 <motor_init+0x174>)
  40173c:	f001 fff4 	bl	403728 <iprintf>
	motor_config_t motor_cfg0 = {
  401740:	2238      	movs	r2, #56	; 0x38
  401742:	2100      	movs	r1, #0
  401744:	a824      	add	r0, sp, #144	; 0x90
  401746:	f001 fbab 	bl	402ea0 <memset>
	motor_config_t motor_cfg1 = {
  40174a:	2220      	movs	r2, #32
  40174c:	2100      	movs	r1, #0
  40174e:	a818      	add	r0, sp, #96	; 0x60
  401750:	f001 fba6 	bl	402ea0 <memset>
	motor_config_pins(motor_cfg0);
  401754:	4b55      	ldr	r3, [pc, #340]	; (4018ac <motor_init+0x178>)
  401756:	9320      	str	r3, [sp, #128]	; 0x80
  401758:	2417      	movs	r4, #23
  40175a:	9421      	str	r4, [sp, #132]	; 0x84
  40175c:	f04f 5780 	mov.w	r7, #268435456	; 0x10000000
  401760:	9722      	str	r7, [sp, #136]	; 0x88
  401762:	221f      	movs	r2, #31
  401764:	9223      	str	r2, [sp, #140]	; 0x8c
  401766:	4e52      	ldr	r6, [pc, #328]	; (4018b0 <motor_init+0x17c>)
  401768:	9625      	str	r6, [sp, #148]	; 0x94
  40176a:	9626      	str	r6, [sp, #152]	; 0x98
  40176c:	4a51      	ldr	r2, [pc, #324]	; (4018b4 <motor_init+0x180>)
  40176e:	9227      	str	r2, [sp, #156]	; 0x9c
  401770:	f04f 080b 	mov.w	r8, #11
  401774:	f8cd 80a4 	str.w	r8, [sp, #164]	; 0xa4
  401778:	2501      	movs	r5, #1
  40177a:	f88d 50aa 	strb.w	r5, [sp, #170]	; 0xaa
  40177e:	f240 4b7e 	movw	fp, #1150	; 0x47e
  401782:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
  401786:	f644 6a20 	movw	sl, #20000	; 0x4e20
  40178a:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
  40178e:	46ee      	mov	lr, sp
  401790:	f10d 0c90 	add.w	ip, sp, #144	; 0x90
  401794:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
  401798:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
  40179c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
  4017a0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
  4017a4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
  4017a8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
  4017ac:	e89c 0003 	ldmia.w	ip, {r0, r1}
  4017b0:	e88e 0003 	stmia.w	lr, {r0, r1}
  4017b4:	f10d 0980 	add.w	r9, sp, #128	; 0x80
  4017b8:	e899 000f 	ldmia.w	r9, {r0, r1, r2, r3}
  4017bc:	f7ff ff96 	bl	4016ec <motor_config_pins>
	motor_config_pins(motor_cfg1);
  4017c0:	4b3a      	ldr	r3, [pc, #232]	; (4018ac <motor_init+0x178>)
  4017c2:	930e      	str	r3, [sp, #56]	; 0x38
  4017c4:	2153      	movs	r1, #83	; 0x53
  4017c6:	910f      	str	r1, [sp, #60]	; 0x3c
  4017c8:	9710      	str	r7, [sp, #64]	; 0x40
  4017ca:	211f      	movs	r1, #31
  4017cc:	9111      	str	r1, [sp, #68]	; 0x44
  4017ce:	9512      	str	r5, [sp, #72]	; 0x48
  4017d0:	9613      	str	r6, [sp, #76]	; 0x4c
  4017d2:	9614      	str	r6, [sp, #80]	; 0x50
  4017d4:	4a37      	ldr	r2, [pc, #220]	; (4018b4 <motor_init+0x180>)
  4017d6:	9215      	str	r2, [sp, #84]	; 0x54
  4017d8:	9516      	str	r5, [sp, #88]	; 0x58
  4017da:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  4017de:	f88d 5062 	strb.w	r5, [sp, #98]	; 0x62
  4017e2:	f8cd b064 	str.w	fp, [sp, #100]	; 0x64
  4017e6:	f8cd a068 	str.w	sl, [sp, #104]	; 0x68
  4017ea:	46ec      	mov	ip, sp
  4017ec:	f10d 0e48 	add.w	lr, sp, #72	; 0x48
  4017f0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
  4017f4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
  4017f8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
  4017fc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
  401800:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
  401804:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
  401808:	e89e 0003 	ldmia.w	lr, {r0, r1}
  40180c:	e88c 0003 	stmia.w	ip, {r0, r1}
  401810:	a90e      	add	r1, sp, #56	; 0x38
  401812:	c90f      	ldmia	r1, {r0, r1, r2, r3}
  401814:	f7ff ff6a 	bl	4016ec <motor_config_pins>
	motors[0].config = motor_cfg0;
  401818:	4b24      	ldr	r3, [pc, #144]	; (4018ac <motor_init+0x178>)
  40181a:	9320      	str	r3, [sp, #128]	; 0x80
  40181c:	9421      	str	r4, [sp, #132]	; 0x84
  40181e:	9722      	str	r7, [sp, #136]	; 0x88
  401820:	211f      	movs	r1, #31
  401822:	9123      	str	r1, [sp, #140]	; 0x8c
  401824:	9625      	str	r6, [sp, #148]	; 0x94
  401826:	9626      	str	r6, [sp, #152]	; 0x98
  401828:	4a22      	ldr	r2, [pc, #136]	; (4018b4 <motor_init+0x180>)
  40182a:	9227      	str	r2, [sp, #156]	; 0x9c
  40182c:	f8cd 80a4 	str.w	r8, [sp, #164]	; 0xa4
  401830:	f88d 50aa 	strb.w	r5, [sp, #170]	; 0xaa
  401834:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
  401838:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
  40183c:	4c1e      	ldr	r4, [pc, #120]	; (4018b8 <motor_init+0x184>)
  40183e:	2248      	movs	r2, #72	; 0x48
  401840:	4649      	mov	r1, r9
  401842:	4620      	mov	r0, r4
  401844:	f001 fb1e 	bl	402e84 <memcpy>
	motors[0].angle_min = AP_ANGLE_MIN;
  401848:	f06f 0159 	mvn.w	r1, #89	; 0x59
  40184c:	64a1      	str	r1, [r4, #72]	; 0x48
	motors[0].angle_max = AP_ANGLE_MAX;
  40184e:	215a      	movs	r1, #90	; 0x5a
  401850:	64e1      	str	r1, [r4, #76]	; 0x4c
	motors[0].timeout = 1000;
  401852:	f44f 797a 	mov.w	r9, #1000	; 0x3e8
  401856:	f8c4 9050 	str.w	r9, [r4, #80]	; 0x50
	motors[1].config = motor_cfg1;
  40185a:	4b14      	ldr	r3, [pc, #80]	; (4018ac <motor_init+0x178>)
  40185c:	930e      	str	r3, [sp, #56]	; 0x38
  40185e:	2353      	movs	r3, #83	; 0x53
  401860:	930f      	str	r3, [sp, #60]	; 0x3c
  401862:	9710      	str	r7, [sp, #64]	; 0x40
  401864:	231f      	movs	r3, #31
  401866:	9311      	str	r3, [sp, #68]	; 0x44
  401868:	9512      	str	r5, [sp, #72]	; 0x48
  40186a:	9613      	str	r6, [sp, #76]	; 0x4c
  40186c:	9614      	str	r6, [sp, #80]	; 0x50
  40186e:	4a11      	ldr	r2, [pc, #68]	; (4018b4 <motor_init+0x180>)
  401870:	9215      	str	r2, [sp, #84]	; 0x54
  401872:	9516      	str	r5, [sp, #88]	; 0x58
  401874:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
  401878:	f88d 5062 	strb.w	r5, [sp, #98]	; 0x62
  40187c:	f8cd b064 	str.w	fp, [sp, #100]	; 0x64
  401880:	f8cd a068 	str.w	sl, [sp, #104]	; 0x68
  401884:	2248      	movs	r2, #72	; 0x48
  401886:	a90e      	add	r1, sp, #56	; 0x38
  401888:	f104 0054 	add.w	r0, r4, #84	; 0x54
  40188c:	f001 fafa 	bl	402e84 <memcpy>
	motors[1].angle_min = AP_ANGLE_MIN;
  401890:	f06f 0359 	mvn.w	r3, #89	; 0x59
  401894:	f8c4 309c 	str.w	r3, [r4, #156]	; 0x9c
	motors[1].angle_max = AP_ANGLE_MAX;
  401898:	235a      	movs	r3, #90	; 0x5a
  40189a:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
	motors[1].timeout = 1000;
  40189e:	f8c4 90a4 	str.w	r9, [r4, #164]	; 0xa4
}
  4018a2:	b033      	add	sp, #204	; 0xcc
  4018a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4018a8:	00408358 	.word	0x00408358
  4018ac:	40020000 	.word	0x40020000
  4018b0:	000f4240 	.word	0x000f4240
  4018b4:	07270e00 	.word	0x07270e00
  4018b8:	20000534 	.word	0x20000534

004018bc <motor_tick>:

void motor_tick(void)
{

}
  4018bc:	4770      	bx	lr
	...

004018c0 <motor_set_power>:

void motor_set_power(motor_t motor, uint32_t power)
{
  4018c0:	b084      	sub	sp, #16
  4018c2:	b508      	push	{r3, lr}
  4018c4:	f10d 0c08 	add.w	ip, sp, #8
  4018c8:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
  4018cc:	9917      	ldr	r1, [sp, #92]	; 0x5c
	motor.config.pwm_channel.ul_duty = power;
  4018ce:	910d      	str	r1, [sp, #52]	; 0x34
	// printf("motor_output: %d\r\n", motor.config.pwm_channel.ul_duty);
	if (config.log_motor) {
  4018d0:	4b08      	ldr	r3, [pc, #32]	; (4018f4 <motor_set_power+0x34>)
  4018d2:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
  4018d6:	b94b      	cbnz	r3, 4018ec <motor_set_power+0x2c>
		printf("motor_output: %d\r\n", motor.config.pwm_channel.ul_duty);
	}
	pwm_channel_update_duty(motor.config.p_pwm, &motor.config.pwm_channel, motor.config.pwm_channel.ul_duty);
  4018d8:	a902      	add	r1, sp, #8
  4018da:	f851 0b20 	ldr.w	r0, [r1], #32
  4018de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  4018e0:	f000 fda6 	bl	402430 <pwm_channel_update_duty>
}
  4018e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  4018e8:	b004      	add	sp, #16
  4018ea:	4770      	bx	lr
		printf("motor_output: %d\r\n", motor.config.pwm_channel.ul_duty);
  4018ec:	4802      	ldr	r0, [pc, #8]	; (4018f8 <motor_set_power+0x38>)
  4018ee:	f001 ff1b 	bl	403728 <iprintf>
  4018f2:	e7f1      	b.n	4018d8 <motor_set_power+0x18>
  4018f4:	200006f0 	.word	0x200006f0
  4018f8:	00408368 	.word	0x00408368

004018fc <motor_min>:

void motor_min(motor_t motor)
{
  4018fc:	b084      	sub	sp, #16
  4018fe:	b500      	push	{lr}
  401900:	b093      	sub	sp, #76	; 0x4c
  401902:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
  401906:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    motor_current_duty = MOTOR_PWM_MIN;
  40190a:	f240 437e 	movw	r3, #1150	; 0x47e
  40190e:	4a08      	ldr	r2, [pc, #32]	; (401930 <motor_min+0x34>)
  401910:	6013      	str	r3, [r2, #0]
    motor_set_power(motor, MOTOR_PWM_MIN);
  401912:	9311      	str	r3, [sp, #68]	; 0x44
  401914:	2244      	movs	r2, #68	; 0x44
  401916:	a918      	add	r1, sp, #96	; 0x60
  401918:	4668      	mov	r0, sp
  40191a:	f001 fab3 	bl	402e84 <memcpy>
  40191e:	ab14      	add	r3, sp, #80	; 0x50
  401920:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  401922:	f7ff ffcd 	bl	4018c0 <motor_set_power>
}
  401926:	b013      	add	sp, #76	; 0x4c
  401928:	f85d eb04 	ldr.w	lr, [sp], #4
  40192c:	b004      	add	sp, #16
  40192e:	4770      	bx	lr
  401930:	2000044c 	.word	0x2000044c

00401934 <motor_mid>:

void motor_mid(motor_t motor)
{
  401934:	b084      	sub	sp, #16
  401936:	b500      	push	{lr}
  401938:	b093      	sub	sp, #76	; 0x4c
  40193a:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
  40193e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    motor_current_duty = MOTOR_PWM_MID;
  401942:	f240 5346 	movw	r3, #1350	; 0x546
  401946:	4a08      	ldr	r2, [pc, #32]	; (401968 <motor_mid+0x34>)
  401948:	6013      	str	r3, [r2, #0]
	motor_set_power(motor, motor_current_duty);
  40194a:	9311      	str	r3, [sp, #68]	; 0x44
  40194c:	2244      	movs	r2, #68	; 0x44
  40194e:	a918      	add	r1, sp, #96	; 0x60
  401950:	4668      	mov	r0, sp
  401952:	f001 fa97 	bl	402e84 <memcpy>
  401956:	ab14      	add	r3, sp, #80	; 0x50
  401958:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  40195a:	f7ff ffb1 	bl	4018c0 <motor_set_power>
}
  40195e:	b013      	add	sp, #76	; 0x4c
  401960:	f85d eb04 	ldr.w	lr, [sp], #4
  401964:	b004      	add	sp, #16
  401966:	4770      	bx	lr
  401968:	2000044c 	.word	0x2000044c

0040196c <motor_max>:

void motor_max(motor_t motor)
{
  40196c:	b084      	sub	sp, #16
  40196e:	b500      	push	{lr}
  401970:	b093      	sub	sp, #76	; 0x4c
  401972:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
  401976:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
    motor_current_duty = MOTOR_PWM_MAX;
  40197a:	f44f 63fa 	mov.w	r3, #2000	; 0x7d0
  40197e:	4a08      	ldr	r2, [pc, #32]	; (4019a0 <motor_max+0x34>)
  401980:	6013      	str	r3, [r2, #0]
    motor_set_power(motor, motor_current_duty);
  401982:	9311      	str	r3, [sp, #68]	; 0x44
  401984:	2244      	movs	r2, #68	; 0x44
  401986:	a918      	add	r1, sp, #96	; 0x60
  401988:	4668      	mov	r0, sp
  40198a:	f001 fa7b 	bl	402e84 <memcpy>
  40198e:	ab14      	add	r3, sp, #80	; 0x50
  401990:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
  401992:	f7ff ff95 	bl	4018c0 <motor_set_power>
}
  401996:	b013      	add	sp, #76	; 0x4c
  401998:	f85d eb04 	ldr.w	lr, [sp], #4
  40199c:	b004      	add	sp, #16
  40199e:	4770      	bx	lr
  4019a0:	2000044c 	.word	0x2000044c

004019a4 <pid_init>:
float desired_angle = 0.0f;


void pid_init(void)
{
    time = 0;
  4019a4:	2300      	movs	r3, #0
  4019a6:	4a0b      	ldr	r2, [pc, #44]	; (4019d4 <pid_init+0x30>)
  4019a8:	6013      	str	r3, [r2, #0]
    previous_time = 0;
  4019aa:	4a0b      	ldr	r2, [pc, #44]	; (4019d8 <pid_init+0x34>)
  4019ac:	6013      	str	r3, [r2, #0]
    elapsed_time = 0;
  4019ae:	4a0b      	ldr	r2, [pc, #44]	; (4019dc <pid_init+0x38>)
  4019b0:	6013      	str	r3, [r2, #0]
    pid = 0.0f;
  4019b2:	2300      	movs	r3, #0
  4019b4:	4a0a      	ldr	r2, [pc, #40]	; (4019e0 <pid_init+0x3c>)
  4019b6:	6013      	str	r3, [r2, #0]
    error = 0.0f;
  4019b8:	4a0a      	ldr	r2, [pc, #40]	; (4019e4 <pid_init+0x40>)
  4019ba:	6013      	str	r3, [r2, #0]
    previous_error = 0.0f;
  4019bc:	4a0a      	ldr	r2, [pc, #40]	; (4019e8 <pid_init+0x44>)
  4019be:	6013      	str	r3, [r2, #0]
    pid_p = 0.0f;
  4019c0:	4a0a      	ldr	r2, [pc, #40]	; (4019ec <pid_init+0x48>)
  4019c2:	6013      	str	r3, [r2, #0]
    pid_i = 0.0f;
  4019c4:	4a0a      	ldr	r2, [pc, #40]	; (4019f0 <pid_init+0x4c>)
  4019c6:	6013      	str	r3, [r2, #0]
    pid_d = 0.0f;
  4019c8:	4a0a      	ldr	r2, [pc, #40]	; (4019f4 <pid_init+0x50>)
  4019ca:	6013      	str	r3, [r2, #0]
    integral = 0.0f;
  4019cc:	4a0a      	ldr	r2, [pc, #40]	; (4019f8 <pid_init+0x54>)
  4019ce:	6013      	str	r3, [r2, #0]
}
  4019d0:	4770      	bx	lr
  4019d2:	bf00      	nop
  4019d4:	20000474 	.word	0x20000474
  4019d8:	20000470 	.word	0x20000470
  4019dc:	20000450 	.word	0x20000450
  4019e0:	2000045c 	.word	0x2000045c
  4019e4:	20000454 	.word	0x20000454
  4019e8:	2000046c 	.word	0x2000046c
  4019ec:	20000468 	.word	0x20000468
  4019f0:	20000464 	.word	0x20000464
  4019f4:	20000460 	.word	0x20000460
  4019f8:	20000458 	.word	0x20000458

004019fc <ap_init>:
ap_manager_t AP;


void ap_init(void)
{
    AP.state = AP_INITIALIZING;
  4019fc:	4b03      	ldr	r3, [pc, #12]	; (401a0c <ap_init+0x10>)
  4019fe:	2200      	movs	r2, #0
  401a00:	701a      	strb	r2, [r3, #0]
    AP.desired_angle_x = 0.0f;
  401a02:	2100      	movs	r1, #0
  401a04:	6059      	str	r1, [r3, #4]
    AP.desired_angle_y = 0.0f;
  401a06:	6099      	str	r1, [r3, #8]
    AP.motor_power = 0;
  401a08:	60da      	str	r2, [r3, #12]
  401a0a:	4770      	bx	lr
  401a0c:	20000890 	.word	0x20000890

00401a10 <board_init>:
 * \addtogroup sam4s_xplained_pro_group
 * @{
 */

void board_init(void)
{
  401a10:	b570      	push	{r4, r5, r6, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	wdt_disable(WDT);
  401a12:	482c      	ldr	r0, [pc, #176]	; (401ac4 <board_init+0xb4>)
  401a14:	f000 fc04 	bl	402220 <wdt_disable>
  401a18:	200b      	movs	r0, #11
  401a1a:	f000 fbd7 	bl	4021cc <pmc_enable_periph_clk>
  401a1e:	200c      	movs	r0, #12
  401a20:	f000 fbd4 	bl	4021cc <pmc_enable_periph_clk>
  401a24:	200d      	movs	r0, #13
  401a26:	f000 fbd1 	bl	4021cc <pmc_enable_periph_clk>
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401a2a:	4b27      	ldr	r3, [pc, #156]	; (401ac8 <board_init+0xb8>)
  401a2c:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
  401a30:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401a32:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401a34:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  401a38:	4c24      	ldr	r4, [pc, #144]	; (401acc <board_init+0xbc>)
  401a3a:	2504      	movs	r5, #4
  401a3c:	6165      	str	r5, [r4, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401a3e:	f8c4 50a0 	str.w	r5, [r4, #160]	; 0xa0
		base->PIO_PUER = mask;
  401a42:	6665      	str	r5, [r4, #100]	; 0x64
		base->PIO_PPDDR = mask;
  401a44:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  401a48:	6565      	str	r5, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  401a4a:	6265      	str	r5, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401a4c:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401a50:	6f22      	ldr	r2, [r4, #112]	; 0x70
  401a52:	f022 0204 	bic.w	r2, r2, #4
  401a56:	6722      	str	r2, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401a58:	6f62      	ldr	r2, [r4, #116]	; 0x74
  401a5a:	f022 0204 	bic.w	r2, r2, #4
  401a5e:	6762      	str	r2, [r4, #116]	; 0x74
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401a60:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
  401a64:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401a66:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401a68:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401a6c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  401a70:	6322      	str	r2, [r4, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401a72:	6122      	str	r2, [r4, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401a74:	f8c4 20a0 	str.w	r2, [r4, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  401a78:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  401a7c:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  401a7e:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  401a80:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
	ioport_set_pin_level(IO1_LED3_PIN, !IO1_LED3_ACTIVE);
	ioport_set_pin_dir(IO1_LED3_PIN, IOPORT_DIR_OUTPUT);

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART1_PIO, PINS_UART1, PINS_UART1_FLAGS);
  401a84:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
  401a88:	210c      	movs	r1, #12
  401a8a:	4811      	ldr	r0, [pc, #68]	; (401ad0 <board_init+0xc0>)
  401a8c:	f000 fa7a 	bl	401f84 <pio_configure_pin_group>
#endif


#ifdef CONF_BOARD_TWI0
	gpio_configure_pin(TWI0_DATA_GPIO, TWI0_DATA_FLAGS);
  401a90:	4e10      	ldr	r6, [pc, #64]	; (401ad4 <board_init+0xc4>)
  401a92:	4631      	mov	r1, r6
  401a94:	2003      	movs	r0, #3
  401a96:	f000 f9ea 	bl	401e6e <pio_configure_pin>
	gpio_configure_pin(TWI0_CLK_GPIO, TWI0_CLK_FLAGS);
  401a9a:	4631      	mov	r1, r6
  401a9c:	4628      	mov	r0, r5
  401a9e:	f000 f9e6 	bl	401e6e <pio_configure_pin>
		base->PIO_PUER = mask;
  401aa2:	6665      	str	r5, [r4, #100]	; 0x64
		base->PIO_PPDDR = mask;
  401aa4:	f8c4 5090 	str.w	r5, [r4, #144]	; 0x90
		base->PIO_MDDR = mask;
  401aa8:	6565      	str	r5, [r4, #84]	; 0x54
		base->PIO_IFDR = mask;
  401aaa:	6265      	str	r5, [r4, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  401aac:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  401ab0:	6f23      	ldr	r3, [r4, #112]	; 0x70
  401ab2:	f023 0304 	bic.w	r3, r3, #4
  401ab6:	6723      	str	r3, [r4, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  401ab8:	6f63      	ldr	r3, [r4, #116]	; 0x74
  401aba:	f023 0304 	bic.w	r3, r3, #4
  401abe:	6763      	str	r3, [r4, #116]	; 0x74

#endif



}
  401ac0:	bd70      	pop	{r4, r5, r6, pc}
  401ac2:	bf00      	nop
  401ac4:	400e1450 	.word	0x400e1450
  401ac8:	400e1200 	.word	0x400e1200
  401acc:	400e0e00 	.word	0x400e0e00
  401ad0:	400e1000 	.word	0x400e1000
  401ad4:	08000001 	.word	0x08000001

00401ad8 <twi_set_speed>:
{
	uint32_t ckdiv = 0;
	uint32_t c_lh_div;
	uint32_t cldiv, chdiv;

	if (ul_speed > I2C_FAST_MODE_SPEED) {
  401ad8:	4b2f      	ldr	r3, [pc, #188]	; (401b98 <twi_set_speed+0xc0>)
  401ada:	4299      	cmp	r1, r3
  401adc:	d851      	bhi.n	401b82 <twi_set_speed+0xaa>
		return FAIL;
	}

	/* Low level time not less than 1.3us of I2C Fast Mode. */
	if (ul_speed > LOW_LEVEL_TIME_LIMIT) {
  401ade:	f5a3 537a 	sub.w	r3, r3, #16000	; 0x3e80
  401ae2:	4299      	cmp	r1, r3
  401ae4:	d930      	bls.n	401b48 <twi_set_speed+0x70>
{
  401ae6:	b430      	push	{r4, r5}
		/* Low level of time fixed for 1.3us. */
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401ae8:	4c2c      	ldr	r4, [pc, #176]	; (401b9c <twi_set_speed+0xc4>)
  401aea:	fba4 3402 	umull	r3, r4, r4, r2
  401aee:	0ba4      	lsrs	r4, r4, #14
  401af0:	3c04      	subs	r4, #4
		chdiv = ul_mck / ((ul_speed + (ul_speed - LOW_LEVEL_TIME_LIMIT)) * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401af2:	4b2b      	ldr	r3, [pc, #172]	; (401ba0 <twi_set_speed+0xc8>)
  401af4:	440b      	add	r3, r1
  401af6:	009b      	lsls	r3, r3, #2
  401af8:	fbb2 f2f3 	udiv	r2, r2, r3
  401afc:	3a04      	subs	r2, #4
		
		/* cldiv must fit in 8 bits, ckdiv must fit in 3 bits */
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401afe:	2cff      	cmp	r4, #255	; 0xff
  401b00:	d941      	bls.n	401b86 <twi_set_speed+0xae>
	uint32_t ckdiv = 0;
  401b02:	2100      	movs	r1, #0
			/* Increase clock divider */
			ckdiv++;
  401b04:	3101      	adds	r1, #1
			/* Divide cldiv value */
			cldiv /= TWI_CLK_DIVIDER;
  401b06:	0865      	lsrs	r5, r4, #1
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b08:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  401b0c:	d30e      	bcc.n	401b2c <twi_set_speed+0x54>
			cldiv /= TWI_CLK_DIVIDER;
  401b0e:	462c      	mov	r4, r5
		while ((cldiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b10:	2907      	cmp	r1, #7
  401b12:	d1f7      	bne.n	401b04 <twi_set_speed+0x2c>
			chdiv /= TWI_CLK_DIVIDER;
		}

		/* set clock waveform generator register */
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  401b14:	0213      	lsls	r3, r2, #8
  401b16:	b29b      	uxth	r3, r3
				TWI_CWGR_CKDIV(ckdiv);		
  401b18:	0409      	lsls	r1, r1, #16
  401b1a:	f401 21e0 	and.w	r1, r1, #458752	; 0x70000
				TWI_CWGR_CLDIV(cldiv) | TWI_CWGR_CHDIV(chdiv) |
  401b1e:	430b      	orrs	r3, r1
  401b20:	b2ed      	uxtb	r5, r5
  401b22:	432b      	orrs	r3, r5
		p_twi->TWI_CWGR =
  401b24:	6103      	str	r3, [r0, #16]
		p_twi->TWI_CWGR =
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
				TWI_CWGR_CKDIV(ckdiv);
	}

	return PASS;
  401b26:	2000      	movs	r0, #0
}
  401b28:	bc30      	pop	{r4, r5}
  401b2a:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b2c:	2aff      	cmp	r2, #255	; 0xff
  401b2e:	d9f1      	bls.n	401b14 <twi_set_speed+0x3c>
  401b30:	2906      	cmp	r1, #6
  401b32:	d8ef      	bhi.n	401b14 <twi_set_speed+0x3c>
	uint32_t ckdiv = 0;
  401b34:	4614      	mov	r4, r2
			ckdiv++;
  401b36:	3101      	adds	r1, #1
			chdiv /= TWI_CLK_DIVIDER;
  401b38:	0862      	lsrs	r2, r4, #1
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b3a:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
  401b3e:	d3e9      	bcc.n	401b14 <twi_set_speed+0x3c>
			chdiv /= TWI_CLK_DIVIDER;
  401b40:	4614      	mov	r4, r2
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b42:	2906      	cmp	r1, #6
  401b44:	d9f7      	bls.n	401b36 <twi_set_speed+0x5e>
  401b46:	e7e5      	b.n	401b14 <twi_set_speed+0x3c>
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401b48:	0049      	lsls	r1, r1, #1
  401b4a:	fbb2 f2f1 	udiv	r2, r2, r1
  401b4e:	3a04      	subs	r2, #4
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b50:	2aff      	cmp	r2, #255	; 0xff
  401b52:	d913      	bls.n	401b7c <twi_set_speed+0xa4>
	uint32_t ckdiv = 0;
  401b54:	2300      	movs	r3, #0
			ckdiv++;
  401b56:	3301      	adds	r3, #1
			c_lh_div /= TWI_CLK_DIVIDER;
  401b58:	0851      	lsrs	r1, r2, #1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b5a:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
  401b5e:	d302      	bcc.n	401b66 <twi_set_speed+0x8e>
			c_lh_div /= TWI_CLK_DIVIDER;
  401b60:	460a      	mov	r2, r1
		while ((c_lh_div > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b62:	2b07      	cmp	r3, #7
  401b64:	d1f7      	bne.n	401b56 <twi_set_speed+0x7e>
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  401b66:	020a      	lsls	r2, r1, #8
  401b68:	b292      	uxth	r2, r2
				TWI_CWGR_CKDIV(ckdiv);
  401b6a:	041b      	lsls	r3, r3, #16
  401b6c:	f403 23e0 	and.w	r3, r3, #458752	; 0x70000
				TWI_CWGR_CLDIV(c_lh_div) | TWI_CWGR_CHDIV(c_lh_div) |
  401b70:	4313      	orrs	r3, r2
  401b72:	b2c9      	uxtb	r1, r1
  401b74:	4319      	orrs	r1, r3
		p_twi->TWI_CWGR =
  401b76:	6101      	str	r1, [r0, #16]
	return PASS;
  401b78:	2000      	movs	r0, #0
  401b7a:	4770      	bx	lr
		c_lh_div = ul_mck / (ul_speed * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401b7c:	4611      	mov	r1, r2
	uint32_t ckdiv = 0;
  401b7e:	2300      	movs	r3, #0
  401b80:	e7f1      	b.n	401b66 <twi_set_speed+0x8e>
		return FAIL;
  401b82:	2001      	movs	r0, #1
}
  401b84:	4770      	bx	lr
		while ((chdiv > TWI_CLK_DIV_MAX) && (ckdiv < TWI_CLK_DIV_MIN)) {
  401b86:	2aff      	cmp	r2, #255	; 0xff
  401b88:	d902      	bls.n	401b90 <twi_set_speed+0xb8>
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401b8a:	4625      	mov	r5, r4
	uint32_t ckdiv = 0;
  401b8c:	2100      	movs	r1, #0
  401b8e:	e7d1      	b.n	401b34 <twi_set_speed+0x5c>
		cldiv = ul_mck / (LOW_LEVEL_TIME_LIMIT * TWI_CLK_DIVIDER) - TWI_CLK_CALC_ARGU;
  401b90:	4625      	mov	r5, r4
	uint32_t ckdiv = 0;
  401b92:	2100      	movs	r1, #0
  401b94:	e7be      	b.n	401b14 <twi_set_speed+0x3c>
  401b96:	bf00      	nop
  401b98:	00061a80 	.word	0x00061a80
  401b9c:	057619f1 	.word	0x057619f1
  401ba0:	3ffd1200 	.word	0x3ffd1200

00401ba4 <twi_master_init>:
{
  401ba4:	b538      	push	{r3, r4, r5, lr}
  401ba6:	4604      	mov	r4, r0
  401ba8:	460d      	mov	r5, r1
	p_twi->TWI_IDR = ~0UL;
  401baa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
  401bae:	6283      	str	r3, [r0, #40]	; 0x28
	p_twi->TWI_SR;
  401bb0:	6a03      	ldr	r3, [r0, #32]
 * \param p_twi Pointer to a TWI instance.
 */
void twi_reset(Twi *p_twi)
{
	/* Set SWRST bit to reset TWI peripheral */
	p_twi->TWI_CR = TWI_CR_SWRST;
  401bb2:	2380      	movs	r3, #128	; 0x80
  401bb4:	6003      	str	r3, [r0, #0]
	p_twi->TWI_RHR;
  401bb6:	6b03      	ldr	r3, [r0, #48]	; 0x30
	p_twi->TWI_CR = TWI_CR_MSDIS;
  401bb8:	2308      	movs	r3, #8
  401bba:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_SVDIS;
  401bbc:	2320      	movs	r3, #32
  401bbe:	6003      	str	r3, [r0, #0]
	p_twi->TWI_CR = TWI_CR_MSEN;
  401bc0:	2304      	movs	r3, #4
  401bc2:	6003      	str	r3, [r0, #0]
	if (twi_set_speed(p_twi, p_opt->speed, p_opt->master_clk) == FAIL) {
  401bc4:	680a      	ldr	r2, [r1, #0]
  401bc6:	6849      	ldr	r1, [r1, #4]
  401bc8:	f7ff ff86 	bl	401ad8 <twi_set_speed>
  401bcc:	2801      	cmp	r0, #1
  401bce:	bf14      	ite	ne
  401bd0:	2000      	movne	r0, #0
  401bd2:	2001      	moveq	r0, #1
	if (p_opt->smbus == 1) {
  401bd4:	7a6b      	ldrb	r3, [r5, #9]
  401bd6:	2b01      	cmp	r3, #1
		p_twi->TWI_CR = TWI_CR_QUICK;
  401bd8:	bf04      	itt	eq
  401bda:	2340      	moveq	r3, #64	; 0x40
  401bdc:	6023      	streq	r3, [r4, #0]
}
  401bde:	bd38      	pop	{r3, r4, r5, pc}

00401be0 <twi_mk_addr>:
	if (len == 0)
  401be0:	460a      	mov	r2, r1
  401be2:	b159      	cbz	r1, 401bfc <twi_mk_addr+0x1c>
	val = addr[0];
  401be4:	7803      	ldrb	r3, [r0, #0]
	if (len > 1) {
  401be6:	2901      	cmp	r1, #1
		val |= addr[1];
  401be8:	bfc4      	itt	gt
  401bea:	7841      	ldrbgt	r1, [r0, #1]
  401bec:	ea41 2303 	orrgt.w	r3, r1, r3, lsl #8
	if (len > 2) {
  401bf0:	2a02      	cmp	r2, #2
  401bf2:	dd04      	ble.n	401bfe <twi_mk_addr+0x1e>
		val |= addr[2];
  401bf4:	7882      	ldrb	r2, [r0, #2]
  401bf6:	ea42 2303 	orr.w	r3, r2, r3, lsl #8
  401bfa:	e000      	b.n	401bfe <twi_mk_addr+0x1e>
		return 0;
  401bfc:	2300      	movs	r3, #0
}
  401bfe:	4618      	mov	r0, r3
  401c00:	4770      	bx	lr

00401c02 <twi_master_read>:
{
  401c02:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint32_t cnt = p_packet->length;
  401c04:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  401c06:	2d00      	cmp	r5, #0
  401c08:	d051      	beq.n	401cae <twi_master_read+0xac>
  401c0a:	460b      	mov	r3, r1
  401c0c:	4606      	mov	r6, r0
	uint8_t *buffer = p_packet->buffer;
  401c0e:	688c      	ldr	r4, [r1, #8]
	p_twi->TWI_MMR = 0;
  401c10:	2000      	movs	r0, #0
  401c12:	6070      	str	r0, [r6, #4]
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  401c14:	7c0a      	ldrb	r2, [r1, #16]
  401c16:	0412      	lsls	r2, r2, #16
  401c18:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  401c1c:	6849      	ldr	r1, [r1, #4]
  401c1e:	0209      	lsls	r1, r1, #8
  401c20:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_MREAD | TWI_MMR_DADR(p_packet->chip) |
  401c24:	430a      	orrs	r2, r1
  401c26:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
  401c2a:	6072      	str	r2, [r6, #4]
	p_twi->TWI_IADR = 0;
  401c2c:	60f0      	str	r0, [r6, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  401c2e:	6859      	ldr	r1, [r3, #4]
  401c30:	4618      	mov	r0, r3
  401c32:	f7ff ffd5 	bl	401be0 <twi_mk_addr>
  401c36:	60f0      	str	r0, [r6, #12]
	if (cnt == 1) {
  401c38:	2d01      	cmp	r5, #1
  401c3a:	d00f      	beq.n	401c5c <twi_master_read+0x5a>
		p_twi->TWI_CR = TWI_CR_START;
  401c3c:	2301      	movs	r3, #1
  401c3e:	6033      	str	r3, [r6, #0]
		stop_sent = 0;
  401c40:	2000      	movs	r0, #0
		status = p_twi->TWI_SR;
  401c42:	6a33      	ldr	r3, [r6, #32]
		if (status & TWI_SR_NACK) {
  401c44:	f413 7f80 	tst.w	r3, #256	; 0x100
  401c48:	d134      	bne.n	401cb4 <twi_master_read+0xb2>
		if (!timeout--) {
  401c4a:	f247 512f 	movw	r1, #29999	; 0x752f
		timeout = TWI_TIMEOUT;
  401c4e:	f247 5730 	movw	r7, #30000	; 0x7530
		if (!(status & TWI_SR_RXRDY)) {
  401c52:	f04f 0c01 	mov.w	ip, #1
			p_twi->TWI_CR = TWI_CR_STOP;
  401c56:	f04f 0e02 	mov.w	lr, #2
  401c5a:	e01b      	b.n	401c94 <twi_master_read+0x92>
		p_twi->TWI_CR = TWI_CR_START | TWI_CR_STOP;
  401c5c:	2303      	movs	r3, #3
  401c5e:	6033      	str	r3, [r6, #0]
		stop_sent = 1;
  401c60:	2001      	movs	r0, #1
  401c62:	e7ee      	b.n	401c42 <twi_master_read+0x40>
		if (!(status & TWI_SR_RXRDY)) {
  401c64:	460a      	mov	r2, r1
  401c66:	4660      	mov	r0, ip
  401c68:	e00e      	b.n	401c88 <twi_master_read+0x86>
		if (cnt == 1  && !stop_sent) {
  401c6a:	b908      	cbnz	r0, 401c70 <twi_master_read+0x6e>
			p_twi->TWI_CR = TWI_CR_STOP;
  401c6c:	f8c6 e000 	str.w	lr, [r6]
		if (!(status & TWI_SR_RXRDY)) {
  401c70:	f013 0f02 	tst.w	r3, #2
  401c74:	d0f6      	beq.n	401c64 <twi_master_read+0x62>
  401c76:	4660      	mov	r0, ip
		*buffer++ = p_twi->TWI_RHR;
  401c78:	6b32      	ldr	r2, [r6, #48]	; 0x30
  401c7a:	4623      	mov	r3, r4
  401c7c:	f803 2b01 	strb.w	r2, [r3], #1
		cnt--;
  401c80:	3d01      	subs	r5, #1
		*buffer++ = p_twi->TWI_RHR;
  401c82:	461c      	mov	r4, r3
		timeout = TWI_TIMEOUT;
  401c84:	463a      	mov	r2, r7
	while (cnt > 0) {
  401c86:	b165      	cbz	r5, 401ca2 <twi_master_read+0xa0>
		status = p_twi->TWI_SR;
  401c88:	6a33      	ldr	r3, [r6, #32]
		if (status & TWI_SR_NACK) {
  401c8a:	f413 7f80 	tst.w	r3, #256	; 0x100
  401c8e:	d113      	bne.n	401cb8 <twi_master_read+0xb6>
		if (!timeout--) {
  401c90:	1e51      	subs	r1, r2, #1
  401c92:	b19a      	cbz	r2, 401cbc <twi_master_read+0xba>
		if (cnt == 1  && !stop_sent) {
  401c94:	2d01      	cmp	r5, #1
  401c96:	d0e8      	beq.n	401c6a <twi_master_read+0x68>
		if (!(status & TWI_SR_RXRDY)) {
  401c98:	f013 0f02 	tst.w	r3, #2
  401c9c:	d1ec      	bne.n	401c78 <twi_master_read+0x76>
  401c9e:	460a      	mov	r2, r1
  401ca0:	e7f1      	b.n	401c86 <twi_master_read+0x84>
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  401ca2:	6a33      	ldr	r3, [r6, #32]
  401ca4:	f013 0f01 	tst.w	r3, #1
  401ca8:	d0fb      	beq.n	401ca2 <twi_master_read+0xa0>
	p_twi->TWI_SR;
  401caa:	6a33      	ldr	r3, [r6, #32]
	return TWI_SUCCESS;
  401cac:	e000      	b.n	401cb0 <twi_master_read+0xae>
		return TWI_INVALID_ARGUMENT;
  401cae:	2501      	movs	r5, #1
}
  401cb0:	4628      	mov	r0, r5
  401cb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			return TWI_RECEIVE_NACK;
  401cb4:	2505      	movs	r5, #5
  401cb6:	e7fb      	b.n	401cb0 <twi_master_read+0xae>
  401cb8:	2505      	movs	r5, #5
  401cba:	e7f9      	b.n	401cb0 <twi_master_read+0xae>
			return TWI_ERROR_TIMEOUT;
  401cbc:	2509      	movs	r5, #9
  401cbe:	e7f7      	b.n	401cb0 <twi_master_read+0xae>

00401cc0 <twi_master_write>:
{
  401cc0:	b570      	push	{r4, r5, r6, lr}
	uint32_t cnt = p_packet->length;
  401cc2:	68cd      	ldr	r5, [r1, #12]
	if (cnt == 0) {
  401cc4:	2d00      	cmp	r5, #0
  401cc6:	d03c      	beq.n	401d42 <twi_master_write+0x82>
  401cc8:	460b      	mov	r3, r1
  401cca:	4604      	mov	r4, r0
	uint8_t *buffer = p_packet->buffer;
  401ccc:	688e      	ldr	r6, [r1, #8]
	p_twi->TWI_MMR = 0;
  401cce:	2000      	movs	r0, #0
  401cd0:	6060      	str	r0, [r4, #4]
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  401cd2:	7c0a      	ldrb	r2, [r1, #16]
  401cd4:	0412      	lsls	r2, r2, #16
  401cd6:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
			((p_packet->addr_length << TWI_MMR_IADRSZ_Pos) &
  401cda:	6849      	ldr	r1, [r1, #4]
  401cdc:	0209      	lsls	r1, r1, #8
  401cde:	f401 7140 	and.w	r1, r1, #768	; 0x300
	p_twi->TWI_MMR = TWI_MMR_DADR(p_packet->chip) |
  401ce2:	430a      	orrs	r2, r1
  401ce4:	6062      	str	r2, [r4, #4]
	p_twi->TWI_IADR = 0;
  401ce6:	60e0      	str	r0, [r4, #12]
	p_twi->TWI_IADR = twi_mk_addr(p_packet->addr, p_packet->addr_length);
  401ce8:	6859      	ldr	r1, [r3, #4]
  401cea:	4618      	mov	r0, r3
  401cec:	f7ff ff78 	bl	401be0 <twi_mk_addr>
  401cf0:	60e0      	str	r0, [r4, #12]
	while (cnt > 0) {
  401cf2:	1971      	adds	r1, r6, r5
	uint8_t *buffer = p_packet->buffer;
  401cf4:	4633      	mov	r3, r6
	while (cnt > 0) {
  401cf6:	460d      	mov	r5, r1
  401cf8:	e004      	b.n	401d04 <twi_master_write+0x44>
		p_twi->TWI_THR = *buffer++;
  401cfa:	f813 2b01 	ldrb.w	r2, [r3], #1
  401cfe:	6362      	str	r2, [r4, #52]	; 0x34
	while (cnt > 0) {
  401d00:	4299      	cmp	r1, r3
  401d02:	d00f      	beq.n	401d24 <twi_master_write+0x64>
		status = p_twi->TWI_SR;
  401d04:	6a22      	ldr	r2, [r4, #32]
		if (status & TWI_SR_NACK) {
  401d06:	f412 7f80 	tst.w	r2, #256	; 0x100
  401d0a:	d11e      	bne.n	401d4a <twi_master_write+0x8a>
		if (!(status & TWI_SR_TXRDY)) {
  401d0c:	f012 0f04 	tst.w	r2, #4
  401d10:	d1f3      	bne.n	401cfa <twi_master_write+0x3a>
		status = p_twi->TWI_SR;
  401d12:	6a22      	ldr	r2, [r4, #32]
		if (status & TWI_SR_NACK) {
  401d14:	f412 7f80 	tst.w	r2, #256	; 0x100
  401d18:	d115      	bne.n	401d46 <twi_master_write+0x86>
		if (!(status & TWI_SR_TXRDY)) {
  401d1a:	f012 0f04 	tst.w	r2, #4
  401d1e:	d1ec      	bne.n	401cfa <twi_master_write+0x3a>
	while (cnt > 0) {
  401d20:	42ab      	cmp	r3, r5
  401d22:	d1f6      	bne.n	401d12 <twi_master_write+0x52>
		status = p_twi->TWI_SR;
  401d24:	6a23      	ldr	r3, [r4, #32]
		if (status & TWI_SR_NACK) {
  401d26:	f413 7f80 	tst.w	r3, #256	; 0x100
  401d2a:	d110      	bne.n	401d4e <twi_master_write+0x8e>
		if (status & TWI_SR_TXRDY) {
  401d2c:	f013 0f04 	tst.w	r3, #4
  401d30:	d0f8      	beq.n	401d24 <twi_master_write+0x64>
	p_twi->TWI_CR = TWI_CR_STOP;
  401d32:	2302      	movs	r3, #2
  401d34:	6023      	str	r3, [r4, #0]
	while (!(p_twi->TWI_SR & TWI_SR_TXCOMP)) {
  401d36:	6a23      	ldr	r3, [r4, #32]
  401d38:	f013 0f01 	tst.w	r3, #1
  401d3c:	d0fb      	beq.n	401d36 <twi_master_write+0x76>
	return TWI_SUCCESS;
  401d3e:	2000      	movs	r0, #0
  401d40:	e000      	b.n	401d44 <twi_master_write+0x84>
		return TWI_INVALID_ARGUMENT;
  401d42:	2001      	movs	r0, #1
}
  401d44:	bd70      	pop	{r4, r5, r6, pc}
			return TWI_RECEIVE_NACK;
  401d46:	2005      	movs	r0, #5
  401d48:	e7fc      	b.n	401d44 <twi_master_write+0x84>
  401d4a:	2005      	movs	r0, #5
  401d4c:	e7fa      	b.n	401d44 <twi_master_write+0x84>
			return TWI_RECEIVE_NACK;
  401d4e:	2005      	movs	r0, #5
  401d50:	e7f8      	b.n	401d44 <twi_master_write+0x84>

00401d52 <twi_probe>:
{
  401d52:	b500      	push	{lr}
  401d54:	b087      	sub	sp, #28
	uint8_t data = 0;
  401d56:	2300      	movs	r3, #0
  401d58:	f88d 3003 	strb.w	r3, [sp, #3]
	packet.buffer = &data;
  401d5c:	f10d 0203 	add.w	r2, sp, #3
  401d60:	9203      	str	r2, [sp, #12]
	packet.length = 1;
  401d62:	2201      	movs	r2, #1
  401d64:	9204      	str	r2, [sp, #16]
	packet.chip = (uint32_t) uc_slave_addr;
  401d66:	f88d 1014 	strb.w	r1, [sp, #20]
	packet.addr[0] = 0;
  401d6a:	f88d 3004 	strb.w	r3, [sp, #4]
	packet.addr_length = 0;
  401d6e:	9302      	str	r3, [sp, #8]
	return (twi_master_write(p_twi, &packet));
  401d70:	a901      	add	r1, sp, #4
  401d72:	f7ff ffa5 	bl	401cc0 <twi_master_write>
}
  401d76:	b007      	add	sp, #28
  401d78:	f85d fb04 	ldr.w	pc, [sp], #4

00401d7c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  401d7c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  401d7e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  401d82:	d029      	beq.n	401dd8 <pio_set_peripheral+0x5c>
  401d84:	d813      	bhi.n	401dae <pio_set_peripheral+0x32>
  401d86:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  401d8a:	d02f      	beq.n	401dec <pio_set_peripheral+0x70>
  401d8c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  401d90:	d109      	bne.n	401da6 <pio_set_peripheral+0x2a>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  401d92:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  401d94:	4313      	orrs	r3, r2
  401d96:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  401d98:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  401d9a:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401d9c:	400b      	ands	r3, r1
  401d9e:	ea23 0302 	bic.w	r3, r3, r2
  401da2:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  401da4:	e000      	b.n	401da8 <pio_set_peripheral+0x2c>
	switch (ul_type) {
  401da6:	b109      	cbz	r1, 401dac <pio_set_peripheral+0x30>
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  401da8:	6042      	str	r2, [r0, #4]
  401daa:	4770      	bx	lr
  401dac:	4770      	bx	lr
	switch (ul_type) {
  401dae:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  401db2:	d02b      	beq.n	401e0c <pio_set_peripheral+0x90>
  401db4:	d809      	bhi.n	401dca <pio_set_peripheral+0x4e>
  401db6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  401dba:	d1f5      	bne.n	401da8 <pio_set_peripheral+0x2c>
		ul_sr = p_pio->PIO_ABCDSR[0];
  401dbc:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  401dbe:	4313      	orrs	r3, r2
  401dc0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401dc2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  401dc4:	4313      	orrs	r3, r2
  401dc6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  401dc8:	e7ee      	b.n	401da8 <pio_set_peripheral+0x2c>
	switch (ul_type) {
  401dca:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  401dce:	d01d      	beq.n	401e0c <pio_set_peripheral+0x90>
  401dd0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  401dd4:	d1e8      	bne.n	401da8 <pio_set_peripheral+0x2c>
  401dd6:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  401dd8:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401dda:	6f03      	ldr	r3, [r0, #112]	; 0x70
  401ddc:	400b      	ands	r3, r1
  401dde:	ea23 0302 	bic.w	r3, r3, r2
  401de2:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401de4:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  401de6:	4313      	orrs	r3, r2
  401de8:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  401dea:	e7dd      	b.n	401da8 <pio_set_peripheral+0x2c>
{
  401dec:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  401dee:	6f04      	ldr	r4, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  401df0:	6f01      	ldr	r1, [r0, #112]	; 0x70
  401df2:	43d3      	mvns	r3, r2
  401df4:	4021      	ands	r1, r4
  401df6:	461c      	mov	r4, r3
  401df8:	4019      	ands	r1, r3
  401dfa:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  401dfc:	6f41      	ldr	r1, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  401dfe:	6f43      	ldr	r3, [r0, #116]	; 0x74
  401e00:	400b      	ands	r3, r1
  401e02:	4023      	ands	r3, r4
  401e04:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  401e06:	6042      	str	r2, [r0, #4]
}
  401e08:	bc10      	pop	{r4}
  401e0a:	4770      	bx	lr
  401e0c:	4770      	bx	lr

00401e0e <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  401e0e:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  401e10:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
  401e14:	bf14      	ite	ne
  401e16:	6641      	strne	r1, [r0, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401e18:	6601      	streq	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  401e1a:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
  401e1e:	bf14      	ite	ne
  401e20:	6201      	strne	r1, [r0, #32]
		p_pio->PIO_IFDR = ul_mask;
  401e22:	6241      	streq	r1, [r0, #36]	; 0x24
	if (ul_attribute & PIO_DEGLITCH) {
  401e24:	f012 0f02 	tst.w	r2, #2
  401e28:	d004      	beq.n	401e34 <pio_set_input+0x26>
		p_pio->PIO_IFSCDR = ul_mask;
  401e2a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  401e2e:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  401e30:	6001      	str	r1, [r0, #0]
}
  401e32:	4770      	bx	lr
		if (ul_attribute & PIO_DEBOUNCE) {
  401e34:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_IFSCER = ul_mask;
  401e38:	bf18      	it	ne
  401e3a:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
  401e3e:	e7f6      	b.n	401e2e <pio_set_input+0x20>

00401e40 <pio_set_output>:
{
  401e40:	b410      	push	{r4}
  401e42:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  401e44:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  401e46:	b144      	cbz	r4, 401e5a <pio_set_output+0x1a>
		p_pio->PIO_PUER = ul_mask;
  401e48:	6641      	str	r1, [r0, #100]	; 0x64
	if (ul_multidrive_enable) {
  401e4a:	b143      	cbz	r3, 401e5e <pio_set_output+0x1e>
		p_pio->PIO_MDER = ul_mask;
  401e4c:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  401e4e:	b142      	cbz	r2, 401e62 <pio_set_output+0x22>
		p_pio->PIO_SODR = ul_mask;
  401e50:	6301      	str	r1, [r0, #48]	; 0x30
	p_pio->PIO_OER = ul_mask;
  401e52:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  401e54:	6001      	str	r1, [r0, #0]
}
  401e56:	bc10      	pop	{r4}
  401e58:	4770      	bx	lr
		p_pio->PIO_PUDR = ul_mask;
  401e5a:	6601      	str	r1, [r0, #96]	; 0x60
  401e5c:	e7f5      	b.n	401e4a <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  401e5e:	6541      	str	r1, [r0, #84]	; 0x54
  401e60:	e7f5      	b.n	401e4e <pio_set_output+0xe>
		p_pio->PIO_CODR = ul_mask;
  401e62:	6341      	str	r1, [r0, #52]	; 0x34
  401e64:	e7f5      	b.n	401e52 <pio_set_output+0x12>

00401e66 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  401e66:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  401e68:	4770      	bx	lr

00401e6a <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  401e6a:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  401e6c:	4770      	bx	lr

00401e6e <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
  401e6e:	b570      	push	{r4, r5, r6, lr}
  401e70:	b082      	sub	sp, #8
  401e72:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
  401e74:	0943      	lsrs	r3, r0, #5
  401e76:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  401e7a:	f203 7307 	addw	r3, r3, #1799	; 0x707
  401e7e:	025c      	lsls	r4, r3, #9
	switch (ul_flags & PIO_TYPE_Msk) {
  401e80:	f001 43f0 	and.w	r3, r1, #2013265920	; 0x78000000
  401e84:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  401e88:	d04a      	beq.n	401f20 <pio_configure_pin+0xb2>
  401e8a:	d80b      	bhi.n	401ea4 <pio_configure_pin+0x36>
  401e8c:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  401e90:	d024      	beq.n	401edc <pio_configure_pin+0x6e>
  401e92:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  401e96:	d032      	beq.n	401efe <pio_configure_pin+0x90>
  401e98:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  401e9c:	d00d      	beq.n	401eba <pio_configure_pin+0x4c>
		return 0;
  401e9e:	2000      	movs	r0, #0
}
  401ea0:	b002      	add	sp, #8
  401ea2:	bd70      	pop	{r4, r5, r6, pc}
	switch (ul_flags & PIO_TYPE_Msk) {
  401ea4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  401ea8:	d056      	beq.n	401f58 <pio_configure_pin+0xea>
  401eaa:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  401eae:	d053      	beq.n	401f58 <pio_configure_pin+0xea>
  401eb0:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  401eb4:	d045      	beq.n	401f42 <pio_configure_pin+0xd4>
		return 0;
  401eb6:	2000      	movs	r0, #0
  401eb8:	e7f2      	b.n	401ea0 <pio_configure_pin+0x32>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
  401eba:	f000 001f 	and.w	r0, r0, #31
  401ebe:	2601      	movs	r6, #1
  401ec0:	4086      	lsls	r6, r0
  401ec2:	4632      	mov	r2, r6
  401ec4:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401ec8:	4620      	mov	r0, r4
  401eca:	f7ff ff57 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  401ece:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  401ed2:	bf14      	ite	ne
  401ed4:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401ed6:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  401ed8:	2001      	movs	r0, #1
  401eda:	e7e1      	b.n	401ea0 <pio_configure_pin+0x32>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
  401edc:	f000 001f 	and.w	r0, r0, #31
  401ee0:	2601      	movs	r6, #1
  401ee2:	4086      	lsls	r6, r0
  401ee4:	4632      	mov	r2, r6
  401ee6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401eea:	4620      	mov	r0, r4
  401eec:	f7ff ff46 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  401ef0:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  401ef4:	bf14      	ite	ne
  401ef6:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401ef8:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  401efa:	2001      	movs	r0, #1
  401efc:	e7d0      	b.n	401ea0 <pio_configure_pin+0x32>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, (1 << (ul_pin & 0x1F)));
  401efe:	f000 001f 	and.w	r0, r0, #31
  401f02:	2601      	movs	r6, #1
  401f04:	4086      	lsls	r6, r0
  401f06:	4632      	mov	r2, r6
  401f08:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401f0c:	4620      	mov	r0, r4
  401f0e:	f7ff ff35 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  401f12:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  401f16:	bf14      	ite	ne
  401f18:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401f1a:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  401f1c:	2001      	movs	r0, #1
  401f1e:	e7bf      	b.n	401ea0 <pio_configure_pin+0x32>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, (1 << (ul_pin & 0x1F)));
  401f20:	f000 001f 	and.w	r0, r0, #31
  401f24:	2601      	movs	r6, #1
  401f26:	4086      	lsls	r6, r0
  401f28:	4632      	mov	r2, r6
  401f2a:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  401f2e:	4620      	mov	r0, r4
  401f30:	f7ff ff24 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  401f34:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
  401f38:	bf14      	ite	ne
  401f3a:	6666      	strne	r6, [r4, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401f3c:	6626      	streq	r6, [r4, #96]	; 0x60
	return 1;
  401f3e:	2001      	movs	r0, #1
  401f40:	e7ae      	b.n	401ea0 <pio_configure_pin+0x32>
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
  401f42:	f000 011f 	and.w	r1, r0, #31
  401f46:	2601      	movs	r6, #1
  401f48:	462a      	mov	r2, r5
  401f4a:	fa06 f101 	lsl.w	r1, r6, r1
  401f4e:	4620      	mov	r0, r4
  401f50:	f7ff ff5d 	bl	401e0e <pio_set_input>
	return 1;
  401f54:	4630      	mov	r0, r6
		break;
  401f56:	e7a3      	b.n	401ea0 <pio_configure_pin+0x32>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  401f58:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
  401f5c:	f000 011f 	and.w	r1, r0, #31
  401f60:	2601      	movs	r6, #1
  401f62:	ea05 0306 	and.w	r3, r5, r6
  401f66:	9300      	str	r3, [sp, #0]
  401f68:	f3c5 0380 	ubfx	r3, r5, #2, #1
  401f6c:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  401f70:	bf14      	ite	ne
  401f72:	2200      	movne	r2, #0
  401f74:	2201      	moveq	r2, #1
  401f76:	fa06 f101 	lsl.w	r1, r6, r1
  401f7a:	4620      	mov	r0, r4
  401f7c:	f7ff ff60 	bl	401e40 <pio_set_output>
	return 1;
  401f80:	4630      	mov	r0, r6
		break;
  401f82:	e78d      	b.n	401ea0 <pio_configure_pin+0x32>

00401f84 <pio_configure_pin_group>:
{
  401f84:	b570      	push	{r4, r5, r6, lr}
  401f86:	b082      	sub	sp, #8
  401f88:	4605      	mov	r5, r0
  401f8a:	460e      	mov	r6, r1
  401f8c:	4614      	mov	r4, r2
	switch (ul_flags & PIO_TYPE_Msk) {
  401f8e:	f002 43f0 	and.w	r3, r2, #2013265920	; 0x78000000
  401f92:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
  401f96:	d03b      	beq.n	402010 <pio_configure_pin_group+0x8c>
  401f98:	d80b      	bhi.n	401fb2 <pio_configure_pin_group+0x2e>
  401f9a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
  401f9e:	d01f      	beq.n	401fe0 <pio_configure_pin_group+0x5c>
  401fa0:	f1b3 5fc0 	cmp.w	r3, #402653184	; 0x18000000
  401fa4:	d028      	beq.n	401ff8 <pio_configure_pin_group+0x74>
  401fa6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
  401faa:	d00d      	beq.n	401fc8 <pio_configure_pin_group+0x44>
		return 0;
  401fac:	2000      	movs	r0, #0
}
  401fae:	b002      	add	sp, #8
  401fb0:	bd70      	pop	{r4, r5, r6, pc}
	switch (ul_flags & PIO_TYPE_Msk) {
  401fb2:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
  401fb6:	d03b      	beq.n	402030 <pio_configure_pin_group+0xac>
  401fb8:	f1b3 5f60 	cmp.w	r3, #939524096	; 0x38000000
  401fbc:	d038      	beq.n	402030 <pio_configure_pin_group+0xac>
  401fbe:	f1b3 5f20 	cmp.w	r3, #671088640	; 0x28000000
  401fc2:	d031      	beq.n	402028 <pio_configure_pin_group+0xa4>
		return 0;
  401fc4:	2000      	movs	r0, #0
  401fc6:	e7f2      	b.n	401fae <pio_configure_pin_group+0x2a>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
  401fc8:	460a      	mov	r2, r1
  401fca:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
  401fce:	f7ff fed5 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  401fd2:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  401fd6:	bf14      	ite	ne
  401fd8:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401fda:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  401fdc:	2001      	movs	r0, #1
  401fde:	e7e6      	b.n	401fae <pio_configure_pin_group+0x2a>
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
  401fe0:	460a      	mov	r2, r1
  401fe2:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401fe6:	f7ff fec9 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  401fea:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  401fee:	bf14      	ite	ne
  401ff0:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  401ff2:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  401ff4:	2001      	movs	r0, #1
  401ff6:	e7da      	b.n	401fae <pio_configure_pin_group+0x2a>
		pio_set_peripheral(p_pio, PIO_PERIPH_C, ul_mask);
  401ff8:	460a      	mov	r2, r1
  401ffa:	f04f 51c0 	mov.w	r1, #402653184	; 0x18000000
  401ffe:	f7ff febd 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  402002:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  402006:	bf14      	ite	ne
  402008:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  40200a:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  40200c:	2001      	movs	r0, #1
  40200e:	e7ce      	b.n	401fae <pio_configure_pin_group+0x2a>
		pio_set_peripheral(p_pio, PIO_PERIPH_D, ul_mask);
  402010:	460a      	mov	r2, r1
  402012:	f04f 5100 	mov.w	r1, #536870912	; 0x20000000
  402016:	f7ff feb1 	bl	401d7c <pio_set_peripheral>
	if (ul_pull_up_enable) {
  40201a:	f014 0f01 	tst.w	r4, #1
		p_pio->PIO_PUER = ul_mask;
  40201e:	bf14      	ite	ne
  402020:	666e      	strne	r6, [r5, #100]	; 0x64
		p_pio->PIO_PUDR = ul_mask;
  402022:	662e      	streq	r6, [r5, #96]	; 0x60
	return 1;
  402024:	2001      	movs	r0, #1
  402026:	e7c2      	b.n	401fae <pio_configure_pin_group+0x2a>
		pio_set_input(p_pio, ul_mask, ul_flags);
  402028:	f7ff fef1 	bl	401e0e <pio_set_input>
	return 1;
  40202c:	2001      	movs	r0, #1
		break;
  40202e:	e7be      	b.n	401fae <pio_configure_pin_group+0x2a>
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
  402030:	f004 5260 	and.w	r2, r4, #939524096	; 0x38000000
		pio_set_output(p_pio, ul_mask,
  402034:	f004 0301 	and.w	r3, r4, #1
  402038:	9300      	str	r3, [sp, #0]
  40203a:	f3c4 0380 	ubfx	r3, r4, #2, #1
  40203e:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
  402042:	bf14      	ite	ne
  402044:	2200      	movne	r2, #0
  402046:	2201      	moveq	r2, #1
  402048:	4631      	mov	r1, r6
  40204a:	4628      	mov	r0, r5
  40204c:	f7ff fef8 	bl	401e40 <pio_set_output>
	return 1;
  402050:	2001      	movs	r0, #1
		break;
  402052:	e7ac      	b.n	401fae <pio_configure_pin_group+0x2a>

00402054 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  402054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  402058:	4681      	mov	r9, r0
  40205a:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  40205c:	f7ff ff03 	bl	401e66 <pio_get_interrupt_status>
  402060:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  402062:	4648      	mov	r0, r9
  402064:	f7ff ff01 	bl	401e6a <pio_get_interrupt_mask>

	/* Check pending events */
	if (status != 0) {
  402068:	4005      	ands	r5, r0
  40206a:	d013      	beq.n	402094 <pio_handler_process+0x40>
  40206c:	4c0e      	ldr	r4, [pc, #56]	; (4020a8 <pio_handler_process+0x54>)
  40206e:	f104 0860 	add.w	r8, r4, #96	; 0x60
  402072:	e003      	b.n	40207c <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  402074:	4544      	cmp	r4, r8
  402076:	d00d      	beq.n	402094 <pio_handler_process+0x40>
  402078:	3410      	adds	r4, #16
		while (status != 0) {
  40207a:	b15d      	cbz	r5, 402094 <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  40207c:	6820      	ldr	r0, [r4, #0]
  40207e:	42b0      	cmp	r0, r6
  402080:	d1f8      	bne.n	402074 <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  402082:	6861      	ldr	r1, [r4, #4]
  402084:	4229      	tst	r1, r5
  402086:	d0f5      	beq.n	402074 <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  402088:	68e3      	ldr	r3, [r4, #12]
  40208a:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  40208c:	6863      	ldr	r3, [r4, #4]
  40208e:	ea25 0503 	bic.w	r5, r5, r3
  402092:	e7ef      	b.n	402074 <pio_handler_process+0x20>
		}
	}

	/* Check capture events */
#if (SAM3S || SAM4S || SAM4E)
	if (pio_capture_enable_flag) {
  402094:	4b05      	ldr	r3, [pc, #20]	; (4020ac <pio_handler_process+0x58>)
  402096:	681b      	ldr	r3, [r3, #0]
  402098:	b123      	cbz	r3, 4020a4 <pio_handler_process+0x50>
		if (pio_capture_handler) {
  40209a:	4b05      	ldr	r3, [pc, #20]	; (4020b0 <pio_handler_process+0x5c>)
  40209c:	681b      	ldr	r3, [r3, #0]
  40209e:	b10b      	cbz	r3, 4020a4 <pio_handler_process+0x50>
			pio_capture_handler(p_pio);
  4020a0:	4648      	mov	r0, r9
  4020a2:	4798      	blx	r3
		}
	}
#endif
}
  4020a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4020a8:	20000478 	.word	0x20000478
  4020ac:	200008a0 	.word	0x200008a0
  4020b0:	200004e8 	.word	0x200004e8

004020b4 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  4020b4:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  4020b6:	210b      	movs	r1, #11
  4020b8:	4801      	ldr	r0, [pc, #4]	; (4020c0 <PIOA_Handler+0xc>)
  4020ba:	f7ff ffcb 	bl	402054 <pio_handler_process>
}
  4020be:	bd08      	pop	{r3, pc}
  4020c0:	400e0e00 	.word	0x400e0e00

004020c4 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  4020c4:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  4020c6:	210c      	movs	r1, #12
  4020c8:	4801      	ldr	r0, [pc, #4]	; (4020d0 <PIOB_Handler+0xc>)
  4020ca:	f7ff ffc3 	bl	402054 <pio_handler_process>
}
  4020ce:	bd08      	pop	{r3, pc}
  4020d0:	400e1000 	.word	0x400e1000

004020d4 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  4020d4:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  4020d6:	210d      	movs	r1, #13
  4020d8:	4801      	ldr	r0, [pc, #4]	; (4020e0 <PIOC_Handler+0xc>)
  4020da:	f7ff ffbb 	bl	402054 <pio_handler_process>
}
  4020de:	bd08      	pop	{r3, pc}
  4020e0:	400e1200 	.word	0x400e1200

004020e4 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  4020e4:	4a17      	ldr	r2, [pc, #92]	; (402144 <pmc_switch_mck_to_pllack+0x60>)
  4020e6:	6b13      	ldr	r3, [r2, #48]	; 0x30
  4020e8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  4020ec:	4318      	orrs	r0, r3
  4020ee:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  4020f0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4020f2:	f013 0f08 	tst.w	r3, #8
  4020f6:	d10a      	bne.n	40210e <pmc_switch_mck_to_pllack+0x2a>
  4020f8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  4020fc:	4911      	ldr	r1, [pc, #68]	; (402144 <pmc_switch_mck_to_pllack+0x60>)
  4020fe:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  402100:	f012 0f08 	tst.w	r2, #8
  402104:	d103      	bne.n	40210e <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  402106:	3b01      	subs	r3, #1
  402108:	d1f9      	bne.n	4020fe <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  40210a:	2001      	movs	r0, #1
  40210c:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  40210e:	4a0d      	ldr	r2, [pc, #52]	; (402144 <pmc_switch_mck_to_pllack+0x60>)
  402110:	6b13      	ldr	r3, [r2, #48]	; 0x30
  402112:	f023 0303 	bic.w	r3, r3, #3
  402116:	f043 0302 	orr.w	r3, r3, #2
  40211a:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  40211c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40211e:	f013 0f08 	tst.w	r3, #8
  402122:	d10a      	bne.n	40213a <pmc_switch_mck_to_pllack+0x56>
  402124:	f44f 6300 	mov.w	r3, #2048	; 0x800
  402128:	4906      	ldr	r1, [pc, #24]	; (402144 <pmc_switch_mck_to_pllack+0x60>)
  40212a:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  40212c:	f012 0f08 	tst.w	r2, #8
  402130:	d105      	bne.n	40213e <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  402132:	3b01      	subs	r3, #1
  402134:	d1f9      	bne.n	40212a <pmc_switch_mck_to_pllack+0x46>
			return 1;
  402136:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  402138:	4770      	bx	lr
	return 0;
  40213a:	2000      	movs	r0, #0
  40213c:	4770      	bx	lr
  40213e:	2000      	movs	r0, #0
  402140:	4770      	bx	lr
  402142:	bf00      	nop
  402144:	400e0400 	.word	0x400e0400

00402148 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  402148:	b138      	cbz	r0, 40215a <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40214a:	4911      	ldr	r1, [pc, #68]	; (402190 <pmc_switch_mainck_to_xtal+0x48>)
  40214c:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  40214e:	4a11      	ldr	r2, [pc, #68]	; (402194 <pmc_switch_mainck_to_xtal+0x4c>)
  402150:	401a      	ands	r2, r3
  402152:	4b11      	ldr	r3, [pc, #68]	; (402198 <pmc_switch_mainck_to_xtal+0x50>)
  402154:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  402156:	620b      	str	r3, [r1, #32]
  402158:	4770      	bx	lr
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  40215a:	480d      	ldr	r0, [pc, #52]	; (402190 <pmc_switch_mainck_to_xtal+0x48>)
  40215c:	6a02      	ldr	r2, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  40215e:	020b      	lsls	r3, r1, #8
  402160:	b29b      	uxth	r3, r3
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  402162:	f422 115c 	bic.w	r1, r2, #3604480	; 0x370000
  402166:	f021 0103 	bic.w	r1, r1, #3
  40216a:	430b      	orrs	r3, r1
  40216c:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  402170:	f043 0301 	orr.w	r3, r3, #1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  402174:	6203      	str	r3, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  402176:	4602      	mov	r2, r0
  402178:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40217a:	f013 0f01 	tst.w	r3, #1
  40217e:	d0fb      	beq.n	402178 <pmc_switch_mainck_to_xtal+0x30>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  402180:	4a03      	ldr	r2, [pc, #12]	; (402190 <pmc_switch_mainck_to_xtal+0x48>)
  402182:	6a13      	ldr	r3, [r2, #32]
  402184:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
  402188:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
  40218c:	6213      	str	r3, [r2, #32]
	}
}
  40218e:	4770      	bx	lr
  402190:	400e0400 	.word	0x400e0400
  402194:	fec8fffc 	.word	0xfec8fffc
  402198:	01370002 	.word	0x01370002

0040219c <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  40219c:	4b02      	ldr	r3, [pc, #8]	; (4021a8 <pmc_osc_is_ready_mainck+0xc>)
  40219e:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4021a0:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  4021a4:	4770      	bx	lr
  4021a6:	bf00      	nop
  4021a8:	400e0400 	.word	0x400e0400

004021ac <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  4021ac:	4b02      	ldr	r3, [pc, #8]	; (4021b8 <pmc_disable_pllack+0xc>)
  4021ae:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  4021b2:	629a      	str	r2, [r3, #40]	; 0x28
#endif
}
  4021b4:	4770      	bx	lr
  4021b6:	bf00      	nop
  4021b8:	400e0400 	.word	0x400e0400

004021bc <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  4021bc:	4b02      	ldr	r3, [pc, #8]	; (4021c8 <pmc_is_locked_pllack+0xc>)
  4021be:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  4021c0:	f000 0002 	and.w	r0, r0, #2
  4021c4:	4770      	bx	lr
  4021c6:	bf00      	nop
  4021c8:	400e0400 	.word	0x400e0400

004021cc <pmc_enable_periph_clk>:
	PMC->PMC_PCR = ul_id & 0x7F;
	pcr = PMC->PMC_PCR | PMC_PCR_EN | PMC_PCR_CMD;
	PMC->PMC_PCR = pcr;
	return 0;
#else
	if (ul_id > MAX_PERIPH_ID) {
  4021cc:	2822      	cmp	r0, #34	; 0x22
  4021ce:	d81e      	bhi.n	40220e <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  4021d0:	281f      	cmp	r0, #31
  4021d2:	d80c      	bhi.n	4021ee <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  4021d4:	4b11      	ldr	r3, [pc, #68]	; (40221c <pmc_enable_periph_clk+0x50>)
  4021d6:	699a      	ldr	r2, [r3, #24]
  4021d8:	2301      	movs	r3, #1
  4021da:	4083      	lsls	r3, r0
  4021dc:	4393      	bics	r3, r2
  4021de:	d018      	beq.n	402212 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  4021e0:	2301      	movs	r3, #1
  4021e2:	fa03 f000 	lsl.w	r0, r3, r0
  4021e6:	4b0d      	ldr	r3, [pc, #52]	; (40221c <pmc_enable_periph_clk+0x50>)
  4021e8:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  4021ea:	2000      	movs	r0, #0
  4021ec:	4770      	bx	lr
		ul_id -= 32;
  4021ee:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  4021f0:	4b0a      	ldr	r3, [pc, #40]	; (40221c <pmc_enable_periph_clk+0x50>)
  4021f2:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  4021f6:	2301      	movs	r3, #1
  4021f8:	4083      	lsls	r3, r0
  4021fa:	4393      	bics	r3, r2
  4021fc:	d00b      	beq.n	402216 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  4021fe:	2301      	movs	r3, #1
  402200:	fa03 f000 	lsl.w	r0, r3, r0
  402204:	4b05      	ldr	r3, [pc, #20]	; (40221c <pmc_enable_periph_clk+0x50>)
  402206:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  40220a:	2000      	movs	r0, #0
  40220c:	4770      	bx	lr
		return 1;
  40220e:	2001      	movs	r0, #1
  402210:	4770      	bx	lr
	return 0;
  402212:	2000      	movs	r0, #0
  402214:	4770      	bx	lr
  402216:	2000      	movs	r0, #0
#endif /* defined(REG_PMC_PCR) && !SAMG55 */
}
  402218:	4770      	bx	lr
  40221a:	bf00      	nop
  40221c:	400e0400 	.word	0x400e0400

00402220 <wdt_disable>:
/**
 * \brief Disable the watchdog timer.
 */
void wdt_disable(Wdt *p_wdt)
{
	p_wdt->WDT_MR = WDT_MR_WDDIS;
  402220:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  402224:	6043      	str	r3, [r0, #4]

}
  402226:	4770      	bx	lr

00402228 <uart_init>:
 *
 * \retval 0 Success.
 * \retval 1 Bad baud rate generator value.
 */
uint32_t uart_init(Uart *p_uart, const sam_uart_opt_t *p_uart_opt)
{
  402228:	b410      	push	{r4}
	uint32_t cd = 0;

	/* Reset and disable receiver & transmitter */
	p_uart->UART_CR = UART_CR_RSTRX | UART_CR_RSTTX
  40222a:	23ac      	movs	r3, #172	; 0xac
  40222c:	6003      	str	r3, [r0, #0]
			| UART_CR_RXDIS | UART_CR_TXDIS;

	/* Check and configure baudrate */
	/* Asynchronous, no oversampling */
	cd = (p_uart_opt->ul_mck / p_uart_opt->ul_baudrate) / UART_MCK_DIV;
  40222e:	680b      	ldr	r3, [r1, #0]
  402230:	684a      	ldr	r2, [r1, #4]
  402232:	fbb3 f3f2 	udiv	r3, r3, r2
  402236:	091b      	lsrs	r3, r3, #4
	if (cd < UART_MCK_DIV_MIN_FACTOR || cd > UART_MCK_DIV_MAX_FACTOR)
  402238:	1e5c      	subs	r4, r3, #1
  40223a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
  40223e:	4294      	cmp	r4, r2
  402240:	d80b      	bhi.n	40225a <uart_init+0x32>
		return 1;

	p_uart->UART_BRGR = cd;
  402242:	6203      	str	r3, [r0, #32]
	/* Configure mode */
	p_uart->UART_MR = p_uart_opt->ul_mode;
  402244:	688b      	ldr	r3, [r1, #8]
  402246:	6043      	str	r3, [r0, #4]

#if (!SAMV71 && !SAMV70 && !SAME70 && !SAMS70)
	/* Disable PDC channel */
	p_uart->UART_PTCR = UART_PTCR_RXTDIS | UART_PTCR_TXTDIS;
  402248:	f240 2302 	movw	r3, #514	; 0x202
  40224c:	f8c0 3120 	str.w	r3, [r0, #288]	; 0x120
#endif

	/* Enable receiver and transmitter */
	p_uart->UART_CR = UART_CR_RXEN | UART_CR_TXEN;
  402250:	2350      	movs	r3, #80	; 0x50
  402252:	6003      	str	r3, [r0, #0]

	return 0;
  402254:	2000      	movs	r0, #0
}
  402256:	bc10      	pop	{r4}
  402258:	4770      	bx	lr
		return 1;
  40225a:	2001      	movs	r0, #1
  40225c:	e7fb      	b.n	402256 <uart_init+0x2e>

0040225e <uart_get_status>:
 *
 * \return The current UART status.
 */
uint32_t uart_get_status(Uart *p_uart)
{
	return p_uart->UART_SR;
  40225e:	6940      	ldr	r0, [r0, #20]
}
  402260:	4770      	bx	lr

00402262 <uart_is_rx_ready>:
 * \retval 1 One data has been received.
 * \retval 0 No data has been received.
 */
uint32_t uart_is_rx_ready(Uart *p_uart)
{
	return (p_uart->UART_SR & UART_SR_RXRDY) > 0;
  402262:	6940      	ldr	r0, [r0, #20]
}
  402264:	f000 0001 	and.w	r0, r0, #1
  402268:	4770      	bx	lr

0040226a <uart_write>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_write(Uart *p_uart, const uint8_t uc_data)
{
	/* Check if the transmitter is ready */
	if (!(p_uart->UART_SR & UART_SR_TXRDY))
  40226a:	6943      	ldr	r3, [r0, #20]
  40226c:	f013 0f02 	tst.w	r3, #2
		return 1;

	/* Send character */
	p_uart->UART_THR = uc_data;
  402270:	bf1a      	itte	ne
  402272:	61c1      	strne	r1, [r0, #28]
	return 0;
  402274:	2000      	movne	r0, #0
		return 1;
  402276:	2001      	moveq	r0, #1
}
  402278:	4770      	bx	lr

0040227a <uart_read>:
 * \retval 1 I/O Failure, UART is not ready.
 */
uint32_t uart_read(Uart *p_uart, uint8_t *puc_data)
{
	/* Check if the receiver is ready */
	if ((p_uart->UART_SR & UART_SR_RXRDY) == 0)
  40227a:	6943      	ldr	r3, [r0, #20]
  40227c:	f013 0f01 	tst.w	r3, #1
		return 1;

	/* Read character */
	*puc_data = (uint8_t) p_uart->UART_RHR;
  402280:	bf1d      	ittte	ne
  402282:	6983      	ldrne	r3, [r0, #24]
  402284:	700b      	strbne	r3, [r1, #0]
	return 0;
  402286:	2000      	movne	r0, #0
		return 1;
  402288:	2001      	moveq	r0, #1
}
  40228a:	4770      	bx	lr

0040228c <usart_write>:
 * \retval 0 on success.
 * \retval 1 on failure.
 */
uint32_t usart_write(Usart *p_usart, uint32_t c)
{
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
  40228c:	6943      	ldr	r3, [r0, #20]
  40228e:	f013 0f02 	tst.w	r3, #2
		return 1;
	}

	p_usart->US_THR = US_THR_TXCHR(c);
  402292:	bf1d      	ittte	ne
  402294:	f3c1 0108 	ubfxne	r1, r1, #0, #9
  402298:	61c1      	strne	r1, [r0, #28]
	return 0;
  40229a:	2000      	movne	r0, #0
		return 1;
  40229c:	2001      	moveq	r0, #1
}
  40229e:	4770      	bx	lr

004022a0 <usart_read>:
 * \retval 0 on success.
 * \retval 1 if no data is available or errors.
 */
uint32_t usart_read(Usart *p_usart, uint32_t *c)
{
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
  4022a0:	6943      	ldr	r3, [r0, #20]
  4022a2:	f013 0f01 	tst.w	r3, #1
  4022a6:	d005      	beq.n	4022b4 <usart_read+0x14>
		return 1;
	}

	/* Read character */
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
  4022a8:	6983      	ldr	r3, [r0, #24]
  4022aa:	f3c3 0308 	ubfx	r3, r3, #0, #9
  4022ae:	600b      	str	r3, [r1, #0]

	return 0;
  4022b0:	2000      	movs	r0, #0
  4022b2:	4770      	bx	lr
		return 1;
  4022b4:	2001      	movs	r0, #1
}
  4022b6:	4770      	bx	lr

004022b8 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
  4022b8:	b4f0      	push	{r4, r5, r6, r7}
  4022ba:	b08c      	sub	sp, #48	; 0x30
  4022bc:	4607      	mov	r7, r0
  4022be:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
  4022c0:	ac01      	add	r4, sp, #4
  4022c2:	4d11      	ldr	r5, [pc, #68]	; (402308 <pwm_clocks_generate+0x50>)
  4022c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4022c6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  4022c8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
  4022ca:	c40f      	stmia	r4!, {r0, r1, r2, r3}
  4022cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
  4022d0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
  4022d4:	aa01      	add	r2, sp, #4
  4022d6:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
  4022d8:	f852 0b04 	ldr.w	r0, [r2], #4
  4022dc:	fbb6 f0f0 	udiv	r0, r6, r0
  4022e0:	fbb0 f0f7 	udiv	r0, r0, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
  4022e4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
  4022e8:	d905      	bls.n	4022f6 <pwm_clocks_generate+0x3e>
			break;
		}
		ul_pre++;
  4022ea:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
  4022ec:	2b0b      	cmp	r3, #11
  4022ee:	d1f3      	bne.n	4022d8 <pwm_clocks_generate+0x20>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
		return ul_div | (ul_pre << 8);
	} else {
		return PWM_INVALID_ARGUMENT;
  4022f0:	f64f 70ff 	movw	r0, #65535	; 0xffff
  4022f4:	e005      	b.n	402302 <pwm_clocks_generate+0x4a>
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
  4022f6:	2b0a      	cmp	r3, #10
		return ul_div | (ul_pre << 8);
  4022f8:	bf94      	ite	ls
  4022fa:	ea40 2003 	orrls.w	r0, r0, r3, lsl #8
		return PWM_INVALID_ARGUMENT;
  4022fe:	f64f 70ff 	movwhi	r0, #65535	; 0xffff
	}
}
  402302:	b00c      	add	sp, #48	; 0x30
  402304:	bcf0      	pop	{r4, r5, r6, r7}
  402306:	4770      	bx	lr
  402308:	0040837c 	.word	0x0040837c

0040230c <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
  40230c:	b570      	push	{r4, r5, r6, lr}
  40230e:	4606      	mov	r6, r0
  402310:	460d      	mov	r5, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
  402312:	680c      	ldr	r4, [r1, #0]
  402314:	b144      	cbz	r4, 402328 <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
  402316:	6889      	ldr	r1, [r1, #8]
  402318:	4620      	mov	r0, r4
  40231a:	f7ff ffcd 	bl	4022b8 <pwm_clocks_generate>
  40231e:	4604      	mov	r4, r0
		if (result == PWM_INVALID_ARGUMENT) {
  402320:	f64f 73ff 	movw	r3, #65535	; 0xffff
  402324:	4298      	cmp	r0, r3
  402326:	d00c      	beq.n	402342 <pwm_init+0x36>

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
  402328:	6868      	ldr	r0, [r5, #4]
  40232a:	b140      	cbz	r0, 40233e <pwm_init+0x32>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
  40232c:	68a9      	ldr	r1, [r5, #8]
  40232e:	f7ff ffc3 	bl	4022b8 <pwm_clocks_generate>

		if (result == PWM_INVALID_ARGUMENT) {
  402332:	f64f 73ff 	movw	r3, #65535	; 0xffff
  402336:	4298      	cmp	r0, r3
  402338:	d005      	beq.n	402346 <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
  40233a:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
  40233e:	6034      	str	r4, [r6, #0]
#endif
	return 0;
  402340:	2400      	movs	r4, #0
}
  402342:	4620      	mov	r0, r4
  402344:	bd70      	pop	{r4, r5, r6, pc}
			return result;
  402346:	4604      	mov	r4, r0
  402348:	e7fb      	b.n	402342 <pwm_init+0x36>

0040234a <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
  40234a:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
  40234c:	680a      	ldr	r2, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  40234e:	684b      	ldr	r3, [r1, #4]
  402350:	f003 030f 	and.w	r3, r3, #15
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
			(p_channel->counter_event) |
  402354:	8a8c      	ldrh	r4, [r1, #20]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402356:	4323      	orrs	r3, r4
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
  402358:	890c      	ldrh	r4, [r1, #8]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  40235a:	4323      	orrs	r3, r4
			(p_channel->polarity << 9) |
  40235c:	7a8c      	ldrb	r4, [r1, #10]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  40235e:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
			(p_channel->b_deadtime_generator << 16) |
  402362:	7d8c      	ldrb	r4, [r1, #22]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402364:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
  402368:	7dcc      	ldrb	r4, [r1, #23]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  40236a:	ea43 4344 	orr.w	r3, r3, r4, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
  40236e:	7e0c      	ldrb	r4, [r1, #24]
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
  402370:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
  402374:	eb00 1442 	add.w	r4, r0, r2, lsl #5
  402378:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
  40237c:	68cb      	ldr	r3, [r1, #12]
  40237e:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
  402382:	690b      	ldr	r3, [r1, #16]
  402384:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
  402388:	7d8b      	ldrb	r3, [r1, #22]
  40238a:	b13b      	cbz	r3, 40239c <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
  40238c:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
  40238e:	8b4b      	ldrh	r3, [r1, #26]
  402390:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
  402394:	eb00 1442 	add.w	r4, r0, r2, lsl #5
  402398:	f8c4 3218 	str.w	r3, [r4, #536]	; 0x218
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
  40239c:	6c85      	ldr	r5, [r0, #72]	; 0x48
  40239e:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  4023a2:	4093      	lsls	r3, r2
  4023a4:	43db      	mvns	r3, r3
  4023a6:	401d      	ands	r5, r3
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
  4023a8:	7fcc      	ldrb	r4, [r1, #31]
  4023aa:	fa04 f602 	lsl.w	r6, r4, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
  4023ae:	7f8c      	ldrb	r4, [r1, #30]
  4023b0:	4094      	lsls	r4, r2
  4023b2:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
  4023b6:	432c      	orrs	r4, r5
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
  4023b8:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
  4023ba:	6c44      	ldr	r4, [r0, #68]	; 0x44
  4023bc:	4023      	ands	r3, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
  4023be:	f891 4021 	ldrb.w	r4, [r1, #33]	; 0x21
  4023c2:	fa04 f502 	lsl.w	r5, r4, r2
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
  4023c6:	f891 4020 	ldrb.w	r4, [r1, #32]
  4023ca:	4094      	lsls	r4, r2
  4023cc:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  4023d0:	4323      	orrs	r3, r4
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
  4023d2:	6443      	str	r3, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
  4023d4:	2301      	movs	r3, #1
  4023d6:	4093      	lsls	r3, r2
	if (p_channel->b_sync_ch) {
  4023d8:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
  4023dc:	b31c      	cbz	r4, 402426 <pwm_channel_init+0xdc>
		p_pwm->PWM_SCM |= channel;
  4023de:	6a04      	ldr	r4, [r0, #32]
  4023e0:	431c      	orrs	r4, r3
  4023e2:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
  4023e4:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
  4023e8:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
  4023ea:	6e84      	ldr	r4, [r0, #104]	; 0x68
  4023ec:	bf0c      	ite	eq
  4023ee:	431c      	orreq	r4, r3
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
  4023f0:	439c      	bicne	r4, r3
  4023f2:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
  4023f4:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
  4023f8:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
  4023fa:	6e84      	ldr	r4, [r0, #104]	; 0x68
  4023fc:	bf0c      	ite	eq
  4023fe:	ea44 4303 	orreq.w	r3, r4, r3, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
  402402:	ea24 4303 	bicne.w	r3, r4, r3, lsl #16
  402406:	6683      	str	r3, [r0, #104]	; 0x68
		p_pwm->PWM_FPE2 = fault_enable_reg;
	}
#endif

#if (SAM3U || SAM3S || SAM4S || SAM4E || SAMV70 || SAMV71 || SAME70 || SAMS70)
	ch_num *= 8;
  402408:	00d2      	lsls	r2, r2, #3
	fault_enable_reg = p_pwm->PWM_FPE;
  40240a:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
	fault_enable_reg &= ~(0xFF << ch_num);
  40240c:	23ff      	movs	r3, #255	; 0xff
  40240e:	4093      	lsls	r3, r2
  402410:	ea24 0403 	bic.w	r4, r4, r3
	fault_enable_reg |= ((p_channel->fault_id) << ch_num);
  402414:	f891 3023 	ldrb.w	r3, [r1, #35]	; 0x23
  402418:	fa03 f202 	lsl.w	r2, r3, r2
  40241c:	4322      	orrs	r2, r4
	p_pwm->PWM_FPE = fault_enable_reg;
  40241e:	66c2      	str	r2, [r0, #108]	; 0x6c
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR &= (~PWM_CMR_PPM);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR |= (p_channel->ul_ppm_mode & PWM_CMR_PPM);
#endif

	return 0;
}
  402420:	2000      	movs	r0, #0
  402422:	bc70      	pop	{r4, r5, r6}
  402424:	4770      	bx	lr
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
  402426:	6a04      	ldr	r4, [r0, #32]
  402428:	ea24 0403 	bic.w	r4, r4, r3
  40242c:	6204      	str	r4, [r0, #32]
  40242e:	e7d9      	b.n	4023e4 <pwm_channel_init+0x9a>

00402430 <pwm_channel_update_duty>:
		uint32_t ul_duty)
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
  402430:	690b      	ldr	r3, [r1, #16]
  402432:	4293      	cmp	r3, r2
  402434:	d307      	bcc.n	402446 <pwm_channel_update_duty+0x16>
	uint32_t ch_num = p_channel->channel;
  402436:	680b      	ldr	r3, [r1, #0]
		return PWM_INVALID_ARGUMENT;
	} else {
		/* Save new duty cycle value */
		p_channel->ul_duty = ul_duty;
  402438:	60ca      	str	r2, [r1, #12]
		mode &= ~PWM_CMR_CPD;
		p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = mode;

		p_pwm->PWM_CH_NUM[ch_num].PWM_CUPD = ul_duty;
#else
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
  40243a:	eb00 1043 	add.w	r0, r0, r3, lsl #5
  40243e:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
#endif
	}

	return 0;
  402442:	2000      	movs	r0, #0
  402444:	4770      	bx	lr
		return PWM_INVALID_ARGUMENT;
  402446:	f64f 70ff 	movw	r0, #65535	; 0xffff
}
  40244a:	4770      	bx	lr

0040244c <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
  40244c:	2301      	movs	r3, #1
  40244e:	fa03 f101 	lsl.w	r1, r3, r1
  402452:	6041      	str	r1, [r0, #4]
}
  402454:	4770      	bx	lr

00402456 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
  402456:	2301      	movs	r3, #1
  402458:	fa03 f101 	lsl.w	r1, r3, r1
  40245c:	6081      	str	r1, [r0, #8]
}
  40245e:	4770      	bx	lr

00402460 <Dummy_Handler>:
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
	while (1) {
	}
  402460:	e7fe      	b.n	402460 <Dummy_Handler>
	...

00402464 <Reset_Handler>:
{
  402464:	b510      	push	{r4, lr}
	if (pSrc > pDest) {
  402466:	4a23      	ldr	r2, [pc, #140]	; (4024f4 <Reset_Handler+0x90>)
  402468:	4b23      	ldr	r3, [pc, #140]	; (4024f8 <Reset_Handler+0x94>)
  40246a:	429a      	cmp	r2, r3
  40246c:	d929      	bls.n	4024c2 <Reset_Handler+0x5e>
		for (; pDest < &_erelocate;) {
  40246e:	461a      	mov	r2, r3
  402470:	4b22      	ldr	r3, [pc, #136]	; (4024fc <Reset_Handler+0x98>)
  402472:	429a      	cmp	r2, r3
  402474:	d20d      	bcs.n	402492 <Reset_Handler+0x2e>
  402476:	4611      	mov	r1, r2
  402478:	3b01      	subs	r3, #1
  40247a:	1a9b      	subs	r3, r3, r2
  40247c:	f023 0303 	bic.w	r3, r3, #3
  402480:	3304      	adds	r3, #4
  402482:	4a1c      	ldr	r2, [pc, #112]	; (4024f4 <Reset_Handler+0x90>)
  402484:	4413      	add	r3, r2
			*pDest++ = *pSrc++;
  402486:	f852 0b04 	ldr.w	r0, [r2], #4
  40248a:	f841 0b04 	str.w	r0, [r1], #4
		for (; pDest < &_erelocate;) {
  40248e:	429a      	cmp	r2, r3
  402490:	d1f9      	bne.n	402486 <Reset_Handler+0x22>

    No Operation does nothing. This instruction can be used for code alignment purposes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __NOP(void)
{
  __ASM volatile ("nop");
  402492:	bf00      	nop
	for (pDest = &_szero; pDest < &_ezero;) {
  402494:	4a1a      	ldr	r2, [pc, #104]	; (402500 <Reset_Handler+0x9c>)
  402496:	4b1b      	ldr	r3, [pc, #108]	; (402504 <Reset_Handler+0xa0>)
  402498:	429a      	cmp	r2, r3
  40249a:	d20a      	bcs.n	4024b2 <Reset_Handler+0x4e>
  40249c:	3b01      	subs	r3, #1
  40249e:	1a9b      	subs	r3, r3, r2
  4024a0:	f023 0303 	bic.w	r3, r3, #3
  4024a4:	3304      	adds	r3, #4
  4024a6:	4413      	add	r3, r2
		*pDest++ = 0;
  4024a8:	2100      	movs	r1, #0
  4024aa:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
  4024ae:	4293      	cmp	r3, r2
  4024b0:	d1fb      	bne.n	4024aa <Reset_Handler+0x46>
	SCB->VTOR = ((uint32_t) pSrc);
  4024b2:	4a15      	ldr	r2, [pc, #84]	; (402508 <Reset_Handler+0xa4>)
  4024b4:	4b15      	ldr	r3, [pc, #84]	; (40250c <Reset_Handler+0xa8>)
  4024b6:	609a      	str	r2, [r3, #8]
	__libc_init_array();
  4024b8:	f000 fcc0 	bl	402e3c <__libc_init_array>
	main();
  4024bc:	f7fd ff0e 	bl	4002dc <main>
	while (1);
  4024c0:	e7fe      	b.n	4024c0 <Reset_Handler+0x5c>
	} else if (pSrc < pDest) {
  4024c2:	4a0c      	ldr	r2, [pc, #48]	; (4024f4 <Reset_Handler+0x90>)
  4024c4:	4b0c      	ldr	r3, [pc, #48]	; (4024f8 <Reset_Handler+0x94>)
  4024c6:	429a      	cmp	r2, r3
  4024c8:	d2e3      	bcs.n	402492 <Reset_Handler+0x2e>
		uint32_t nb_bytes = (uint32_t)&_erelocate - (uint32_t)&_srelocate;
  4024ca:	4b0c      	ldr	r3, [pc, #48]	; (4024fc <Reset_Handler+0x98>)
  4024cc:	480a      	ldr	r0, [pc, #40]	; (4024f8 <Reset_Handler+0x94>)
  4024ce:	1a18      	subs	r0, r3, r0
		pSrc = (uint32_t*)((uint32_t)pSrc + nb_bytes) - 1;
  4024d0:	1f11      	subs	r1, r2, #4
  4024d2:	4401      	add	r1, r0
  4024d4:	460c      	mov	r4, r1
		pDest = (uint32_t*)((uint32_t)pDest + nb_bytes) - 1;
  4024d6:	3b04      	subs	r3, #4
		for (;nb_bytes;nb_bytes -= 4) {
  4024d8:	2800      	cmp	r0, #0
  4024da:	d0da      	beq.n	402492 <Reset_Handler+0x2e>
			*pDest-- = *pSrc--;
  4024dc:	1a5b      	subs	r3, r3, r1
		for (;nb_bytes;nb_bytes -= 4) {
  4024de:	f1c2 0204 	rsb	r2, r2, #4
			*pDest-- = *pSrc--;
  4024e2:	4621      	mov	r1, r4
  4024e4:	f851 0904 	ldr.w	r0, [r1], #-4
  4024e8:	50e0      	str	r0, [r4, r3]
  4024ea:	460c      	mov	r4, r1
		for (;nb_bytes;nb_bytes -= 4) {
  4024ec:	42d1      	cmn	r1, r2
  4024ee:	d1f8      	bne.n	4024e2 <Reset_Handler+0x7e>
  4024f0:	e7cf      	b.n	402492 <Reset_Handler+0x2e>
  4024f2:	bf00      	nop
  4024f4:	0040873c 	.word	0x0040873c
  4024f8:	20000000 	.word	0x20000000
  4024fc:	200001e8 	.word	0x200001e8
  402500:	200001e8 	.word	0x200001e8
  402504:	200008b4 	.word	0x200008b4
  402508:	00400000 	.word	0x00400000
  40250c:	e000ed00 	.word	0xe000ed00

00402510 <SystemCoreClockUpdate>:
 * \brief Get Core Clock Frequency.
 */
void SystemCoreClockUpdate( void )
{
	/* Determine clock frequency according to clock register values */
	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  402510:	4b3c      	ldr	r3, [pc, #240]	; (402604 <SystemCoreClockUpdate+0xf4>)
  402512:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  402514:	f003 0303 	and.w	r3, r3, #3
  402518:	2b03      	cmp	r3, #3
  40251a:	d80e      	bhi.n	40253a <SystemCoreClockUpdate+0x2a>
  40251c:	e8df f003 	tbb	[pc, r3]
  402520:	39391d02 	.word	0x39391d02
	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  402524:	4b38      	ldr	r3, [pc, #224]	; (402608 <SystemCoreClockUpdate+0xf8>)
  402526:	695b      	ldr	r3, [r3, #20]
  402528:	f013 0f80 	tst.w	r3, #128	; 0x80
				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40252c:	4b37      	ldr	r3, [pc, #220]	; (40260c <SystemCoreClockUpdate+0xfc>)
  40252e:	bf14      	ite	ne
  402530:	f44f 4200 	movne.w	r2, #32768	; 0x8000
			} else {
				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  402534:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  402538:	601a      	str	r2, [r3, #0]
		
	default:
		break;
	}

	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
  40253a:	4b32      	ldr	r3, [pc, #200]	; (402604 <SystemCoreClockUpdate+0xf4>)
  40253c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40253e:	f003 0370 	and.w	r3, r3, #112	; 0x70
  402542:	2b70      	cmp	r3, #112	; 0x70
  402544:	d056      	beq.n	4025f4 <SystemCoreClockUpdate+0xe4>
		SystemCoreClock /= 3U;
	} else {
		SystemCoreClock >>=
			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  402546:	4b2f      	ldr	r3, [pc, #188]	; (402604 <SystemCoreClockUpdate+0xf4>)
  402548:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  40254a:	f3c2 1202 	ubfx	r2, r2, #4, #3
		SystemCoreClock >>=
  40254e:	4b2f      	ldr	r3, [pc, #188]	; (40260c <SystemCoreClockUpdate+0xfc>)
  402550:	681b      	ldr	r3, [r3, #0]
  402552:	40d3      	lsrs	r3, r2
  402554:	4a2d      	ldr	r2, [pc, #180]	; (40260c <SystemCoreClockUpdate+0xfc>)
  402556:	6013      	str	r3, [r2, #0]
	}
}
  402558:	4770      	bx	lr
		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  40255a:	4b2a      	ldr	r3, [pc, #168]	; (402604 <SystemCoreClockUpdate+0xf4>)
  40255c:	6a1b      	ldr	r3, [r3, #32]
  40255e:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  402562:	d003      	beq.n	40256c <SystemCoreClockUpdate+0x5c>
			SystemCoreClock = CHIP_FREQ_XTAL;
  402564:	4b29      	ldr	r3, [pc, #164]	; (40260c <SystemCoreClockUpdate+0xfc>)
  402566:	4a2a      	ldr	r2, [pc, #168]	; (402610 <SystemCoreClockUpdate+0x100>)
  402568:	601a      	str	r2, [r3, #0]
  40256a:	e7e6      	b.n	40253a <SystemCoreClockUpdate+0x2a>
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40256c:	4b27      	ldr	r3, [pc, #156]	; (40260c <SystemCoreClockUpdate+0xfc>)
  40256e:	4a29      	ldr	r2, [pc, #164]	; (402614 <SystemCoreClockUpdate+0x104>)
  402570:	601a      	str	r2, [r3, #0]
			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  402572:	4b24      	ldr	r3, [pc, #144]	; (402604 <SystemCoreClockUpdate+0xf4>)
  402574:	6a1b      	ldr	r3, [r3, #32]
  402576:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40257a:	2b10      	cmp	r3, #16
  40257c:	d005      	beq.n	40258a <SystemCoreClockUpdate+0x7a>
  40257e:	2b20      	cmp	r3, #32
  402580:	d1db      	bne.n	40253a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  402582:	4b22      	ldr	r3, [pc, #136]	; (40260c <SystemCoreClockUpdate+0xfc>)
  402584:	4a22      	ldr	r2, [pc, #136]	; (402610 <SystemCoreClockUpdate+0x100>)
  402586:	601a      	str	r2, [r3, #0]
			break;
  402588:	e7d7      	b.n	40253a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  40258a:	4b20      	ldr	r3, [pc, #128]	; (40260c <SystemCoreClockUpdate+0xfc>)
  40258c:	4a22      	ldr	r2, [pc, #136]	; (402618 <SystemCoreClockUpdate+0x108>)
  40258e:	601a      	str	r2, [r3, #0]
			break;
  402590:	e7d3      	b.n	40253a <SystemCoreClockUpdate+0x2a>
			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  402592:	4b1c      	ldr	r3, [pc, #112]	; (402604 <SystemCoreClockUpdate+0xf4>)
  402594:	6a1b      	ldr	r3, [r3, #32]
  402596:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  40259a:	d018      	beq.n	4025ce <SystemCoreClockUpdate+0xbe>
				SystemCoreClock = CHIP_FREQ_XTAL;
  40259c:	4b1b      	ldr	r3, [pc, #108]	; (40260c <SystemCoreClockUpdate+0xfc>)
  40259e:	4a1c      	ldr	r2, [pc, #112]	; (402610 <SystemCoreClockUpdate+0x100>)
  4025a0:	601a      	str	r2, [r3, #0]
			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
  4025a2:	4b18      	ldr	r3, [pc, #96]	; (402604 <SystemCoreClockUpdate+0xf4>)
  4025a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4025a6:	f003 0303 	and.w	r3, r3, #3
  4025aa:	2b02      	cmp	r3, #2
				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
  4025ac:	4a15      	ldr	r2, [pc, #84]	; (402604 <SystemCoreClockUpdate+0xf4>)
  4025ae:	bf07      	ittee	eq
  4025b0:	6a91      	ldreq	r1, [r2, #40]	; 0x28
				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
  4025b2:	6a92      	ldreq	r2, [r2, #40]	; 0x28
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4025b4:	6ad1      	ldrne	r1, [r2, #44]	; 0x2c
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4025b6:	6ad2      	ldrne	r2, [r2, #44]	; 0x2c
  4025b8:	4814      	ldr	r0, [pc, #80]	; (40260c <SystemCoreClockUpdate+0xfc>)
						>> CKGR_PLLBR_MULB_Pos) + 1U);
  4025ba:	f3c1 410a 	ubfx	r1, r1, #16, #11
				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
  4025be:	6803      	ldr	r3, [r0, #0]
  4025c0:	fb01 3303 	mla	r3, r1, r3, r3
						>> CKGR_PLLBR_DIVB_Pos));
  4025c4:	b2d2      	uxtb	r2, r2
				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
  4025c6:	fbb3 f3f2 	udiv	r3, r3, r2
  4025ca:	6003      	str	r3, [r0, #0]
  4025cc:	e7b5      	b.n	40253a <SystemCoreClockUpdate+0x2a>
				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4025ce:	4b0f      	ldr	r3, [pc, #60]	; (40260c <SystemCoreClockUpdate+0xfc>)
  4025d0:	4a10      	ldr	r2, [pc, #64]	; (402614 <SystemCoreClockUpdate+0x104>)
  4025d2:	601a      	str	r2, [r3, #0]
				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  4025d4:	4b0b      	ldr	r3, [pc, #44]	; (402604 <SystemCoreClockUpdate+0xf4>)
  4025d6:	6a1b      	ldr	r3, [r3, #32]
  4025d8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4025dc:	2b10      	cmp	r3, #16
  4025de:	d005      	beq.n	4025ec <SystemCoreClockUpdate+0xdc>
  4025e0:	2b20      	cmp	r3, #32
  4025e2:	d1de      	bne.n	4025a2 <SystemCoreClockUpdate+0x92>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
  4025e4:	4b09      	ldr	r3, [pc, #36]	; (40260c <SystemCoreClockUpdate+0xfc>)
  4025e6:	4a0a      	ldr	r2, [pc, #40]	; (402610 <SystemCoreClockUpdate+0x100>)
  4025e8:	601a      	str	r2, [r3, #0]
					break;
  4025ea:	e7da      	b.n	4025a2 <SystemCoreClockUpdate+0x92>
					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
  4025ec:	4b07      	ldr	r3, [pc, #28]	; (40260c <SystemCoreClockUpdate+0xfc>)
  4025ee:	4a0a      	ldr	r2, [pc, #40]	; (402618 <SystemCoreClockUpdate+0x108>)
  4025f0:	601a      	str	r2, [r3, #0]
					break;
  4025f2:	e7d6      	b.n	4025a2 <SystemCoreClockUpdate+0x92>
		SystemCoreClock /= 3U;
  4025f4:	4b05      	ldr	r3, [pc, #20]	; (40260c <SystemCoreClockUpdate+0xfc>)
  4025f6:	681b      	ldr	r3, [r3, #0]
  4025f8:	4a08      	ldr	r2, [pc, #32]	; (40261c <SystemCoreClockUpdate+0x10c>)
  4025fa:	fba2 2303 	umull	r2, r3, r2, r3
  4025fe:	085b      	lsrs	r3, r3, #1
  402600:	e7a8      	b.n	402554 <SystemCoreClockUpdate+0x44>
  402602:	bf00      	nop
  402604:	400e0400 	.word	0x400e0400
  402608:	400e1410 	.word	0x400e1410
  40260c:	2000000c 	.word	0x2000000c
  402610:	00b71b00 	.word	0x00b71b00
  402614:	003d0900 	.word	0x003d0900
  402618:	007a1200 	.word	0x007a1200
  40261c:	aaaaaaab 	.word	0xaaaaaaab

00402620 <system_init_flash>:
				}
			}
		}
	}
#else
	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
  402620:	4b1a      	ldr	r3, [pc, #104]	; (40268c <system_init_flash+0x6c>)
  402622:	4298      	cmp	r0, r3
  402624:	d807      	bhi.n	402636 <system_init_flash+0x16>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  402626:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  40262a:	4a19      	ldr	r2, [pc, #100]	; (402690 <system_init_flash+0x70>)
  40262c:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40262e:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402632:	6013      	str	r3, [r2, #0]
  402634:	4770      	bx	lr
	} else {
		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
  402636:	4b17      	ldr	r3, [pc, #92]	; (402694 <system_init_flash+0x74>)
  402638:	4298      	cmp	r0, r3
  40263a:	d806      	bhi.n	40264a <system_init_flash+0x2a>
			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  40263c:	4b16      	ldr	r3, [pc, #88]	; (402698 <system_init_flash+0x78>)
  40263e:	4a14      	ldr	r2, [pc, #80]	; (402690 <system_init_flash+0x70>)
  402640:	6013      	str	r3, [r2, #0]
			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  402642:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402646:	6013      	str	r3, [r2, #0]
  402648:	4770      	bx	lr
		} else {
			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
  40264a:	4b14      	ldr	r3, [pc, #80]	; (40269c <system_init_flash+0x7c>)
  40264c:	4298      	cmp	r0, r3
  40264e:	d806      	bhi.n	40265e <system_init_flash+0x3e>
				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402650:	4b13      	ldr	r3, [pc, #76]	; (4026a0 <system_init_flash+0x80>)
  402652:	4a0f      	ldr	r2, [pc, #60]	; (402690 <system_init_flash+0x70>)
  402654:	6013      	str	r3, [r2, #0]
				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  402656:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40265a:	6013      	str	r3, [r2, #0]
  40265c:	4770      	bx	lr
			} else {
				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
  40265e:	4b11      	ldr	r3, [pc, #68]	; (4026a4 <system_init_flash+0x84>)
  402660:	4298      	cmp	r0, r3
  402662:	d806      	bhi.n	402672 <system_init_flash+0x52>
					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  402664:	4b10      	ldr	r3, [pc, #64]	; (4026a8 <system_init_flash+0x88>)
  402666:	4a0a      	ldr	r2, [pc, #40]	; (402690 <system_init_flash+0x70>)
  402668:	6013      	str	r3, [r2, #0]
					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  40266a:	f502 7200 	add.w	r2, r2, #512	; 0x200
  40266e:	6013      	str	r3, [r2, #0]
  402670:	4770      	bx	lr
				} else {
					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
  402672:	4b0e      	ldr	r3, [pc, #56]	; (4026ac <system_init_flash+0x8c>)
  402674:	4298      	cmp	r0, r3
						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  402676:	bf94      	ite	ls
  402678:	f04f 2304 	movls.w	r3, #67109888	; 0x4000400
						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
					} else {
						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  40267c:	4b0c      	ldrhi	r3, [pc, #48]	; (4026b0 <system_init_flash+0x90>)
  40267e:	4a04      	ldr	r2, [pc, #16]	; (402690 <system_init_flash+0x70>)
  402680:	6013      	str	r3, [r2, #0]
						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  402682:	f502 7200 	add.w	r2, r2, #512	; 0x200
  402686:	6013      	str	r3, [r2, #0]
				}
			}
		}
	}
#endif
}
  402688:	4770      	bx	lr
  40268a:	bf00      	nop
  40268c:	01312cff 	.word	0x01312cff
  402690:	400e0a00 	.word	0x400e0a00
  402694:	026259ff 	.word	0x026259ff
  402698:	04000100 	.word	0x04000100
  40269c:	039386ff 	.word	0x039386ff
  4026a0:	04000200 	.word	0x04000200
  4026a4:	04c4b3ff 	.word	0x04c4b3ff
  4026a8:	04000300 	.word	0x04000300
  4026ac:	05f5e0ff 	.word	0x05f5e0ff
  4026b0:	04000500 	.word	0x04000500

004026b4 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4026b4:	4b09      	ldr	r3, [pc, #36]	; (4026dc <_sbrk+0x28>)
  4026b6:	681b      	ldr	r3, [r3, #0]
  4026b8:	b163      	cbz	r3, 4026d4 <_sbrk+0x20>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4026ba:	4b08      	ldr	r3, [pc, #32]	; (4026dc <_sbrk+0x28>)
  4026bc:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4026be:	1819      	adds	r1, r3, r0
  4026c0:	4a07      	ldr	r2, [pc, #28]	; (4026e0 <_sbrk+0x2c>)
  4026c2:	4291      	cmp	r1, r2
		return (caddr_t) -1;	
	}

	heap += incr;
  4026c4:	bfdd      	ittte	le
  4026c6:	4608      	movle	r0, r1
  4026c8:	4a04      	ldrle	r2, [pc, #16]	; (4026dc <_sbrk+0x28>)
  4026ca:	6010      	strle	r0, [r2, #0]
		return (caddr_t) -1;	
  4026cc:	f04f 33ff 	movgt.w	r3, #4294967295	; 0xffffffff

	return (caddr_t) prev_heap;
}
  4026d0:	4618      	mov	r0, r3
  4026d2:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  4026d4:	4b01      	ldr	r3, [pc, #4]	; (4026dc <_sbrk+0x28>)
  4026d6:	4a03      	ldr	r2, [pc, #12]	; (4026e4 <_sbrk+0x30>)
  4026d8:	601a      	str	r2, [r3, #0]
  4026da:	e7ee      	b.n	4026ba <_sbrk+0x6>
  4026dc:	200004ec 	.word	0x200004ec
  4026e0:	20027ffc 	.word	0x20027ffc
  4026e4:	200038b8 	.word	0x200038b8

004026e8 <_close>:
}

extern int _close(int file)
{
	return -1;
}
  4026e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  4026ec:	4770      	bx	lr

004026ee <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
  4026ee:	f44f 5300 	mov.w	r3, #8192	; 0x2000
  4026f2:	604b      	str	r3, [r1, #4]

	return 0;
}
  4026f4:	2000      	movs	r0, #0
  4026f6:	4770      	bx	lr

004026f8 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
  4026f8:	2001      	movs	r0, #1
  4026fa:	4770      	bx	lr

004026fc <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
  4026fc:	2000      	movs	r0, #0
  4026fe:	4770      	bx	lr

00402700 <atan2>:
  402700:	f000 b862 	b.w	4027c8 <__ieee754_atan2>

00402704 <sqrt>:
  402704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402708:	b08b      	sub	sp, #44	; 0x2c
  40270a:	4604      	mov	r4, r0
  40270c:	460d      	mov	r5, r1
  40270e:	f000 f935 	bl	40297c <__ieee754_sqrt>
  402712:	4b2a      	ldr	r3, [pc, #168]	; (4027bc <sqrt+0xb8>)
  402714:	f993 a000 	ldrsb.w	sl, [r3]
  402718:	f1ba 3fff 	cmp.w	sl, #4294967295	; 0xffffffff
  40271c:	4606      	mov	r6, r0
  40271e:	460f      	mov	r7, r1
  402720:	d012      	beq.n	402748 <sqrt+0x44>
  402722:	4622      	mov	r2, r4
  402724:	462b      	mov	r3, r5
  402726:	4620      	mov	r0, r4
  402728:	4629      	mov	r1, r5
  40272a:	f005 f82d 	bl	407788 <__aeabi_dcmpun>
  40272e:	4683      	mov	fp, r0
  402730:	b950      	cbnz	r0, 402748 <sqrt+0x44>
  402732:	f04f 0800 	mov.w	r8, #0
  402736:	f04f 0900 	mov.w	r9, #0
  40273a:	4642      	mov	r2, r8
  40273c:	464b      	mov	r3, r9
  40273e:	4620      	mov	r0, r4
  402740:	4629      	mov	r1, r5
  402742:	f004 fff9 	bl	407738 <__aeabi_dcmplt>
  402746:	b920      	cbnz	r0, 402752 <sqrt+0x4e>
  402748:	4630      	mov	r0, r6
  40274a:	4639      	mov	r1, r7
  40274c:	b00b      	add	sp, #44	; 0x2c
  40274e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402752:	2201      	movs	r2, #1
  402754:	4b1a      	ldr	r3, [pc, #104]	; (4027c0 <sqrt+0xbc>)
  402756:	f8cd b020 	str.w	fp, [sp, #32]
  40275a:	9200      	str	r2, [sp, #0]
  40275c:	e9cd 4504 	strd	r4, r5, [sp, #16]
  402760:	e9cd 4502 	strd	r4, r5, [sp, #8]
  402764:	9301      	str	r3, [sp, #4]
  402766:	f1ba 0f00 	cmp.w	sl, #0
  40276a:	d017      	beq.n	40279c <sqrt+0x98>
  40276c:	4642      	mov	r2, r8
  40276e:	464b      	mov	r3, r9
  402770:	4640      	mov	r0, r8
  402772:	4649      	mov	r1, r9
  402774:	f004 fe98 	bl	4074a8 <__aeabi_ddiv>
  402778:	f1ba 0f02 	cmp.w	sl, #2
  40277c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  402780:	d10e      	bne.n	4027a0 <sqrt+0x9c>
  402782:	f000 fb55 	bl	402e30 <__errno>
  402786:	2321      	movs	r3, #33	; 0x21
  402788:	6003      	str	r3, [r0, #0]
  40278a:	9b08      	ldr	r3, [sp, #32]
  40278c:	b983      	cbnz	r3, 4027b0 <sqrt+0xac>
  40278e:	e9dd 6706 	ldrd	r6, r7, [sp, #24]
  402792:	4630      	mov	r0, r6
  402794:	4639      	mov	r1, r7
  402796:	b00b      	add	sp, #44	; 0x2c
  402798:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40279c:	e9cd 8906 	strd	r8, r9, [sp, #24]
  4027a0:	4668      	mov	r0, sp
  4027a2:	f000 fb3b 	bl	402e1c <matherr>
  4027a6:	2800      	cmp	r0, #0
  4027a8:	d0eb      	beq.n	402782 <sqrt+0x7e>
  4027aa:	9b08      	ldr	r3, [sp, #32]
  4027ac:	2b00      	cmp	r3, #0
  4027ae:	d0ee      	beq.n	40278e <sqrt+0x8a>
  4027b0:	f000 fb3e 	bl	402e30 <__errno>
  4027b4:	9b08      	ldr	r3, [sp, #32]
  4027b6:	6003      	str	r3, [r0, #0]
  4027b8:	e7e9      	b.n	40278e <sqrt+0x8a>
  4027ba:	bf00      	nop
  4027bc:	20000010 	.word	0x20000010
  4027c0:	004083a8 	.word	0x004083a8
  4027c4:	00000000 	.word	0x00000000

004027c8 <__ieee754_atan2>:
  4027c8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4027cc:	4254      	negs	r4, r2
  4027ce:	4314      	orrs	r4, r2
  4027d0:	f023 4800 	bic.w	r8, r3, #2147483648	; 0x80000000
  4027d4:	4e68      	ldr	r6, [pc, #416]	; (402978 <__ieee754_atan2+0x1b0>)
  4027d6:	ea48 74d4 	orr.w	r4, r8, r4, lsr #31
  4027da:	42b4      	cmp	r4, r6
  4027dc:	4684      	mov	ip, r0
  4027de:	460f      	mov	r7, r1
  4027e0:	d81f      	bhi.n	402822 <__ieee754_atan2+0x5a>
  4027e2:	4244      	negs	r4, r0
  4027e4:	4304      	orrs	r4, r0
  4027e6:	f021 4a00 	bic.w	sl, r1, #2147483648	; 0x80000000
  4027ea:	ea4a 74d4 	orr.w	r4, sl, r4, lsr #31
  4027ee:	42b4      	cmp	r4, r6
  4027f0:	468b      	mov	fp, r1
  4027f2:	d816      	bhi.n	402822 <__ieee754_atan2+0x5a>
  4027f4:	f103 4440 	add.w	r4, r3, #3221225472	; 0xc0000000
  4027f8:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
  4027fc:	4314      	orrs	r4, r2
  4027fe:	469e      	mov	lr, r3
  402800:	d047      	beq.n	402892 <__ieee754_atan2+0xca>
  402802:	179c      	asrs	r4, r3, #30
  402804:	f004 0402 	and.w	r4, r4, #2
  402808:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
  40280c:	ea5a 0100 	orrs.w	r1, sl, r0
  402810:	d10f      	bne.n	402832 <__ieee754_atan2+0x6a>
  402812:	2c02      	cmp	r4, #2
  402814:	d041      	beq.n	40289a <__ieee754_atan2+0xd2>
  402816:	2c03      	cmp	r4, #3
  402818:	d138      	bne.n	40288c <__ieee754_atan2+0xc4>
  40281a:	a145      	add	r1, pc, #276	; (adr r1, 402930 <__ieee754_atan2+0x168>)
  40281c:	e9d1 0100 	ldrd	r0, r1, [r1]
  402820:	e005      	b.n	40282e <__ieee754_atan2+0x66>
  402822:	4610      	mov	r0, r2
  402824:	4619      	mov	r1, r3
  402826:	4662      	mov	r2, ip
  402828:	463b      	mov	r3, r7
  40282a:	f004 fb5d 	bl	406ee8 <__adddf3>
  40282e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402832:	ea58 0102 	orrs.w	r1, r8, r2
  402836:	d022      	beq.n	40287e <__ieee754_atan2+0xb6>
  402838:	45b0      	cmp	r8, r6
  40283a:	d036      	beq.n	4028aa <__ieee754_atan2+0xe2>
  40283c:	45b2      	cmp	sl, r6
  40283e:	d01e      	beq.n	40287e <__ieee754_atan2+0xb6>
  402840:	ebaa 0808 	sub.w	r8, sl, r8
  402844:	ea4f 5828 	mov.w	r8, r8, asr #20
  402848:	f1b8 0f3c 	cmp.w	r8, #60	; 0x3c
  40284c:	dc29      	bgt.n	4028a2 <__ieee754_atan2+0xda>
  40284e:	2b00      	cmp	r3, #0
  402850:	da3b      	bge.n	4028ca <__ieee754_atan2+0x102>
  402852:	f118 0f3c 	cmn.w	r8, #60	; 0x3c
  402856:	da38      	bge.n	4028ca <__ieee754_atan2+0x102>
  402858:	2000      	movs	r0, #0
  40285a:	2100      	movs	r1, #0
  40285c:	2c01      	cmp	r4, #1
  40285e:	d04a      	beq.n	4028f6 <__ieee754_atan2+0x12e>
  402860:	2c02      	cmp	r4, #2
  402862:	d03b      	beq.n	4028dc <__ieee754_atan2+0x114>
  402864:	2c00      	cmp	r4, #0
  402866:	d0e2      	beq.n	40282e <__ieee754_atan2+0x66>
  402868:	a333      	add	r3, pc, #204	; (adr r3, 402938 <__ieee754_atan2+0x170>)
  40286a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40286e:	f004 fb39 	bl	406ee4 <__aeabi_dsub>
  402872:	a333      	add	r3, pc, #204	; (adr r3, 402940 <__ieee754_atan2+0x178>)
  402874:	e9d3 2300 	ldrd	r2, r3, [r3]
  402878:	f004 fb34 	bl	406ee4 <__aeabi_dsub>
  40287c:	e7d7      	b.n	40282e <__ieee754_atan2+0x66>
  40287e:	f1bb 0f00 	cmp.w	fp, #0
  402882:	db1e      	blt.n	4028c2 <__ieee754_atan2+0xfa>
  402884:	a130      	add	r1, pc, #192	; (adr r1, 402948 <__ieee754_atan2+0x180>)
  402886:	e9d1 0100 	ldrd	r0, r1, [r1]
  40288a:	e7d0      	b.n	40282e <__ieee754_atan2+0x66>
  40288c:	4639      	mov	r1, r7
  40288e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402892:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402896:	f000 b933 	b.w	402b00 <atan>
  40289a:	a129      	add	r1, pc, #164	; (adr r1, 402940 <__ieee754_atan2+0x178>)
  40289c:	e9d1 0100 	ldrd	r0, r1, [r1]
  4028a0:	e7c5      	b.n	40282e <__ieee754_atan2+0x66>
  4028a2:	a129      	add	r1, pc, #164	; (adr r1, 402948 <__ieee754_atan2+0x180>)
  4028a4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4028a8:	e7d8      	b.n	40285c <__ieee754_atan2+0x94>
  4028aa:	45c2      	cmp	sl, r8
  4028ac:	d027      	beq.n	4028fe <__ieee754_atan2+0x136>
  4028ae:	2c02      	cmp	r4, #2
  4028b0:	d0f3      	beq.n	40289a <__ieee754_atan2+0xd2>
  4028b2:	2c03      	cmp	r4, #3
  4028b4:	d0b1      	beq.n	40281a <__ieee754_atan2+0x52>
  4028b6:	2c01      	cmp	r4, #1
  4028b8:	f04f 0000 	mov.w	r0, #0
  4028bc:	d029      	beq.n	402912 <__ieee754_atan2+0x14a>
  4028be:	2100      	movs	r1, #0
  4028c0:	e7b5      	b.n	40282e <__ieee754_atan2+0x66>
  4028c2:	a123      	add	r1, pc, #140	; (adr r1, 402950 <__ieee754_atan2+0x188>)
  4028c4:	e9d1 0100 	ldrd	r0, r1, [r1]
  4028c8:	e7b1      	b.n	40282e <__ieee754_atan2+0x66>
  4028ca:	4660      	mov	r0, ip
  4028cc:	4639      	mov	r1, r7
  4028ce:	f004 fdeb 	bl	4074a8 <__aeabi_ddiv>
  4028d2:	f000 fa9f 	bl	402e14 <fabs>
  4028d6:	f000 f913 	bl	402b00 <atan>
  4028da:	e7bf      	b.n	40285c <__ieee754_atan2+0x94>
  4028dc:	a316      	add	r3, pc, #88	; (adr r3, 402938 <__ieee754_atan2+0x170>)
  4028de:	e9d3 2300 	ldrd	r2, r3, [r3]
  4028e2:	f004 faff 	bl	406ee4 <__aeabi_dsub>
  4028e6:	4602      	mov	r2, r0
  4028e8:	460b      	mov	r3, r1
  4028ea:	a115      	add	r1, pc, #84	; (adr r1, 402940 <__ieee754_atan2+0x178>)
  4028ec:	e9d1 0100 	ldrd	r0, r1, [r1]
  4028f0:	f004 faf8 	bl	406ee4 <__aeabi_dsub>
  4028f4:	e79b      	b.n	40282e <__ieee754_atan2+0x66>
  4028f6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  4028fa:	4619      	mov	r1, r3
  4028fc:	e797      	b.n	40282e <__ieee754_atan2+0x66>
  4028fe:	2c02      	cmp	r4, #2
  402900:	d012      	beq.n	402928 <__ieee754_atan2+0x160>
  402902:	2c03      	cmp	r4, #3
  402904:	d00c      	beq.n	402920 <__ieee754_atan2+0x158>
  402906:	2c01      	cmp	r4, #1
  402908:	d006      	beq.n	402918 <__ieee754_atan2+0x150>
  40290a:	a113      	add	r1, pc, #76	; (adr r1, 402958 <__ieee754_atan2+0x190>)
  40290c:	e9d1 0100 	ldrd	r0, r1, [r1]
  402910:	e78d      	b.n	40282e <__ieee754_atan2+0x66>
  402912:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  402916:	e78a      	b.n	40282e <__ieee754_atan2+0x66>
  402918:	a111      	add	r1, pc, #68	; (adr r1, 402960 <__ieee754_atan2+0x198>)
  40291a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40291e:	e786      	b.n	40282e <__ieee754_atan2+0x66>
  402920:	a111      	add	r1, pc, #68	; (adr r1, 402968 <__ieee754_atan2+0x1a0>)
  402922:	e9d1 0100 	ldrd	r0, r1, [r1]
  402926:	e782      	b.n	40282e <__ieee754_atan2+0x66>
  402928:	a111      	add	r1, pc, #68	; (adr r1, 402970 <__ieee754_atan2+0x1a8>)
  40292a:	e9d1 0100 	ldrd	r0, r1, [r1]
  40292e:	e77e      	b.n	40282e <__ieee754_atan2+0x66>
  402930:	54442d18 	.word	0x54442d18
  402934:	c00921fb 	.word	0xc00921fb
  402938:	33145c07 	.word	0x33145c07
  40293c:	3ca1a626 	.word	0x3ca1a626
  402940:	54442d18 	.word	0x54442d18
  402944:	400921fb 	.word	0x400921fb
  402948:	54442d18 	.word	0x54442d18
  40294c:	3ff921fb 	.word	0x3ff921fb
  402950:	54442d18 	.word	0x54442d18
  402954:	bff921fb 	.word	0xbff921fb
  402958:	54442d18 	.word	0x54442d18
  40295c:	3fe921fb 	.word	0x3fe921fb
  402960:	54442d18 	.word	0x54442d18
  402964:	bfe921fb 	.word	0xbfe921fb
  402968:	7f3321d2 	.word	0x7f3321d2
  40296c:	c002d97c 	.word	0xc002d97c
  402970:	7f3321d2 	.word	0x7f3321d2
  402974:	4002d97c 	.word	0x4002d97c
  402978:	7ff00000 	.word	0x7ff00000

0040297c <__ieee754_sqrt>:
  40297c:	4a5f      	ldr	r2, [pc, #380]	; (402afc <__ieee754_sqrt+0x180>)
  40297e:	438a      	bics	r2, r1
  402980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  402984:	460d      	mov	r5, r1
  402986:	4606      	mov	r6, r0
  402988:	f000 809a 	beq.w	402ac0 <__ieee754_sqrt+0x144>
  40298c:	2900      	cmp	r1, #0
  40298e:	460b      	mov	r3, r1
  402990:	4604      	mov	r4, r0
  402992:	dd53      	ble.n	402a3c <__ieee754_sqrt+0xc0>
  402994:	ea5f 5c21 	movs.w	ip, r1, asr #20
  402998:	f000 80a7 	beq.w	402aea <__ieee754_sqrt+0x16e>
  40299c:	f3c3 0313 	ubfx	r3, r3, #0, #20
  4029a0:	f2ac 3cff 	subw	ip, ip, #1023	; 0x3ff
  4029a4:	0fe2      	lsrs	r2, r4, #31
  4029a6:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  4029aa:	f01c 0f01 	tst.w	ip, #1
  4029ae:	eb02 0343 	add.w	r3, r2, r3, lsl #1
  4029b2:	ea4f 0244 	mov.w	r2, r4, lsl #1
  4029b6:	d003      	beq.n	4029c0 <__ieee754_sqrt+0x44>
  4029b8:	0fd2      	lsrs	r2, r2, #31
  4029ba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
  4029be:	00a2      	lsls	r2, r4, #2
  4029c0:	2700      	movs	r7, #0
  4029c2:	ea4f 0c6c 	mov.w	ip, ip, asr #1
  4029c6:	4638      	mov	r0, r7
  4029c8:	2116      	movs	r1, #22
  4029ca:	f44f 1400 	mov.w	r4, #2097152	; 0x200000
  4029ce:	1905      	adds	r5, r0, r4
  4029d0:	429d      	cmp	r5, r3
  4029d2:	dc02      	bgt.n	4029da <__ieee754_sqrt+0x5e>
  4029d4:	1b5b      	subs	r3, r3, r5
  4029d6:	1928      	adds	r0, r5, r4
  4029d8:	4427      	add	r7, r4
  4029da:	005b      	lsls	r3, r3, #1
  4029dc:	3901      	subs	r1, #1
  4029de:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
  4029e2:	ea4f 0454 	mov.w	r4, r4, lsr #1
  4029e6:	ea4f 0242 	mov.w	r2, r2, lsl #1
  4029ea:	d1f0      	bne.n	4029ce <__ieee754_sqrt+0x52>
  4029ec:	460d      	mov	r5, r1
  4029ee:	468e      	mov	lr, r1
  4029f0:	2620      	movs	r6, #32
  4029f2:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4029f6:	e009      	b.n	402a0c <__ieee754_sqrt+0x90>
  4029f8:	d042      	beq.n	402a80 <__ieee754_sqrt+0x104>
  4029fa:	0fd4      	lsrs	r4, r2, #31
  4029fc:	3e01      	subs	r6, #1
  4029fe:	ea4f 0151 	mov.w	r1, r1, lsr #1
  402a02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
  402a06:	ea4f 0242 	mov.w	r2, r2, lsl #1
  402a0a:	d042      	beq.n	402a92 <__ieee754_sqrt+0x116>
  402a0c:	4283      	cmp	r3, r0
  402a0e:	eb01 040e 	add.w	r4, r1, lr
  402a12:	ddf1      	ble.n	4029f8 <__ieee754_sqrt+0x7c>
  402a14:	2c00      	cmp	r4, #0
  402a16:	eb04 0e01 	add.w	lr, r4, r1
  402a1a:	db09      	blt.n	402a30 <__ieee754_sqrt+0xb4>
  402a1c:	4680      	mov	r8, r0
  402a1e:	1a1b      	subs	r3, r3, r0
  402a20:	4294      	cmp	r4, r2
  402a22:	bf88      	it	hi
  402a24:	f103 33ff 	addhi.w	r3, r3, #4294967295	; 0xffffffff
  402a28:	1b12      	subs	r2, r2, r4
  402a2a:	440d      	add	r5, r1
  402a2c:	4640      	mov	r0, r8
  402a2e:	e7e4      	b.n	4029fa <__ieee754_sqrt+0x7e>
  402a30:	f1be 0f00 	cmp.w	lr, #0
  402a34:	dbf2      	blt.n	402a1c <__ieee754_sqrt+0xa0>
  402a36:	f100 0801 	add.w	r8, r0, #1
  402a3a:	e7f0      	b.n	402a1e <__ieee754_sqrt+0xa2>
  402a3c:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
  402a40:	4302      	orrs	r2, r0
  402a42:	d034      	beq.n	402aae <__ieee754_sqrt+0x132>
  402a44:	2900      	cmp	r1, #0
  402a46:	d147      	bne.n	402ad8 <__ieee754_sqrt+0x15c>
  402a48:	0ae0      	lsrs	r0, r4, #11
  402a4a:	3b15      	subs	r3, #21
  402a4c:	0564      	lsls	r4, r4, #21
  402a4e:	4602      	mov	r2, r0
  402a50:	2800      	cmp	r0, #0
  402a52:	d0f9      	beq.n	402a48 <__ieee754_sqrt+0xcc>
  402a54:	02c5      	lsls	r5, r0, #11
  402a56:	d44b      	bmi.n	402af0 <__ieee754_sqrt+0x174>
  402a58:	2100      	movs	r1, #0
  402a5a:	e000      	b.n	402a5e <__ieee754_sqrt+0xe2>
  402a5c:	4629      	mov	r1, r5
  402a5e:	0052      	lsls	r2, r2, #1
  402a60:	02d0      	lsls	r0, r2, #11
  402a62:	f101 0501 	add.w	r5, r1, #1
  402a66:	d5f9      	bpl.n	402a5c <__ieee754_sqrt+0xe0>
  402a68:	4610      	mov	r0, r2
  402a6a:	4622      	mov	r2, r4
  402a6c:	40ac      	lsls	r4, r5
  402a6e:	f1c5 0520 	rsb	r5, r5, #32
  402a72:	fa22 f505 	lsr.w	r5, r2, r5
  402a76:	eba3 0c01 	sub.w	ip, r3, r1
  402a7a:	ea45 0300 	orr.w	r3, r5, r0
  402a7e:	e78d      	b.n	40299c <__ieee754_sqrt+0x20>
  402a80:	4294      	cmp	r4, r2
  402a82:	d8ba      	bhi.n	4029fa <__ieee754_sqrt+0x7e>
  402a84:	2c00      	cmp	r4, #0
  402a86:	eb04 0e01 	add.w	lr, r4, r1
  402a8a:	dbd1      	blt.n	402a30 <__ieee754_sqrt+0xb4>
  402a8c:	4698      	mov	r8, r3
  402a8e:	2300      	movs	r3, #0
  402a90:	e7ca      	b.n	402a28 <__ieee754_sqrt+0xac>
  402a92:	4313      	orrs	r3, r2
  402a94:	d10e      	bne.n	402ab4 <__ieee754_sqrt+0x138>
  402a96:	086e      	lsrs	r6, r5, #1
  402a98:	107b      	asrs	r3, r7, #1
  402a9a:	f103 537f 	add.w	r3, r3, #1069547520	; 0x3fc00000
  402a9e:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
  402aa2:	07fa      	lsls	r2, r7, #31
  402aa4:	bf48      	it	mi
  402aa6:	f046 4600 	orrmi.w	r6, r6, #2147483648	; 0x80000000
  402aaa:	eb03 510c 	add.w	r1, r3, ip, lsl #20
  402aae:	4630      	mov	r0, r6
  402ab0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402ab4:	1c69      	adds	r1, r5, #1
  402ab6:	bf16      	itet	ne
  402ab8:	1c69      	addne	r1, r5, #1
  402aba:	3701      	addeq	r7, #1
  402abc:	084e      	lsrne	r6, r1, #1
  402abe:	e7eb      	b.n	402a98 <__ieee754_sqrt+0x11c>
  402ac0:	4602      	mov	r2, r0
  402ac2:	460b      	mov	r3, r1
  402ac4:	f004 fbc6 	bl	407254 <__aeabi_dmul>
  402ac8:	4632      	mov	r2, r6
  402aca:	462b      	mov	r3, r5
  402acc:	f004 fa0c 	bl	406ee8 <__adddf3>
  402ad0:	4606      	mov	r6, r0
  402ad2:	4630      	mov	r0, r6
  402ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  402ad8:	4602      	mov	r2, r0
  402ada:	f004 fa03 	bl	406ee4 <__aeabi_dsub>
  402ade:	4602      	mov	r2, r0
  402ae0:	460b      	mov	r3, r1
  402ae2:	f004 fce1 	bl	4074a8 <__aeabi_ddiv>
  402ae6:	4606      	mov	r6, r0
  402ae8:	e7e1      	b.n	402aae <__ieee754_sqrt+0x132>
  402aea:	460a      	mov	r2, r1
  402aec:	4663      	mov	r3, ip
  402aee:	e7b3      	b.n	402a58 <__ieee754_sqrt+0xdc>
  402af0:	4622      	mov	r2, r4
  402af2:	2520      	movs	r5, #32
  402af4:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
  402af8:	e7bb      	b.n	402a72 <__ieee754_sqrt+0xf6>
  402afa:	bf00      	nop
  402afc:	7ff00000 	.word	0x7ff00000

00402b00 <atan>:
  402b00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402b04:	4bb6      	ldr	r3, [pc, #728]	; (402de0 <atan+0x2e0>)
  402b06:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
  402b0a:	429e      	cmp	r6, r3
  402b0c:	460d      	mov	r5, r1
  402b0e:	468a      	mov	sl, r1
  402b10:	4604      	mov	r4, r0
  402b12:	dd16      	ble.n	402b42 <atan+0x42>
  402b14:	4bb3      	ldr	r3, [pc, #716]	; (402de4 <atan+0x2e4>)
  402b16:	429e      	cmp	r6, r3
  402b18:	dc0b      	bgt.n	402b32 <atan+0x32>
  402b1a:	d008      	beq.n	402b2e <atan+0x2e>
  402b1c:	49b2      	ldr	r1, [pc, #712]	; (402de8 <atan+0x2e8>)
  402b1e:	4bb3      	ldr	r3, [pc, #716]	; (402dec <atan+0x2ec>)
  402b20:	48b3      	ldr	r0, [pc, #716]	; (402df0 <atan+0x2f0>)
  402b22:	f1ba 0f00 	cmp.w	sl, #0
  402b26:	bfd8      	it	le
  402b28:	4619      	movle	r1, r3
  402b2a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402b2e:	2800      	cmp	r0, #0
  402b30:	d0f4      	beq.n	402b1c <atan+0x1c>
  402b32:	4622      	mov	r2, r4
  402b34:	4620      	mov	r0, r4
  402b36:	462b      	mov	r3, r5
  402b38:	4629      	mov	r1, r5
  402b3a:	f004 f9d5 	bl	406ee8 <__adddf3>
  402b3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402b42:	4bac      	ldr	r3, [pc, #688]	; (402df4 <atan+0x2f4>)
  402b44:	429e      	cmp	r6, r3
  402b46:	f300 80b4 	bgt.w	402cb2 <atan+0x1b2>
  402b4a:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
  402b4e:	429e      	cmp	r6, r3
  402b50:	f340 809a 	ble.w	402c88 <atan+0x188>
  402b54:	f04f 3bff 	mov.w	fp, #4294967295	; 0xffffffff
  402b58:	4622      	mov	r2, r4
  402b5a:	462b      	mov	r3, r5
  402b5c:	4620      	mov	r0, r4
  402b5e:	4629      	mov	r1, r5
  402b60:	f004 fb78 	bl	407254 <__aeabi_dmul>
  402b64:	4602      	mov	r2, r0
  402b66:	460b      	mov	r3, r1
  402b68:	4680      	mov	r8, r0
  402b6a:	4689      	mov	r9, r1
  402b6c:	f004 fb72 	bl	407254 <__aeabi_dmul>
  402b70:	a383      	add	r3, pc, #524	; (adr r3, 402d80 <atan+0x280>)
  402b72:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b76:	4606      	mov	r6, r0
  402b78:	460f      	mov	r7, r1
  402b7a:	f004 fb6b 	bl	407254 <__aeabi_dmul>
  402b7e:	a382      	add	r3, pc, #520	; (adr r3, 402d88 <atan+0x288>)
  402b80:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b84:	f004 f9b0 	bl	406ee8 <__adddf3>
  402b88:	4632      	mov	r2, r6
  402b8a:	463b      	mov	r3, r7
  402b8c:	f004 fb62 	bl	407254 <__aeabi_dmul>
  402b90:	a37f      	add	r3, pc, #508	; (adr r3, 402d90 <atan+0x290>)
  402b92:	e9d3 2300 	ldrd	r2, r3, [r3]
  402b96:	f004 f9a7 	bl	406ee8 <__adddf3>
  402b9a:	4632      	mov	r2, r6
  402b9c:	463b      	mov	r3, r7
  402b9e:	f004 fb59 	bl	407254 <__aeabi_dmul>
  402ba2:	a37d      	add	r3, pc, #500	; (adr r3, 402d98 <atan+0x298>)
  402ba4:	e9d3 2300 	ldrd	r2, r3, [r3]
  402ba8:	f004 f99e 	bl	406ee8 <__adddf3>
  402bac:	4632      	mov	r2, r6
  402bae:	463b      	mov	r3, r7
  402bb0:	f004 fb50 	bl	407254 <__aeabi_dmul>
  402bb4:	a37a      	add	r3, pc, #488	; (adr r3, 402da0 <atan+0x2a0>)
  402bb6:	e9d3 2300 	ldrd	r2, r3, [r3]
  402bba:	f004 f995 	bl	406ee8 <__adddf3>
  402bbe:	4632      	mov	r2, r6
  402bc0:	463b      	mov	r3, r7
  402bc2:	f004 fb47 	bl	407254 <__aeabi_dmul>
  402bc6:	a378      	add	r3, pc, #480	; (adr r3, 402da8 <atan+0x2a8>)
  402bc8:	e9d3 2300 	ldrd	r2, r3, [r3]
  402bcc:	f004 f98c 	bl	406ee8 <__adddf3>
  402bd0:	4642      	mov	r2, r8
  402bd2:	464b      	mov	r3, r9
  402bd4:	f004 fb3e 	bl	407254 <__aeabi_dmul>
  402bd8:	a375      	add	r3, pc, #468	; (adr r3, 402db0 <atan+0x2b0>)
  402bda:	e9d3 2300 	ldrd	r2, r3, [r3]
  402bde:	4680      	mov	r8, r0
  402be0:	4689      	mov	r9, r1
  402be2:	4630      	mov	r0, r6
  402be4:	4639      	mov	r1, r7
  402be6:	f004 fb35 	bl	407254 <__aeabi_dmul>
  402bea:	a373      	add	r3, pc, #460	; (adr r3, 402db8 <atan+0x2b8>)
  402bec:	e9d3 2300 	ldrd	r2, r3, [r3]
  402bf0:	f004 f978 	bl	406ee4 <__aeabi_dsub>
  402bf4:	4632      	mov	r2, r6
  402bf6:	463b      	mov	r3, r7
  402bf8:	f004 fb2c 	bl	407254 <__aeabi_dmul>
  402bfc:	a370      	add	r3, pc, #448	; (adr r3, 402dc0 <atan+0x2c0>)
  402bfe:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c02:	f004 f96f 	bl	406ee4 <__aeabi_dsub>
  402c06:	4632      	mov	r2, r6
  402c08:	463b      	mov	r3, r7
  402c0a:	f004 fb23 	bl	407254 <__aeabi_dmul>
  402c0e:	a36e      	add	r3, pc, #440	; (adr r3, 402dc8 <atan+0x2c8>)
  402c10:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c14:	f004 f966 	bl	406ee4 <__aeabi_dsub>
  402c18:	4632      	mov	r2, r6
  402c1a:	463b      	mov	r3, r7
  402c1c:	f004 fb1a 	bl	407254 <__aeabi_dmul>
  402c20:	a36b      	add	r3, pc, #428	; (adr r3, 402dd0 <atan+0x2d0>)
  402c22:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c26:	f004 f95d 	bl	406ee4 <__aeabi_dsub>
  402c2a:	4632      	mov	r2, r6
  402c2c:	463b      	mov	r3, r7
  402c2e:	f004 fb11 	bl	407254 <__aeabi_dmul>
  402c32:	4602      	mov	r2, r0
  402c34:	460b      	mov	r3, r1
  402c36:	4640      	mov	r0, r8
  402c38:	4649      	mov	r1, r9
  402c3a:	f004 f955 	bl	406ee8 <__adddf3>
  402c3e:	4622      	mov	r2, r4
  402c40:	462b      	mov	r3, r5
  402c42:	f004 fb07 	bl	407254 <__aeabi_dmul>
  402c46:	f1bb 3fff 	cmp.w	fp, #4294967295	; 0xffffffff
  402c4a:	4602      	mov	r2, r0
  402c4c:	460b      	mov	r3, r1
  402c4e:	d02a      	beq.n	402ca6 <atan+0x1a6>
  402c50:	4b69      	ldr	r3, [pc, #420]	; (402df8 <atan+0x2f8>)
  402c52:	4e6a      	ldr	r6, [pc, #424]	; (402dfc <atan+0x2fc>)
  402c54:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
  402c58:	445b      	add	r3, fp
  402c5a:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c5e:	f004 f941 	bl	406ee4 <__aeabi_dsub>
  402c62:	4622      	mov	r2, r4
  402c64:	462b      	mov	r3, r5
  402c66:	f004 f93d 	bl	406ee4 <__aeabi_dsub>
  402c6a:	44b3      	add	fp, r6
  402c6c:	4602      	mov	r2, r0
  402c6e:	460b      	mov	r3, r1
  402c70:	e9db 0100 	ldrd	r0, r1, [fp]
  402c74:	f004 f936 	bl	406ee4 <__aeabi_dsub>
  402c78:	f1ba 0f00 	cmp.w	sl, #0
  402c7c:	f6bf af55 	bge.w	402b2a <atan+0x2a>
  402c80:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
  402c84:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402c88:	a353      	add	r3, pc, #332	; (adr r3, 402dd8 <atan+0x2d8>)
  402c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
  402c8e:	f004 f92b 	bl	406ee8 <__adddf3>
  402c92:	2200      	movs	r2, #0
  402c94:	4b5a      	ldr	r3, [pc, #360]	; (402e00 <atan+0x300>)
  402c96:	f004 fd6d 	bl	407774 <__aeabi_dcmpgt>
  402c9a:	2800      	cmp	r0, #0
  402c9c:	f43f af5a 	beq.w	402b54 <atan+0x54>
  402ca0:	4620      	mov	r0, r4
  402ca2:	4629      	mov	r1, r5
  402ca4:	e741      	b.n	402b2a <atan+0x2a>
  402ca6:	4620      	mov	r0, r4
  402ca8:	4629      	mov	r1, r5
  402caa:	f004 f91b 	bl	406ee4 <__aeabi_dsub>
  402cae:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  402cb2:	f000 f8af 	bl	402e14 <fabs>
  402cb6:	4b53      	ldr	r3, [pc, #332]	; (402e04 <atan+0x304>)
  402cb8:	429e      	cmp	r6, r3
  402cba:	4604      	mov	r4, r0
  402cbc:	460d      	mov	r5, r1
  402cbe:	dc1f      	bgt.n	402d00 <atan+0x200>
  402cc0:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
  402cc4:	429e      	cmp	r6, r3
  402cc6:	dc44      	bgt.n	402d52 <atan+0x252>
  402cc8:	4602      	mov	r2, r0
  402cca:	460b      	mov	r3, r1
  402ccc:	f004 f90c 	bl	406ee8 <__adddf3>
  402cd0:	2200      	movs	r2, #0
  402cd2:	4b4b      	ldr	r3, [pc, #300]	; (402e00 <atan+0x300>)
  402cd4:	f004 f906 	bl	406ee4 <__aeabi_dsub>
  402cd8:	2200      	movs	r2, #0
  402cda:	4606      	mov	r6, r0
  402cdc:	460f      	mov	r7, r1
  402cde:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  402ce2:	4620      	mov	r0, r4
  402ce4:	4629      	mov	r1, r5
  402ce6:	f004 f8ff 	bl	406ee8 <__adddf3>
  402cea:	4602      	mov	r2, r0
  402cec:	460b      	mov	r3, r1
  402cee:	4630      	mov	r0, r6
  402cf0:	4639      	mov	r1, r7
  402cf2:	f004 fbd9 	bl	4074a8 <__aeabi_ddiv>
  402cf6:	f04f 0b00 	mov.w	fp, #0
  402cfa:	4604      	mov	r4, r0
  402cfc:	460d      	mov	r5, r1
  402cfe:	e72b      	b.n	402b58 <atan+0x58>
  402d00:	4b41      	ldr	r3, [pc, #260]	; (402e08 <atan+0x308>)
  402d02:	429e      	cmp	r6, r3
  402d04:	dc1a      	bgt.n	402d3c <atan+0x23c>
  402d06:	2200      	movs	r2, #0
  402d08:	4b40      	ldr	r3, [pc, #256]	; (402e0c <atan+0x30c>)
  402d0a:	f004 f8eb 	bl	406ee4 <__aeabi_dsub>
  402d0e:	2200      	movs	r2, #0
  402d10:	4606      	mov	r6, r0
  402d12:	460f      	mov	r7, r1
  402d14:	4b3d      	ldr	r3, [pc, #244]	; (402e0c <atan+0x30c>)
  402d16:	4620      	mov	r0, r4
  402d18:	4629      	mov	r1, r5
  402d1a:	f004 fa9b 	bl	407254 <__aeabi_dmul>
  402d1e:	2200      	movs	r2, #0
  402d20:	4b37      	ldr	r3, [pc, #220]	; (402e00 <atan+0x300>)
  402d22:	f004 f8e1 	bl	406ee8 <__adddf3>
  402d26:	4602      	mov	r2, r0
  402d28:	460b      	mov	r3, r1
  402d2a:	4630      	mov	r0, r6
  402d2c:	4639      	mov	r1, r7
  402d2e:	f004 fbbb 	bl	4074a8 <__aeabi_ddiv>
  402d32:	f04f 0b02 	mov.w	fp, #2
  402d36:	4604      	mov	r4, r0
  402d38:	460d      	mov	r5, r1
  402d3a:	e70d      	b.n	402b58 <atan+0x58>
  402d3c:	4602      	mov	r2, r0
  402d3e:	460b      	mov	r3, r1
  402d40:	2000      	movs	r0, #0
  402d42:	4933      	ldr	r1, [pc, #204]	; (402e10 <atan+0x310>)
  402d44:	f004 fbb0 	bl	4074a8 <__aeabi_ddiv>
  402d48:	f04f 0b03 	mov.w	fp, #3
  402d4c:	4604      	mov	r4, r0
  402d4e:	460d      	mov	r5, r1
  402d50:	e702      	b.n	402b58 <atan+0x58>
  402d52:	2200      	movs	r2, #0
  402d54:	4b2a      	ldr	r3, [pc, #168]	; (402e00 <atan+0x300>)
  402d56:	f004 f8c5 	bl	406ee4 <__aeabi_dsub>
  402d5a:	2200      	movs	r2, #0
  402d5c:	4606      	mov	r6, r0
  402d5e:	460f      	mov	r7, r1
  402d60:	4b27      	ldr	r3, [pc, #156]	; (402e00 <atan+0x300>)
  402d62:	4620      	mov	r0, r4
  402d64:	4629      	mov	r1, r5
  402d66:	f004 f8bf 	bl	406ee8 <__adddf3>
  402d6a:	4602      	mov	r2, r0
  402d6c:	460b      	mov	r3, r1
  402d6e:	4630      	mov	r0, r6
  402d70:	4639      	mov	r1, r7
  402d72:	f004 fb99 	bl	4074a8 <__aeabi_ddiv>
  402d76:	f04f 0b01 	mov.w	fp, #1
  402d7a:	4604      	mov	r4, r0
  402d7c:	460d      	mov	r5, r1
  402d7e:	e6eb      	b.n	402b58 <atan+0x58>
  402d80:	e322da11 	.word	0xe322da11
  402d84:	3f90ad3a 	.word	0x3f90ad3a
  402d88:	24760deb 	.word	0x24760deb
  402d8c:	3fa97b4b 	.word	0x3fa97b4b
  402d90:	a0d03d51 	.word	0xa0d03d51
  402d94:	3fb10d66 	.word	0x3fb10d66
  402d98:	c54c206e 	.word	0xc54c206e
  402d9c:	3fb745cd 	.word	0x3fb745cd
  402da0:	920083ff 	.word	0x920083ff
  402da4:	3fc24924 	.word	0x3fc24924
  402da8:	5555550d 	.word	0x5555550d
  402dac:	3fd55555 	.word	0x3fd55555
  402db0:	2c6a6c2f 	.word	0x2c6a6c2f
  402db4:	bfa2b444 	.word	0xbfa2b444
  402db8:	52defd9a 	.word	0x52defd9a
  402dbc:	3fadde2d 	.word	0x3fadde2d
  402dc0:	af749a6d 	.word	0xaf749a6d
  402dc4:	3fb3b0f2 	.word	0x3fb3b0f2
  402dc8:	fe231671 	.word	0xfe231671
  402dcc:	3fbc71c6 	.word	0x3fbc71c6
  402dd0:	9998ebc4 	.word	0x9998ebc4
  402dd4:	3fc99999 	.word	0x3fc99999
  402dd8:	8800759c 	.word	0x8800759c
  402ddc:	7e37e43c 	.word	0x7e37e43c
  402de0:	440fffff 	.word	0x440fffff
  402de4:	7ff00000 	.word	0x7ff00000
  402de8:	3ff921fb 	.word	0x3ff921fb
  402dec:	bff921fb 	.word	0xbff921fb
  402df0:	54442d18 	.word	0x54442d18
  402df4:	3fdbffff 	.word	0x3fdbffff
  402df8:	004083d0 	.word	0x004083d0
  402dfc:	004083b0 	.word	0x004083b0
  402e00:	3ff00000 	.word	0x3ff00000
  402e04:	3ff2ffff 	.word	0x3ff2ffff
  402e08:	40037fff 	.word	0x40037fff
  402e0c:	3ff80000 	.word	0x3ff80000
  402e10:	bff00000 	.word	0xbff00000

00402e14 <fabs>:
  402e14:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
  402e18:	4619      	mov	r1, r3
  402e1a:	4770      	bx	lr

00402e1c <matherr>:
  402e1c:	2000      	movs	r0, #0
  402e1e:	4770      	bx	lr

00402e20 <atof>:
  402e20:	2100      	movs	r1, #0
  402e22:	f001 bc0d 	b.w	404640 <strtod>

00402e26 <atoi>:
  402e26:	220a      	movs	r2, #10
  402e28:	2100      	movs	r1, #0
  402e2a:	f001 bcb9 	b.w	4047a0 <strtol>
	...

00402e30 <__errno>:
  402e30:	4b01      	ldr	r3, [pc, #4]	; (402e38 <__errno+0x8>)
  402e32:	6818      	ldr	r0, [r3, #0]
  402e34:	4770      	bx	lr
  402e36:	bf00      	nop
  402e38:	20000014 	.word	0x20000014

00402e3c <__libc_init_array>:
  402e3c:	b570      	push	{r4, r5, r6, lr}
  402e3e:	4d0d      	ldr	r5, [pc, #52]	; (402e74 <__libc_init_array+0x38>)
  402e40:	4c0d      	ldr	r4, [pc, #52]	; (402e78 <__libc_init_array+0x3c>)
  402e42:	1b64      	subs	r4, r4, r5
  402e44:	10a4      	asrs	r4, r4, #2
  402e46:	2600      	movs	r6, #0
  402e48:	42a6      	cmp	r6, r4
  402e4a:	d109      	bne.n	402e60 <__libc_init_array+0x24>
  402e4c:	4d0b      	ldr	r5, [pc, #44]	; (402e7c <__libc_init_array+0x40>)
  402e4e:	4c0c      	ldr	r4, [pc, #48]	; (402e80 <__libc_init_array+0x44>)
  402e50:	f005 fc5e 	bl	408710 <_init>
  402e54:	1b64      	subs	r4, r4, r5
  402e56:	10a4      	asrs	r4, r4, #2
  402e58:	2600      	movs	r6, #0
  402e5a:	42a6      	cmp	r6, r4
  402e5c:	d105      	bne.n	402e6a <__libc_init_array+0x2e>
  402e5e:	bd70      	pop	{r4, r5, r6, pc}
  402e60:	f855 3b04 	ldr.w	r3, [r5], #4
  402e64:	4798      	blx	r3
  402e66:	3601      	adds	r6, #1
  402e68:	e7ee      	b.n	402e48 <__libc_init_array+0xc>
  402e6a:	f855 3b04 	ldr.w	r3, [r5], #4
  402e6e:	4798      	blx	r3
  402e70:	3601      	adds	r6, #1
  402e72:	e7f2      	b.n	402e5a <__libc_init_array+0x1e>
  402e74:	0040871c 	.word	0x0040871c
  402e78:	0040871c 	.word	0x0040871c
  402e7c:	0040871c 	.word	0x0040871c
  402e80:	00408720 	.word	0x00408720

00402e84 <memcpy>:
  402e84:	440a      	add	r2, r1
  402e86:	4291      	cmp	r1, r2
  402e88:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
  402e8c:	d100      	bne.n	402e90 <memcpy+0xc>
  402e8e:	4770      	bx	lr
  402e90:	b510      	push	{r4, lr}
  402e92:	f811 4b01 	ldrb.w	r4, [r1], #1
  402e96:	f803 4f01 	strb.w	r4, [r3, #1]!
  402e9a:	4291      	cmp	r1, r2
  402e9c:	d1f9      	bne.n	402e92 <memcpy+0xe>
  402e9e:	bd10      	pop	{r4, pc}

00402ea0 <memset>:
  402ea0:	4402      	add	r2, r0
  402ea2:	4603      	mov	r3, r0
  402ea4:	4293      	cmp	r3, r2
  402ea6:	d100      	bne.n	402eaa <memset+0xa>
  402ea8:	4770      	bx	lr
  402eaa:	f803 1b01 	strb.w	r1, [r3], #1
  402eae:	e7f9      	b.n	402ea4 <memset+0x4>

00402eb0 <__cvt>:
  402eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  402eb4:	b088      	sub	sp, #32
  402eb6:	2b00      	cmp	r3, #0
  402eb8:	9f14      	ldr	r7, [sp, #80]	; 0x50
  402eba:	9d10      	ldr	r5, [sp, #64]	; 0x40
  402ebc:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
  402ec0:	461e      	mov	r6, r3
  402ec2:	4614      	mov	r4, r2
  402ec4:	bfb8      	it	lt
  402ec6:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
  402eca:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402ecc:	f027 0720 	bic.w	r7, r7, #32
  402ed0:	bfb6      	itet	lt
  402ed2:	461e      	movlt	r6, r3
  402ed4:	2300      	movge	r3, #0
  402ed6:	232d      	movlt	r3, #45	; 0x2d
  402ed8:	2f46      	cmp	r7, #70	; 0x46
  402eda:	7013      	strb	r3, [r2, #0]
  402edc:	d004      	beq.n	402ee8 <__cvt+0x38>
  402ede:	2f45      	cmp	r7, #69	; 0x45
  402ee0:	d100      	bne.n	402ee4 <__cvt+0x34>
  402ee2:	3501      	adds	r5, #1
  402ee4:	2302      	movs	r3, #2
  402ee6:	e000      	b.n	402eea <__cvt+0x3a>
  402ee8:	2303      	movs	r3, #3
  402eea:	aa07      	add	r2, sp, #28
  402eec:	9204      	str	r2, [sp, #16]
  402eee:	aa06      	add	r2, sp, #24
  402ef0:	e9cd a202 	strd	sl, r2, [sp, #8]
  402ef4:	e9cd 3500 	strd	r3, r5, [sp]
  402ef8:	4622      	mov	r2, r4
  402efa:	4633      	mov	r3, r6
  402efc:	f001 fda4 	bl	404a48 <_dtoa_r>
  402f00:	2f47      	cmp	r7, #71	; 0x47
  402f02:	4680      	mov	r8, r0
  402f04:	d102      	bne.n	402f0c <__cvt+0x5c>
  402f06:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402f08:	07db      	lsls	r3, r3, #31
  402f0a:	d522      	bpl.n	402f52 <__cvt+0xa2>
  402f0c:	2f46      	cmp	r7, #70	; 0x46
  402f0e:	eb08 0905 	add.w	r9, r8, r5
  402f12:	d111      	bne.n	402f38 <__cvt+0x88>
  402f14:	f898 3000 	ldrb.w	r3, [r8]
  402f18:	2b30      	cmp	r3, #48	; 0x30
  402f1a:	d10a      	bne.n	402f32 <__cvt+0x82>
  402f1c:	2200      	movs	r2, #0
  402f1e:	2300      	movs	r3, #0
  402f20:	4620      	mov	r0, r4
  402f22:	4631      	mov	r1, r6
  402f24:	f004 fbfe 	bl	407724 <__aeabi_dcmpeq>
  402f28:	b918      	cbnz	r0, 402f32 <__cvt+0x82>
  402f2a:	f1c5 0501 	rsb	r5, r5, #1
  402f2e:	f8ca 5000 	str.w	r5, [sl]
  402f32:	f8da 3000 	ldr.w	r3, [sl]
  402f36:	4499      	add	r9, r3
  402f38:	2200      	movs	r2, #0
  402f3a:	2300      	movs	r3, #0
  402f3c:	4620      	mov	r0, r4
  402f3e:	4631      	mov	r1, r6
  402f40:	f004 fbf0 	bl	407724 <__aeabi_dcmpeq>
  402f44:	b108      	cbz	r0, 402f4a <__cvt+0x9a>
  402f46:	f8cd 901c 	str.w	r9, [sp, #28]
  402f4a:	2230      	movs	r2, #48	; 0x30
  402f4c:	9b07      	ldr	r3, [sp, #28]
  402f4e:	454b      	cmp	r3, r9
  402f50:	d308      	bcc.n	402f64 <__cvt+0xb4>
  402f52:	9b07      	ldr	r3, [sp, #28]
  402f54:	9a15      	ldr	r2, [sp, #84]	; 0x54
  402f56:	eba3 0308 	sub.w	r3, r3, r8
  402f5a:	4640      	mov	r0, r8
  402f5c:	6013      	str	r3, [r2, #0]
  402f5e:	b008      	add	sp, #32
  402f60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  402f64:	1c59      	adds	r1, r3, #1
  402f66:	9107      	str	r1, [sp, #28]
  402f68:	701a      	strb	r2, [r3, #0]
  402f6a:	e7ef      	b.n	402f4c <__cvt+0x9c>

00402f6c <__exponent>:
  402f6c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  402f6e:	2900      	cmp	r1, #0
  402f70:	bfba      	itte	lt
  402f72:	4249      	neglt	r1, r1
  402f74:	232d      	movlt	r3, #45	; 0x2d
  402f76:	232b      	movge	r3, #43	; 0x2b
  402f78:	2909      	cmp	r1, #9
  402f7a:	7002      	strb	r2, [r0, #0]
  402f7c:	7043      	strb	r3, [r0, #1]
  402f7e:	dd21      	ble.n	402fc4 <__exponent+0x58>
  402f80:	f10d 0307 	add.w	r3, sp, #7
  402f84:	461f      	mov	r7, r3
  402f86:	260a      	movs	r6, #10
  402f88:	fb91 f2f6 	sdiv	r2, r1, r6
  402f8c:	fb06 1412 	mls	r4, r6, r2, r1
  402f90:	3430      	adds	r4, #48	; 0x30
  402f92:	2963      	cmp	r1, #99	; 0x63
  402f94:	f103 35ff 	add.w	r5, r3, #4294967295	; 0xffffffff
  402f98:	f803 4c01 	strb.w	r4, [r3, #-1]
  402f9c:	dc0a      	bgt.n	402fb4 <__exponent+0x48>
  402f9e:	3230      	adds	r2, #48	; 0x30
  402fa0:	f805 2c01 	strb.w	r2, [r5, #-1]
  402fa4:	3b02      	subs	r3, #2
  402fa6:	1c82      	adds	r2, r0, #2
  402fa8:	42bb      	cmp	r3, r7
  402faa:	4614      	mov	r4, r2
  402fac:	d305      	bcc.n	402fba <__exponent+0x4e>
  402fae:	1a20      	subs	r0, r4, r0
  402fb0:	b003      	add	sp, #12
  402fb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
  402fb4:	462b      	mov	r3, r5
  402fb6:	4611      	mov	r1, r2
  402fb8:	e7e6      	b.n	402f88 <__exponent+0x1c>
  402fba:	f813 1b01 	ldrb.w	r1, [r3], #1
  402fbe:	f802 1b01 	strb.w	r1, [r2], #1
  402fc2:	e7f1      	b.n	402fa8 <__exponent+0x3c>
  402fc4:	2330      	movs	r3, #48	; 0x30
  402fc6:	4419      	add	r1, r3
  402fc8:	7083      	strb	r3, [r0, #2]
  402fca:	1d04      	adds	r4, r0, #4
  402fcc:	70c1      	strb	r1, [r0, #3]
  402fce:	e7ee      	b.n	402fae <__exponent+0x42>

00402fd0 <_printf_float>:
  402fd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402fd4:	b091      	sub	sp, #68	; 0x44
  402fd6:	460c      	mov	r4, r1
  402fd8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
  402fda:	4693      	mov	fp, r2
  402fdc:	461e      	mov	r6, r3
  402fde:	4605      	mov	r5, r0
  402fe0:	f002 ffc0 	bl	405f64 <_localeconv_r>
  402fe4:	6803      	ldr	r3, [r0, #0]
  402fe6:	9309      	str	r3, [sp, #36]	; 0x24
  402fe8:	4618      	mov	r0, r3
  402fea:	f000 fd07 	bl	4039fc <strlen>
  402fee:	2300      	movs	r3, #0
  402ff0:	930e      	str	r3, [sp, #56]	; 0x38
  402ff2:	683b      	ldr	r3, [r7, #0]
  402ff4:	900a      	str	r0, [sp, #40]	; 0x28
  402ff6:	3307      	adds	r3, #7
  402ff8:	f023 0307 	bic.w	r3, r3, #7
  402ffc:	f103 0208 	add.w	r2, r3, #8
  403000:	f894 8018 	ldrb.w	r8, [r4, #24]
  403004:	f8d4 a000 	ldr.w	sl, [r4]
  403008:	603a      	str	r2, [r7, #0]
  40300a:	e9d3 2300 	ldrd	r2, r3, [r3]
  40300e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
  403012:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
  403016:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  40301a:	930b      	str	r3, [sp, #44]	; 0x2c
  40301c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  403020:	4ba8      	ldr	r3, [pc, #672]	; (4032c4 <_printf_float+0x2f4>)
  403022:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403024:	4638      	mov	r0, r7
  403026:	f004 fbaf 	bl	407788 <__aeabi_dcmpun>
  40302a:	bb68      	cbnz	r0, 403088 <_printf_float+0xb8>
  40302c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  403030:	4ba4      	ldr	r3, [pc, #656]	; (4032c4 <_printf_float+0x2f4>)
  403032:	990b      	ldr	r1, [sp, #44]	; 0x2c
  403034:	4638      	mov	r0, r7
  403036:	f004 fb89 	bl	40774c <__aeabi_dcmple>
  40303a:	bb28      	cbnz	r0, 403088 <_printf_float+0xb8>
  40303c:	2200      	movs	r2, #0
  40303e:	2300      	movs	r3, #0
  403040:	4638      	mov	r0, r7
  403042:	4649      	mov	r1, r9
  403044:	f004 fb78 	bl	407738 <__aeabi_dcmplt>
  403048:	b110      	cbz	r0, 403050 <_printf_float+0x80>
  40304a:	232d      	movs	r3, #45	; 0x2d
  40304c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  403050:	4f9d      	ldr	r7, [pc, #628]	; (4032c8 <_printf_float+0x2f8>)
  403052:	4b9e      	ldr	r3, [pc, #632]	; (4032cc <_printf_float+0x2fc>)
  403054:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
  403058:	bf88      	it	hi
  40305a:	461f      	movhi	r7, r3
  40305c:	2303      	movs	r3, #3
  40305e:	6123      	str	r3, [r4, #16]
  403060:	f02a 0304 	bic.w	r3, sl, #4
  403064:	6023      	str	r3, [r4, #0]
  403066:	f04f 0900 	mov.w	r9, #0
  40306a:	9600      	str	r6, [sp, #0]
  40306c:	465b      	mov	r3, fp
  40306e:	aa0f      	add	r2, sp, #60	; 0x3c
  403070:	4621      	mov	r1, r4
  403072:	4628      	mov	r0, r5
  403074:	f000 f9ce 	bl	403414 <_printf_common>
  403078:	3001      	adds	r0, #1
  40307a:	f040 8093 	bne.w	4031a4 <_printf_float+0x1d4>
  40307e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  403082:	b011      	add	sp, #68	; 0x44
  403084:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403088:	463a      	mov	r2, r7
  40308a:	464b      	mov	r3, r9
  40308c:	4638      	mov	r0, r7
  40308e:	4649      	mov	r1, r9
  403090:	f004 fb7a 	bl	407788 <__aeabi_dcmpun>
  403094:	b160      	cbz	r0, 4030b0 <_printf_float+0xe0>
  403096:	2200      	movs	r2, #0
  403098:	2300      	movs	r3, #0
  40309a:	4638      	mov	r0, r7
  40309c:	4649      	mov	r1, r9
  40309e:	f004 fb4b 	bl	407738 <__aeabi_dcmplt>
  4030a2:	b110      	cbz	r0, 4030aa <_printf_float+0xda>
  4030a4:	232d      	movs	r3, #45	; 0x2d
  4030a6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  4030aa:	4f89      	ldr	r7, [pc, #548]	; (4032d0 <_printf_float+0x300>)
  4030ac:	4b89      	ldr	r3, [pc, #548]	; (4032d4 <_printf_float+0x304>)
  4030ae:	e7d1      	b.n	403054 <_printf_float+0x84>
  4030b0:	6863      	ldr	r3, [r4, #4]
  4030b2:	1c5a      	adds	r2, r3, #1
  4030b4:	f008 01df 	and.w	r1, r8, #223	; 0xdf
  4030b8:	d142      	bne.n	403140 <_printf_float+0x170>
  4030ba:	2306      	movs	r3, #6
  4030bc:	6063      	str	r3, [r4, #4]
  4030be:	2200      	movs	r2, #0
  4030c0:	9206      	str	r2, [sp, #24]
  4030c2:	aa0e      	add	r2, sp, #56	; 0x38
  4030c4:	e9cd 8204 	strd	r8, r2, [sp, #16]
  4030c8:	aa0d      	add	r2, sp, #52	; 0x34
  4030ca:	f44a 6380 	orr.w	r3, sl, #1024	; 0x400
  4030ce:	9203      	str	r2, [sp, #12]
  4030d0:	f10d 0233 	add.w	r2, sp, #51	; 0x33
  4030d4:	e9cd 3201 	strd	r3, r2, [sp, #4]
  4030d8:	6023      	str	r3, [r4, #0]
  4030da:	6863      	ldr	r3, [r4, #4]
  4030dc:	9300      	str	r3, [sp, #0]
  4030de:	463a      	mov	r2, r7
  4030e0:	464b      	mov	r3, r9
  4030e2:	4628      	mov	r0, r5
  4030e4:	910b      	str	r1, [sp, #44]	; 0x2c
  4030e6:	f7ff fee3 	bl	402eb0 <__cvt>
  4030ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4030ec:	2947      	cmp	r1, #71	; 0x47
  4030ee:	4607      	mov	r7, r0
  4030f0:	990d      	ldr	r1, [sp, #52]	; 0x34
  4030f2:	d108      	bne.n	403106 <_printf_float+0x136>
  4030f4:	1cc8      	adds	r0, r1, #3
  4030f6:	db02      	blt.n	4030fe <_printf_float+0x12e>
  4030f8:	6863      	ldr	r3, [r4, #4]
  4030fa:	4299      	cmp	r1, r3
  4030fc:	dd40      	ble.n	403180 <_printf_float+0x1b0>
  4030fe:	f1a8 0802 	sub.w	r8, r8, #2
  403102:	fa5f f888 	uxtb.w	r8, r8
  403106:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
  40310a:	d81f      	bhi.n	40314c <_printf_float+0x17c>
  40310c:	3901      	subs	r1, #1
  40310e:	4642      	mov	r2, r8
  403110:	f104 0050 	add.w	r0, r4, #80	; 0x50
  403114:	910d      	str	r1, [sp, #52]	; 0x34
  403116:	f7ff ff29 	bl	402f6c <__exponent>
  40311a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  40311c:	1813      	adds	r3, r2, r0
  40311e:	2a01      	cmp	r2, #1
  403120:	4681      	mov	r9, r0
  403122:	6123      	str	r3, [r4, #16]
  403124:	dc02      	bgt.n	40312c <_printf_float+0x15c>
  403126:	6822      	ldr	r2, [r4, #0]
  403128:	07d2      	lsls	r2, r2, #31
  40312a:	d501      	bpl.n	403130 <_printf_float+0x160>
  40312c:	3301      	adds	r3, #1
  40312e:	6123      	str	r3, [r4, #16]
  403130:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
  403134:	2b00      	cmp	r3, #0
  403136:	d098      	beq.n	40306a <_printf_float+0x9a>
  403138:	232d      	movs	r3, #45	; 0x2d
  40313a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  40313e:	e794      	b.n	40306a <_printf_float+0x9a>
  403140:	2947      	cmp	r1, #71	; 0x47
  403142:	d1bc      	bne.n	4030be <_printf_float+0xee>
  403144:	2b00      	cmp	r3, #0
  403146:	d1ba      	bne.n	4030be <_printf_float+0xee>
  403148:	2301      	movs	r3, #1
  40314a:	e7b7      	b.n	4030bc <_printf_float+0xec>
  40314c:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
  403150:	d118      	bne.n	403184 <_printf_float+0x1b4>
  403152:	2900      	cmp	r1, #0
  403154:	6863      	ldr	r3, [r4, #4]
  403156:	dd0b      	ble.n	403170 <_printf_float+0x1a0>
  403158:	6121      	str	r1, [r4, #16]
  40315a:	b913      	cbnz	r3, 403162 <_printf_float+0x192>
  40315c:	6822      	ldr	r2, [r4, #0]
  40315e:	07d0      	lsls	r0, r2, #31
  403160:	d502      	bpl.n	403168 <_printf_float+0x198>
  403162:	3301      	adds	r3, #1
  403164:	440b      	add	r3, r1
  403166:	6123      	str	r3, [r4, #16]
  403168:	65a1      	str	r1, [r4, #88]	; 0x58
  40316a:	f04f 0900 	mov.w	r9, #0
  40316e:	e7df      	b.n	403130 <_printf_float+0x160>
  403170:	b913      	cbnz	r3, 403178 <_printf_float+0x1a8>
  403172:	6822      	ldr	r2, [r4, #0]
  403174:	07d2      	lsls	r2, r2, #31
  403176:	d501      	bpl.n	40317c <_printf_float+0x1ac>
  403178:	3302      	adds	r3, #2
  40317a:	e7f4      	b.n	403166 <_printf_float+0x196>
  40317c:	2301      	movs	r3, #1
  40317e:	e7f2      	b.n	403166 <_printf_float+0x196>
  403180:	f04f 0867 	mov.w	r8, #103	; 0x67
  403184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403186:	4299      	cmp	r1, r3
  403188:	db05      	blt.n	403196 <_printf_float+0x1c6>
  40318a:	6823      	ldr	r3, [r4, #0]
  40318c:	6121      	str	r1, [r4, #16]
  40318e:	07d8      	lsls	r0, r3, #31
  403190:	d5ea      	bpl.n	403168 <_printf_float+0x198>
  403192:	1c4b      	adds	r3, r1, #1
  403194:	e7e7      	b.n	403166 <_printf_float+0x196>
  403196:	2900      	cmp	r1, #0
  403198:	bfd4      	ite	le
  40319a:	f1c1 0202 	rsble	r2, r1, #2
  40319e:	2201      	movgt	r2, #1
  4031a0:	4413      	add	r3, r2
  4031a2:	e7e0      	b.n	403166 <_printf_float+0x196>
  4031a4:	6823      	ldr	r3, [r4, #0]
  4031a6:	055a      	lsls	r2, r3, #21
  4031a8:	d407      	bmi.n	4031ba <_printf_float+0x1ea>
  4031aa:	6923      	ldr	r3, [r4, #16]
  4031ac:	463a      	mov	r2, r7
  4031ae:	4659      	mov	r1, fp
  4031b0:	4628      	mov	r0, r5
  4031b2:	47b0      	blx	r6
  4031b4:	3001      	adds	r0, #1
  4031b6:	d129      	bne.n	40320c <_printf_float+0x23c>
  4031b8:	e761      	b.n	40307e <_printf_float+0xae>
  4031ba:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
  4031be:	f240 80d8 	bls.w	403372 <_printf_float+0x3a2>
  4031c2:	2200      	movs	r2, #0
  4031c4:	2300      	movs	r3, #0
  4031c6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  4031ca:	f004 faab 	bl	407724 <__aeabi_dcmpeq>
  4031ce:	b388      	cbz	r0, 403234 <_printf_float+0x264>
  4031d0:	2301      	movs	r3, #1
  4031d2:	4a41      	ldr	r2, [pc, #260]	; (4032d8 <_printf_float+0x308>)
  4031d4:	4659      	mov	r1, fp
  4031d6:	4628      	mov	r0, r5
  4031d8:	47b0      	blx	r6
  4031da:	3001      	adds	r0, #1
  4031dc:	f43f af4f 	beq.w	40307e <_printf_float+0xae>
  4031e0:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
  4031e4:	429a      	cmp	r2, r3
  4031e6:	db02      	blt.n	4031ee <_printf_float+0x21e>
  4031e8:	6823      	ldr	r3, [r4, #0]
  4031ea:	07d8      	lsls	r0, r3, #31
  4031ec:	d50e      	bpl.n	40320c <_printf_float+0x23c>
  4031ee:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
  4031f2:	4659      	mov	r1, fp
  4031f4:	4628      	mov	r0, r5
  4031f6:	47b0      	blx	r6
  4031f8:	3001      	adds	r0, #1
  4031fa:	f43f af40 	beq.w	40307e <_printf_float+0xae>
  4031fe:	2700      	movs	r7, #0
  403200:	f104 081a 	add.w	r8, r4, #26
  403204:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  403206:	3b01      	subs	r3, #1
  403208:	42bb      	cmp	r3, r7
  40320a:	dc09      	bgt.n	403220 <_printf_float+0x250>
  40320c:	6823      	ldr	r3, [r4, #0]
  40320e:	079f      	lsls	r7, r3, #30
  403210:	f100 80fb 	bmi.w	40340a <_printf_float+0x43a>
  403214:	68e0      	ldr	r0, [r4, #12]
  403216:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403218:	4298      	cmp	r0, r3
  40321a:	bfb8      	it	lt
  40321c:	4618      	movlt	r0, r3
  40321e:	e730      	b.n	403082 <_printf_float+0xb2>
  403220:	2301      	movs	r3, #1
  403222:	4642      	mov	r2, r8
  403224:	4659      	mov	r1, fp
  403226:	4628      	mov	r0, r5
  403228:	47b0      	blx	r6
  40322a:	3001      	adds	r0, #1
  40322c:	f43f af27 	beq.w	40307e <_printf_float+0xae>
  403230:	3701      	adds	r7, #1
  403232:	e7e7      	b.n	403204 <_printf_float+0x234>
  403234:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403236:	2b00      	cmp	r3, #0
  403238:	dc2b      	bgt.n	403292 <_printf_float+0x2c2>
  40323a:	2301      	movs	r3, #1
  40323c:	4a26      	ldr	r2, [pc, #152]	; (4032d8 <_printf_float+0x308>)
  40323e:	4659      	mov	r1, fp
  403240:	4628      	mov	r0, r5
  403242:	47b0      	blx	r6
  403244:	3001      	adds	r0, #1
  403246:	f43f af1a 	beq.w	40307e <_printf_float+0xae>
  40324a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
  40324e:	4313      	orrs	r3, r2
  403250:	d102      	bne.n	403258 <_printf_float+0x288>
  403252:	6823      	ldr	r3, [r4, #0]
  403254:	07d9      	lsls	r1, r3, #31
  403256:	d5d9      	bpl.n	40320c <_printf_float+0x23c>
  403258:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
  40325c:	4659      	mov	r1, fp
  40325e:	4628      	mov	r0, r5
  403260:	47b0      	blx	r6
  403262:	3001      	adds	r0, #1
  403264:	f43f af0b 	beq.w	40307e <_printf_float+0xae>
  403268:	f04f 0800 	mov.w	r8, #0
  40326c:	f104 091a 	add.w	r9, r4, #26
  403270:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403272:	425b      	negs	r3, r3
  403274:	4543      	cmp	r3, r8
  403276:	dc01      	bgt.n	40327c <_printf_float+0x2ac>
  403278:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40327a:	e797      	b.n	4031ac <_printf_float+0x1dc>
  40327c:	2301      	movs	r3, #1
  40327e:	464a      	mov	r2, r9
  403280:	4659      	mov	r1, fp
  403282:	4628      	mov	r0, r5
  403284:	47b0      	blx	r6
  403286:	3001      	adds	r0, #1
  403288:	f43f aef9 	beq.w	40307e <_printf_float+0xae>
  40328c:	f108 0801 	add.w	r8, r8, #1
  403290:	e7ee      	b.n	403270 <_printf_float+0x2a0>
  403292:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403294:	6da3      	ldr	r3, [r4, #88]	; 0x58
  403296:	429a      	cmp	r2, r3
  403298:	bfa8      	it	ge
  40329a:	461a      	movge	r2, r3
  40329c:	2a00      	cmp	r2, #0
  40329e:	4690      	mov	r8, r2
  4032a0:	dd07      	ble.n	4032b2 <_printf_float+0x2e2>
  4032a2:	4613      	mov	r3, r2
  4032a4:	4659      	mov	r1, fp
  4032a6:	463a      	mov	r2, r7
  4032a8:	4628      	mov	r0, r5
  4032aa:	47b0      	blx	r6
  4032ac:	3001      	adds	r0, #1
  4032ae:	f43f aee6 	beq.w	40307e <_printf_float+0xae>
  4032b2:	f104 031a 	add.w	r3, r4, #26
  4032b6:	f04f 0a00 	mov.w	sl, #0
  4032ba:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  4032be:	930b      	str	r3, [sp, #44]	; 0x2c
  4032c0:	e016      	b.n	4032f0 <_printf_float+0x320>
  4032c2:	bf00      	nop
  4032c4:	7fefffff 	.word	0x7fefffff
  4032c8:	004083f4 	.word	0x004083f4
  4032cc:	004083f8 	.word	0x004083f8
  4032d0:	004083fc 	.word	0x004083fc
  4032d4:	00408400 	.word	0x00408400
  4032d8:	00408404 	.word	0x00408404
  4032dc:	2301      	movs	r3, #1
  4032de:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  4032e0:	4659      	mov	r1, fp
  4032e2:	4628      	mov	r0, r5
  4032e4:	47b0      	blx	r6
  4032e6:	3001      	adds	r0, #1
  4032e8:	f43f aec9 	beq.w	40307e <_printf_float+0xae>
  4032ec:	f10a 0a01 	add.w	sl, sl, #1
  4032f0:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
  4032f4:	eba9 0308 	sub.w	r3, r9, r8
  4032f8:	4553      	cmp	r3, sl
  4032fa:	dcef      	bgt.n	4032dc <_printf_float+0x30c>
  4032fc:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
  403300:	429a      	cmp	r2, r3
  403302:	db1a      	blt.n	40333a <_printf_float+0x36a>
  403304:	6823      	ldr	r3, [r4, #0]
  403306:	07da      	lsls	r2, r3, #31
  403308:	d417      	bmi.n	40333a <_printf_float+0x36a>
  40330a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
  40330e:	4591      	cmp	r9, r2
  403310:	db1b      	blt.n	40334a <_printf_float+0x37a>
  403312:	eba3 0809 	sub.w	r8, r3, r9
  403316:	f1b8 0f00 	cmp.w	r8, #0
  40331a:	dd08      	ble.n	40332e <_printf_float+0x35e>
  40331c:	4643      	mov	r3, r8
  40331e:	eb07 0209 	add.w	r2, r7, r9
  403322:	4659      	mov	r1, fp
  403324:	4628      	mov	r0, r5
  403326:	47b0      	blx	r6
  403328:	3001      	adds	r0, #1
  40332a:	f43f aea8 	beq.w	40307e <_printf_float+0xae>
  40332e:	2700      	movs	r7, #0
  403330:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  403334:	f104 091a 	add.w	r9, r4, #26
  403338:	e013      	b.n	403362 <_printf_float+0x392>
  40333a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
  40333e:	4659      	mov	r1, fp
  403340:	4628      	mov	r0, r5
  403342:	47b0      	blx	r6
  403344:	3001      	adds	r0, #1
  403346:	d1e0      	bne.n	40330a <_printf_float+0x33a>
  403348:	e699      	b.n	40307e <_printf_float+0xae>
  40334a:	eba3 0802 	sub.w	r8, r3, r2
  40334e:	e7e2      	b.n	403316 <_printf_float+0x346>
  403350:	2301      	movs	r3, #1
  403352:	464a      	mov	r2, r9
  403354:	4659      	mov	r1, fp
  403356:	4628      	mov	r0, r5
  403358:	47b0      	blx	r6
  40335a:	3001      	adds	r0, #1
  40335c:	f43f ae8f 	beq.w	40307e <_printf_float+0xae>
  403360:	3701      	adds	r7, #1
  403362:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
  403366:	1a9b      	subs	r3, r3, r2
  403368:	eba3 0308 	sub.w	r3, r3, r8
  40336c:	42bb      	cmp	r3, r7
  40336e:	dcef      	bgt.n	403350 <_printf_float+0x380>
  403370:	e74c      	b.n	40320c <_printf_float+0x23c>
  403372:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  403374:	2a01      	cmp	r2, #1
  403376:	dc01      	bgt.n	40337c <_printf_float+0x3ac>
  403378:	07db      	lsls	r3, r3, #31
  40337a:	d534      	bpl.n	4033e6 <_printf_float+0x416>
  40337c:	2301      	movs	r3, #1
  40337e:	463a      	mov	r2, r7
  403380:	4659      	mov	r1, fp
  403382:	4628      	mov	r0, r5
  403384:	47b0      	blx	r6
  403386:	3001      	adds	r0, #1
  403388:	f43f ae79 	beq.w	40307e <_printf_float+0xae>
  40338c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
  403390:	4659      	mov	r1, fp
  403392:	4628      	mov	r0, r5
  403394:	47b0      	blx	r6
  403396:	3001      	adds	r0, #1
  403398:	f43f ae71 	beq.w	40307e <_printf_float+0xae>
  40339c:	2200      	movs	r2, #0
  40339e:	2300      	movs	r3, #0
  4033a0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
  4033a4:	f004 f9be 	bl	407724 <__aeabi_dcmpeq>
  4033a8:	b9c8      	cbnz	r0, 4033de <_printf_float+0x40e>
  4033aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4033ac:	1c7a      	adds	r2, r7, #1
  4033ae:	3b01      	subs	r3, #1
  4033b0:	4659      	mov	r1, fp
  4033b2:	4628      	mov	r0, r5
  4033b4:	47b0      	blx	r6
  4033b6:	3001      	adds	r0, #1
  4033b8:	d10d      	bne.n	4033d6 <_printf_float+0x406>
  4033ba:	e660      	b.n	40307e <_printf_float+0xae>
  4033bc:	2301      	movs	r3, #1
  4033be:	4642      	mov	r2, r8
  4033c0:	4659      	mov	r1, fp
  4033c2:	4628      	mov	r0, r5
  4033c4:	47b0      	blx	r6
  4033c6:	3001      	adds	r0, #1
  4033c8:	f43f ae59 	beq.w	40307e <_printf_float+0xae>
  4033cc:	3701      	adds	r7, #1
  4033ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4033d0:	3b01      	subs	r3, #1
  4033d2:	42bb      	cmp	r3, r7
  4033d4:	dcf2      	bgt.n	4033bc <_printf_float+0x3ec>
  4033d6:	464b      	mov	r3, r9
  4033d8:	f104 0250 	add.w	r2, r4, #80	; 0x50
  4033dc:	e6e7      	b.n	4031ae <_printf_float+0x1de>
  4033de:	2700      	movs	r7, #0
  4033e0:	f104 081a 	add.w	r8, r4, #26
  4033e4:	e7f3      	b.n	4033ce <_printf_float+0x3fe>
  4033e6:	2301      	movs	r3, #1
  4033e8:	463a      	mov	r2, r7
  4033ea:	e7e1      	b.n	4033b0 <_printf_float+0x3e0>
  4033ec:	2301      	movs	r3, #1
  4033ee:	4642      	mov	r2, r8
  4033f0:	4659      	mov	r1, fp
  4033f2:	4628      	mov	r0, r5
  4033f4:	47b0      	blx	r6
  4033f6:	3001      	adds	r0, #1
  4033f8:	f43f ae41 	beq.w	40307e <_printf_float+0xae>
  4033fc:	3701      	adds	r7, #1
  4033fe:	68e3      	ldr	r3, [r4, #12]
  403400:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  403402:	1a9b      	subs	r3, r3, r2
  403404:	42bb      	cmp	r3, r7
  403406:	dcf1      	bgt.n	4033ec <_printf_float+0x41c>
  403408:	e704      	b.n	403214 <_printf_float+0x244>
  40340a:	2700      	movs	r7, #0
  40340c:	f104 0819 	add.w	r8, r4, #25
  403410:	e7f5      	b.n	4033fe <_printf_float+0x42e>
  403412:	bf00      	nop

00403414 <_printf_common>:
  403414:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  403418:	4691      	mov	r9, r2
  40341a:	461f      	mov	r7, r3
  40341c:	688a      	ldr	r2, [r1, #8]
  40341e:	690b      	ldr	r3, [r1, #16]
  403420:	f8dd 8020 	ldr.w	r8, [sp, #32]
  403424:	4293      	cmp	r3, r2
  403426:	bfb8      	it	lt
  403428:	4613      	movlt	r3, r2
  40342a:	f8c9 3000 	str.w	r3, [r9]
  40342e:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
  403432:	4606      	mov	r6, r0
  403434:	460c      	mov	r4, r1
  403436:	b112      	cbz	r2, 40343e <_printf_common+0x2a>
  403438:	3301      	adds	r3, #1
  40343a:	f8c9 3000 	str.w	r3, [r9]
  40343e:	6823      	ldr	r3, [r4, #0]
  403440:	0699      	lsls	r1, r3, #26
  403442:	bf42      	ittt	mi
  403444:	f8d9 3000 	ldrmi.w	r3, [r9]
  403448:	3302      	addmi	r3, #2
  40344a:	f8c9 3000 	strmi.w	r3, [r9]
  40344e:	6825      	ldr	r5, [r4, #0]
  403450:	f015 0506 	ands.w	r5, r5, #6
  403454:	d107      	bne.n	403466 <_printf_common+0x52>
  403456:	f104 0a19 	add.w	sl, r4, #25
  40345a:	68e3      	ldr	r3, [r4, #12]
  40345c:	f8d9 2000 	ldr.w	r2, [r9]
  403460:	1a9b      	subs	r3, r3, r2
  403462:	42ab      	cmp	r3, r5
  403464:	dc28      	bgt.n	4034b8 <_printf_common+0xa4>
  403466:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
  40346a:	6822      	ldr	r2, [r4, #0]
  40346c:	3300      	adds	r3, #0
  40346e:	bf18      	it	ne
  403470:	2301      	movne	r3, #1
  403472:	0692      	lsls	r2, r2, #26
  403474:	d42d      	bmi.n	4034d2 <_printf_common+0xbe>
  403476:	f104 0243 	add.w	r2, r4, #67	; 0x43
  40347a:	4639      	mov	r1, r7
  40347c:	4630      	mov	r0, r6
  40347e:	47c0      	blx	r8
  403480:	3001      	adds	r0, #1
  403482:	d020      	beq.n	4034c6 <_printf_common+0xb2>
  403484:	6823      	ldr	r3, [r4, #0]
  403486:	68e5      	ldr	r5, [r4, #12]
  403488:	f8d9 2000 	ldr.w	r2, [r9]
  40348c:	f003 0306 	and.w	r3, r3, #6
  403490:	2b04      	cmp	r3, #4
  403492:	bf08      	it	eq
  403494:	1aad      	subeq	r5, r5, r2
  403496:	68a3      	ldr	r3, [r4, #8]
  403498:	6922      	ldr	r2, [r4, #16]
  40349a:	bf0c      	ite	eq
  40349c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
  4034a0:	2500      	movne	r5, #0
  4034a2:	4293      	cmp	r3, r2
  4034a4:	bfc4      	itt	gt
  4034a6:	1a9b      	subgt	r3, r3, r2
  4034a8:	18ed      	addgt	r5, r5, r3
  4034aa:	f04f 0900 	mov.w	r9, #0
  4034ae:	341a      	adds	r4, #26
  4034b0:	454d      	cmp	r5, r9
  4034b2:	d11a      	bne.n	4034ea <_printf_common+0xd6>
  4034b4:	2000      	movs	r0, #0
  4034b6:	e008      	b.n	4034ca <_printf_common+0xb6>
  4034b8:	2301      	movs	r3, #1
  4034ba:	4652      	mov	r2, sl
  4034bc:	4639      	mov	r1, r7
  4034be:	4630      	mov	r0, r6
  4034c0:	47c0      	blx	r8
  4034c2:	3001      	adds	r0, #1
  4034c4:	d103      	bne.n	4034ce <_printf_common+0xba>
  4034c6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  4034ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4034ce:	3501      	adds	r5, #1
  4034d0:	e7c3      	b.n	40345a <_printf_common+0x46>
  4034d2:	18e1      	adds	r1, r4, r3
  4034d4:	1c5a      	adds	r2, r3, #1
  4034d6:	2030      	movs	r0, #48	; 0x30
  4034d8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
  4034dc:	4422      	add	r2, r4
  4034de:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
  4034e2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
  4034e6:	3302      	adds	r3, #2
  4034e8:	e7c5      	b.n	403476 <_printf_common+0x62>
  4034ea:	2301      	movs	r3, #1
  4034ec:	4622      	mov	r2, r4
  4034ee:	4639      	mov	r1, r7
  4034f0:	4630      	mov	r0, r6
  4034f2:	47c0      	blx	r8
  4034f4:	3001      	adds	r0, #1
  4034f6:	d0e6      	beq.n	4034c6 <_printf_common+0xb2>
  4034f8:	f109 0901 	add.w	r9, r9, #1
  4034fc:	e7d8      	b.n	4034b0 <_printf_common+0x9c>
	...

00403500 <_printf_i>:
  403500:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  403504:	4606      	mov	r6, r0
  403506:	460c      	mov	r4, r1
  403508:	f101 0043 	add.w	r0, r1, #67	; 0x43
  40350c:	7e09      	ldrb	r1, [r1, #24]
  40350e:	b085      	sub	sp, #20
  403510:	296e      	cmp	r1, #110	; 0x6e
  403512:	4698      	mov	r8, r3
  403514:	4617      	mov	r7, r2
  403516:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403518:	f000 80ba 	beq.w	403690 <_printf_i+0x190>
  40351c:	d824      	bhi.n	403568 <_printf_i+0x68>
  40351e:	2963      	cmp	r1, #99	; 0x63
  403520:	d039      	beq.n	403596 <_printf_i+0x96>
  403522:	d80a      	bhi.n	40353a <_printf_i+0x3a>
  403524:	2900      	cmp	r1, #0
  403526:	f000 80c3 	beq.w	4036b0 <_printf_i+0x1b0>
  40352a:	2958      	cmp	r1, #88	; 0x58
  40352c:	f000 8091 	beq.w	403652 <_printf_i+0x152>
  403530:	f104 0542 	add.w	r5, r4, #66	; 0x42
  403534:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
  403538:	e035      	b.n	4035a6 <_printf_i+0xa6>
  40353a:	2964      	cmp	r1, #100	; 0x64
  40353c:	d001      	beq.n	403542 <_printf_i+0x42>
  40353e:	2969      	cmp	r1, #105	; 0x69
  403540:	d1f6      	bne.n	403530 <_printf_i+0x30>
  403542:	6825      	ldr	r5, [r4, #0]
  403544:	681a      	ldr	r2, [r3, #0]
  403546:	f015 0f80 	tst.w	r5, #128	; 0x80
  40354a:	f102 0104 	add.w	r1, r2, #4
  40354e:	d02c      	beq.n	4035aa <_printf_i+0xaa>
  403550:	6812      	ldr	r2, [r2, #0]
  403552:	6019      	str	r1, [r3, #0]
  403554:	2a00      	cmp	r2, #0
  403556:	da03      	bge.n	403560 <_printf_i+0x60>
  403558:	232d      	movs	r3, #45	; 0x2d
  40355a:	4252      	negs	r2, r2
  40355c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  403560:	f8df c1bc 	ldr.w	ip, [pc, #444]	; 403720 <_printf_i+0x220>
  403564:	230a      	movs	r3, #10
  403566:	e03f      	b.n	4035e8 <_printf_i+0xe8>
  403568:	2973      	cmp	r1, #115	; 0x73
  40356a:	f000 80a5 	beq.w	4036b8 <_printf_i+0x1b8>
  40356e:	d808      	bhi.n	403582 <_printf_i+0x82>
  403570:	296f      	cmp	r1, #111	; 0x6f
  403572:	d021      	beq.n	4035b8 <_printf_i+0xb8>
  403574:	2970      	cmp	r1, #112	; 0x70
  403576:	d1db      	bne.n	403530 <_printf_i+0x30>
  403578:	6822      	ldr	r2, [r4, #0]
  40357a:	f042 0220 	orr.w	r2, r2, #32
  40357e:	6022      	str	r2, [r4, #0]
  403580:	e003      	b.n	40358a <_printf_i+0x8a>
  403582:	2975      	cmp	r1, #117	; 0x75
  403584:	d018      	beq.n	4035b8 <_printf_i+0xb8>
  403586:	2978      	cmp	r1, #120	; 0x78
  403588:	d1d2      	bne.n	403530 <_printf_i+0x30>
  40358a:	2278      	movs	r2, #120	; 0x78
  40358c:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
  403590:	f8df c190 	ldr.w	ip, [pc, #400]	; 403724 <_printf_i+0x224>
  403594:	e061      	b.n	40365a <_printf_i+0x15a>
  403596:	681a      	ldr	r2, [r3, #0]
  403598:	1d11      	adds	r1, r2, #4
  40359a:	6019      	str	r1, [r3, #0]
  40359c:	6813      	ldr	r3, [r2, #0]
  40359e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  4035a2:	f104 0542 	add.w	r5, r4, #66	; 0x42
  4035a6:	2301      	movs	r3, #1
  4035a8:	e093      	b.n	4036d2 <_printf_i+0x1d2>
  4035aa:	6812      	ldr	r2, [r2, #0]
  4035ac:	6019      	str	r1, [r3, #0]
  4035ae:	f015 0f40 	tst.w	r5, #64	; 0x40
  4035b2:	bf18      	it	ne
  4035b4:	b212      	sxthne	r2, r2
  4035b6:	e7cd      	b.n	403554 <_printf_i+0x54>
  4035b8:	f8d4 c000 	ldr.w	ip, [r4]
  4035bc:	681a      	ldr	r2, [r3, #0]
  4035be:	f01c 0f80 	tst.w	ip, #128	; 0x80
  4035c2:	f102 0504 	add.w	r5, r2, #4
  4035c6:	601d      	str	r5, [r3, #0]
  4035c8:	d001      	beq.n	4035ce <_printf_i+0xce>
  4035ca:	6812      	ldr	r2, [r2, #0]
  4035cc:	e003      	b.n	4035d6 <_printf_i+0xd6>
  4035ce:	f01c 0f40 	tst.w	ip, #64	; 0x40
  4035d2:	d0fa      	beq.n	4035ca <_printf_i+0xca>
  4035d4:	8812      	ldrh	r2, [r2, #0]
  4035d6:	f8df c148 	ldr.w	ip, [pc, #328]	; 403720 <_printf_i+0x220>
  4035da:	296f      	cmp	r1, #111	; 0x6f
  4035dc:	bf0c      	ite	eq
  4035de:	2308      	moveq	r3, #8
  4035e0:	230a      	movne	r3, #10
  4035e2:	2100      	movs	r1, #0
  4035e4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
  4035e8:	6865      	ldr	r5, [r4, #4]
  4035ea:	60a5      	str	r5, [r4, #8]
  4035ec:	2d00      	cmp	r5, #0
  4035ee:	bfa2      	ittt	ge
  4035f0:	6821      	ldrge	r1, [r4, #0]
  4035f2:	f021 0104 	bicge.w	r1, r1, #4
  4035f6:	6021      	strge	r1, [r4, #0]
  4035f8:	b90a      	cbnz	r2, 4035fe <_printf_i+0xfe>
  4035fa:	2d00      	cmp	r5, #0
  4035fc:	d046      	beq.n	40368c <_printf_i+0x18c>
  4035fe:	4605      	mov	r5, r0
  403600:	fbb2 f1f3 	udiv	r1, r2, r3
  403604:	fb03 2e11 	mls	lr, r3, r1, r2
  403608:	4293      	cmp	r3, r2
  40360a:	f81c e00e 	ldrb.w	lr, [ip, lr]
  40360e:	f805 ed01 	strb.w	lr, [r5, #-1]!
  403612:	d939      	bls.n	403688 <_printf_i+0x188>
  403614:	2b08      	cmp	r3, #8
  403616:	d10b      	bne.n	403630 <_printf_i+0x130>
  403618:	6823      	ldr	r3, [r4, #0]
  40361a:	07da      	lsls	r2, r3, #31
  40361c:	d508      	bpl.n	403630 <_printf_i+0x130>
  40361e:	6923      	ldr	r3, [r4, #16]
  403620:	6862      	ldr	r2, [r4, #4]
  403622:	429a      	cmp	r2, r3
  403624:	bfde      	ittt	le
  403626:	2330      	movle	r3, #48	; 0x30
  403628:	f805 3c01 	strble.w	r3, [r5, #-1]
  40362c:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
  403630:	1b40      	subs	r0, r0, r5
  403632:	6120      	str	r0, [r4, #16]
  403634:	f8cd 8000 	str.w	r8, [sp]
  403638:	463b      	mov	r3, r7
  40363a:	aa03      	add	r2, sp, #12
  40363c:	4621      	mov	r1, r4
  40363e:	4630      	mov	r0, r6
  403640:	f7ff fee8 	bl	403414 <_printf_common>
  403644:	3001      	adds	r0, #1
  403646:	d149      	bne.n	4036dc <_printf_i+0x1dc>
  403648:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  40364c:	b005      	add	sp, #20
  40364e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403652:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 403720 <_printf_i+0x220>
  403656:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
  40365a:	681d      	ldr	r5, [r3, #0]
  40365c:	6821      	ldr	r1, [r4, #0]
  40365e:	f855 2b04 	ldr.w	r2, [r5], #4
  403662:	601d      	str	r5, [r3, #0]
  403664:	060d      	lsls	r5, r1, #24
  403666:	d50b      	bpl.n	403680 <_printf_i+0x180>
  403668:	07cd      	lsls	r5, r1, #31
  40366a:	bf44      	itt	mi
  40366c:	f041 0120 	orrmi.w	r1, r1, #32
  403670:	6021      	strmi	r1, [r4, #0]
  403672:	b91a      	cbnz	r2, 40367c <_printf_i+0x17c>
  403674:	6823      	ldr	r3, [r4, #0]
  403676:	f023 0320 	bic.w	r3, r3, #32
  40367a:	6023      	str	r3, [r4, #0]
  40367c:	2310      	movs	r3, #16
  40367e:	e7b0      	b.n	4035e2 <_printf_i+0xe2>
  403680:	064b      	lsls	r3, r1, #25
  403682:	bf48      	it	mi
  403684:	b292      	uxthmi	r2, r2
  403686:	e7ef      	b.n	403668 <_printf_i+0x168>
  403688:	460a      	mov	r2, r1
  40368a:	e7b9      	b.n	403600 <_printf_i+0x100>
  40368c:	4605      	mov	r5, r0
  40368e:	e7c1      	b.n	403614 <_printf_i+0x114>
  403690:	681a      	ldr	r2, [r3, #0]
  403692:	f8d4 c000 	ldr.w	ip, [r4]
  403696:	6961      	ldr	r1, [r4, #20]
  403698:	1d15      	adds	r5, r2, #4
  40369a:	601d      	str	r5, [r3, #0]
  40369c:	f01c 0f80 	tst.w	ip, #128	; 0x80
  4036a0:	6813      	ldr	r3, [r2, #0]
  4036a2:	d001      	beq.n	4036a8 <_printf_i+0x1a8>
  4036a4:	6019      	str	r1, [r3, #0]
  4036a6:	e003      	b.n	4036b0 <_printf_i+0x1b0>
  4036a8:	f01c 0f40 	tst.w	ip, #64	; 0x40
  4036ac:	d0fa      	beq.n	4036a4 <_printf_i+0x1a4>
  4036ae:	8019      	strh	r1, [r3, #0]
  4036b0:	2300      	movs	r3, #0
  4036b2:	6123      	str	r3, [r4, #16]
  4036b4:	4605      	mov	r5, r0
  4036b6:	e7bd      	b.n	403634 <_printf_i+0x134>
  4036b8:	681a      	ldr	r2, [r3, #0]
  4036ba:	1d11      	adds	r1, r2, #4
  4036bc:	6019      	str	r1, [r3, #0]
  4036be:	6815      	ldr	r5, [r2, #0]
  4036c0:	6862      	ldr	r2, [r4, #4]
  4036c2:	2100      	movs	r1, #0
  4036c4:	4628      	mov	r0, r5
  4036c6:	f002 fcd3 	bl	406070 <memchr>
  4036ca:	b108      	cbz	r0, 4036d0 <_printf_i+0x1d0>
  4036cc:	1b40      	subs	r0, r0, r5
  4036ce:	6060      	str	r0, [r4, #4]
  4036d0:	6863      	ldr	r3, [r4, #4]
  4036d2:	6123      	str	r3, [r4, #16]
  4036d4:	2300      	movs	r3, #0
  4036d6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  4036da:	e7ab      	b.n	403634 <_printf_i+0x134>
  4036dc:	6923      	ldr	r3, [r4, #16]
  4036de:	462a      	mov	r2, r5
  4036e0:	4639      	mov	r1, r7
  4036e2:	4630      	mov	r0, r6
  4036e4:	47c0      	blx	r8
  4036e6:	3001      	adds	r0, #1
  4036e8:	d0ae      	beq.n	403648 <_printf_i+0x148>
  4036ea:	6823      	ldr	r3, [r4, #0]
  4036ec:	079b      	lsls	r3, r3, #30
  4036ee:	d413      	bmi.n	403718 <_printf_i+0x218>
  4036f0:	68e0      	ldr	r0, [r4, #12]
  4036f2:	9b03      	ldr	r3, [sp, #12]
  4036f4:	4298      	cmp	r0, r3
  4036f6:	bfb8      	it	lt
  4036f8:	4618      	movlt	r0, r3
  4036fa:	e7a7      	b.n	40364c <_printf_i+0x14c>
  4036fc:	2301      	movs	r3, #1
  4036fe:	464a      	mov	r2, r9
  403700:	4639      	mov	r1, r7
  403702:	4630      	mov	r0, r6
  403704:	47c0      	blx	r8
  403706:	3001      	adds	r0, #1
  403708:	d09e      	beq.n	403648 <_printf_i+0x148>
  40370a:	3501      	adds	r5, #1
  40370c:	68e3      	ldr	r3, [r4, #12]
  40370e:	9a03      	ldr	r2, [sp, #12]
  403710:	1a9b      	subs	r3, r3, r2
  403712:	42ab      	cmp	r3, r5
  403714:	dcf2      	bgt.n	4036fc <_printf_i+0x1fc>
  403716:	e7eb      	b.n	4036f0 <_printf_i+0x1f0>
  403718:	2500      	movs	r5, #0
  40371a:	f104 0919 	add.w	r9, r4, #25
  40371e:	e7f5      	b.n	40370c <_printf_i+0x20c>
  403720:	00408406 	.word	0x00408406
  403724:	00408417 	.word	0x00408417

00403728 <iprintf>:
  403728:	b40f      	push	{r0, r1, r2, r3}
  40372a:	4b0a      	ldr	r3, [pc, #40]	; (403754 <iprintf+0x2c>)
  40372c:	b513      	push	{r0, r1, r4, lr}
  40372e:	681c      	ldr	r4, [r3, #0]
  403730:	b124      	cbz	r4, 40373c <iprintf+0x14>
  403732:	69a3      	ldr	r3, [r4, #24]
  403734:	b913      	cbnz	r3, 40373c <iprintf+0x14>
  403736:	4620      	mov	r0, r4
  403738:	f002 f84e 	bl	4057d8 <__sinit>
  40373c:	ab05      	add	r3, sp, #20
  40373e:	9a04      	ldr	r2, [sp, #16]
  403740:	68a1      	ldr	r1, [r4, #8]
  403742:	9301      	str	r3, [sp, #4]
  403744:	4620      	mov	r0, r4
  403746:	f003 f9b5 	bl	406ab4 <_vfiprintf_r>
  40374a:	b002      	add	sp, #8
  40374c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  403750:	b004      	add	sp, #16
  403752:	4770      	bx	lr
  403754:	20000014 	.word	0x20000014

00403758 <_puts_r>:
  403758:	b570      	push	{r4, r5, r6, lr}
  40375a:	460e      	mov	r6, r1
  40375c:	4605      	mov	r5, r0
  40375e:	b118      	cbz	r0, 403768 <_puts_r+0x10>
  403760:	6983      	ldr	r3, [r0, #24]
  403762:	b90b      	cbnz	r3, 403768 <_puts_r+0x10>
  403764:	f002 f838 	bl	4057d8 <__sinit>
  403768:	69ab      	ldr	r3, [r5, #24]
  40376a:	68ac      	ldr	r4, [r5, #8]
  40376c:	b913      	cbnz	r3, 403774 <_puts_r+0x1c>
  40376e:	4628      	mov	r0, r5
  403770:	f002 f832 	bl	4057d8 <__sinit>
  403774:	4b2c      	ldr	r3, [pc, #176]	; (403828 <_puts_r+0xd0>)
  403776:	429c      	cmp	r4, r3
  403778:	d120      	bne.n	4037bc <_puts_r+0x64>
  40377a:	686c      	ldr	r4, [r5, #4]
  40377c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40377e:	07db      	lsls	r3, r3, #31
  403780:	d405      	bmi.n	40378e <_puts_r+0x36>
  403782:	89a3      	ldrh	r3, [r4, #12]
  403784:	0598      	lsls	r0, r3, #22
  403786:	d402      	bmi.n	40378e <_puts_r+0x36>
  403788:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40378a:	f002 fbf0 	bl	405f6e <__retarget_lock_acquire_recursive>
  40378e:	89a3      	ldrh	r3, [r4, #12]
  403790:	0719      	lsls	r1, r3, #28
  403792:	d51d      	bpl.n	4037d0 <_puts_r+0x78>
  403794:	6923      	ldr	r3, [r4, #16]
  403796:	b1db      	cbz	r3, 4037d0 <_puts_r+0x78>
  403798:	3e01      	subs	r6, #1
  40379a:	68a3      	ldr	r3, [r4, #8]
  40379c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
  4037a0:	3b01      	subs	r3, #1
  4037a2:	60a3      	str	r3, [r4, #8]
  4037a4:	bb39      	cbnz	r1, 4037f6 <_puts_r+0x9e>
  4037a6:	2b00      	cmp	r3, #0
  4037a8:	da38      	bge.n	40381c <_puts_r+0xc4>
  4037aa:	4622      	mov	r2, r4
  4037ac:	210a      	movs	r1, #10
  4037ae:	4628      	mov	r0, r5
  4037b0:	f001 f800 	bl	4047b4 <__swbuf_r>
  4037b4:	3001      	adds	r0, #1
  4037b6:	d011      	beq.n	4037dc <_puts_r+0x84>
  4037b8:	250a      	movs	r5, #10
  4037ba:	e011      	b.n	4037e0 <_puts_r+0x88>
  4037bc:	4b1b      	ldr	r3, [pc, #108]	; (40382c <_puts_r+0xd4>)
  4037be:	429c      	cmp	r4, r3
  4037c0:	d101      	bne.n	4037c6 <_puts_r+0x6e>
  4037c2:	68ac      	ldr	r4, [r5, #8]
  4037c4:	e7da      	b.n	40377c <_puts_r+0x24>
  4037c6:	4b1a      	ldr	r3, [pc, #104]	; (403830 <_puts_r+0xd8>)
  4037c8:	429c      	cmp	r4, r3
  4037ca:	bf08      	it	eq
  4037cc:	68ec      	ldreq	r4, [r5, #12]
  4037ce:	e7d5      	b.n	40377c <_puts_r+0x24>
  4037d0:	4621      	mov	r1, r4
  4037d2:	4628      	mov	r0, r5
  4037d4:	f001 f840 	bl	404858 <__swsetup_r>
  4037d8:	2800      	cmp	r0, #0
  4037da:	d0dd      	beq.n	403798 <_puts_r+0x40>
  4037dc:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
  4037e0:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4037e2:	07da      	lsls	r2, r3, #31
  4037e4:	d405      	bmi.n	4037f2 <_puts_r+0x9a>
  4037e6:	89a3      	ldrh	r3, [r4, #12]
  4037e8:	059b      	lsls	r3, r3, #22
  4037ea:	d402      	bmi.n	4037f2 <_puts_r+0x9a>
  4037ec:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4037ee:	f002 fbbf 	bl	405f70 <__retarget_lock_release_recursive>
  4037f2:	4628      	mov	r0, r5
  4037f4:	bd70      	pop	{r4, r5, r6, pc}
  4037f6:	2b00      	cmp	r3, #0
  4037f8:	da04      	bge.n	403804 <_puts_r+0xac>
  4037fa:	69a2      	ldr	r2, [r4, #24]
  4037fc:	429a      	cmp	r2, r3
  4037fe:	dc06      	bgt.n	40380e <_puts_r+0xb6>
  403800:	290a      	cmp	r1, #10
  403802:	d004      	beq.n	40380e <_puts_r+0xb6>
  403804:	6823      	ldr	r3, [r4, #0]
  403806:	1c5a      	adds	r2, r3, #1
  403808:	6022      	str	r2, [r4, #0]
  40380a:	7019      	strb	r1, [r3, #0]
  40380c:	e7c5      	b.n	40379a <_puts_r+0x42>
  40380e:	4622      	mov	r2, r4
  403810:	4628      	mov	r0, r5
  403812:	f000 ffcf 	bl	4047b4 <__swbuf_r>
  403816:	3001      	adds	r0, #1
  403818:	d1bf      	bne.n	40379a <_puts_r+0x42>
  40381a:	e7df      	b.n	4037dc <_puts_r+0x84>
  40381c:	6823      	ldr	r3, [r4, #0]
  40381e:	250a      	movs	r5, #10
  403820:	1c5a      	adds	r2, r3, #1
  403822:	6022      	str	r2, [r4, #0]
  403824:	701d      	strb	r5, [r3, #0]
  403826:	e7db      	b.n	4037e0 <_puts_r+0x88>
  403828:	004085a8 	.word	0x004085a8
  40382c:	004085c8 	.word	0x004085c8
  403830:	00408588 	.word	0x00408588

00403834 <puts>:
  403834:	4b02      	ldr	r3, [pc, #8]	; (403840 <puts+0xc>)
  403836:	4601      	mov	r1, r0
  403838:	6818      	ldr	r0, [r3, #0]
  40383a:	f7ff bf8d 	b.w	403758 <_puts_r>
  40383e:	bf00      	nop
  403840:	20000014 	.word	0x20000014

00403844 <setbuf>:
  403844:	2900      	cmp	r1, #0
  403846:	f44f 6380 	mov.w	r3, #1024	; 0x400
  40384a:	bf0c      	ite	eq
  40384c:	2202      	moveq	r2, #2
  40384e:	2200      	movne	r2, #0
  403850:	f000 b800 	b.w	403854 <setvbuf>

00403854 <setvbuf>:
  403854:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  403858:	461e      	mov	r6, r3
  40385a:	4b5b      	ldr	r3, [pc, #364]	; (4039c8 <setvbuf+0x174>)
  40385c:	681d      	ldr	r5, [r3, #0]
  40385e:	4604      	mov	r4, r0
  403860:	460f      	mov	r7, r1
  403862:	4690      	mov	r8, r2
  403864:	b125      	cbz	r5, 403870 <setvbuf+0x1c>
  403866:	69ab      	ldr	r3, [r5, #24]
  403868:	b913      	cbnz	r3, 403870 <setvbuf+0x1c>
  40386a:	4628      	mov	r0, r5
  40386c:	f001 ffb4 	bl	4057d8 <__sinit>
  403870:	4b56      	ldr	r3, [pc, #344]	; (4039cc <setvbuf+0x178>)
  403872:	429c      	cmp	r4, r3
  403874:	d166      	bne.n	403944 <setvbuf+0xf0>
  403876:	686c      	ldr	r4, [r5, #4]
  403878:	f1b8 0f02 	cmp.w	r8, #2
  40387c:	d006      	beq.n	40388c <setvbuf+0x38>
  40387e:	f1b8 0f01 	cmp.w	r8, #1
  403882:	f200 809d 	bhi.w	4039c0 <setvbuf+0x16c>
  403886:	2e00      	cmp	r6, #0
  403888:	f2c0 809a 	blt.w	4039c0 <setvbuf+0x16c>
  40388c:	6e63      	ldr	r3, [r4, #100]	; 0x64
  40388e:	07da      	lsls	r2, r3, #31
  403890:	d405      	bmi.n	40389e <setvbuf+0x4a>
  403892:	89a3      	ldrh	r3, [r4, #12]
  403894:	059b      	lsls	r3, r3, #22
  403896:	d402      	bmi.n	40389e <setvbuf+0x4a>
  403898:	6da0      	ldr	r0, [r4, #88]	; 0x58
  40389a:	f002 fb68 	bl	405f6e <__retarget_lock_acquire_recursive>
  40389e:	4621      	mov	r1, r4
  4038a0:	4628      	mov	r0, r5
  4038a2:	f001 ff05 	bl	4056b0 <_fflush_r>
  4038a6:	6b61      	ldr	r1, [r4, #52]	; 0x34
  4038a8:	b141      	cbz	r1, 4038bc <setvbuf+0x68>
  4038aa:	f104 0344 	add.w	r3, r4, #68	; 0x44
  4038ae:	4299      	cmp	r1, r3
  4038b0:	d002      	beq.n	4038b8 <setvbuf+0x64>
  4038b2:	4628      	mov	r0, r5
  4038b4:	f003 f82e 	bl	406914 <_free_r>
  4038b8:	2300      	movs	r3, #0
  4038ba:	6363      	str	r3, [r4, #52]	; 0x34
  4038bc:	2300      	movs	r3, #0
  4038be:	61a3      	str	r3, [r4, #24]
  4038c0:	6063      	str	r3, [r4, #4]
  4038c2:	89a3      	ldrh	r3, [r4, #12]
  4038c4:	0618      	lsls	r0, r3, #24
  4038c6:	d503      	bpl.n	4038d0 <setvbuf+0x7c>
  4038c8:	6921      	ldr	r1, [r4, #16]
  4038ca:	4628      	mov	r0, r5
  4038cc:	f003 f822 	bl	406914 <_free_r>
  4038d0:	89a3      	ldrh	r3, [r4, #12]
  4038d2:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
  4038d6:	f023 0303 	bic.w	r3, r3, #3
  4038da:	f1b8 0f02 	cmp.w	r8, #2
  4038de:	81a3      	strh	r3, [r4, #12]
  4038e0:	d06a      	beq.n	4039b8 <setvbuf+0x164>
  4038e2:	ab01      	add	r3, sp, #4
  4038e4:	466a      	mov	r2, sp
  4038e6:	4621      	mov	r1, r4
  4038e8:	4628      	mov	r0, r5
  4038ea:	f002 fb42 	bl	405f72 <__swhatbuf_r>
  4038ee:	89a3      	ldrh	r3, [r4, #12]
  4038f0:	4318      	orrs	r0, r3
  4038f2:	81a0      	strh	r0, [r4, #12]
  4038f4:	2e00      	cmp	r6, #0
  4038f6:	d12f      	bne.n	403958 <setvbuf+0x104>
  4038f8:	9e00      	ldr	r6, [sp, #0]
  4038fa:	4630      	mov	r0, r6
  4038fc:	f002 fb9e 	bl	40603c <malloc>
  403900:	4607      	mov	r7, r0
  403902:	2800      	cmp	r0, #0
  403904:	d153      	bne.n	4039ae <setvbuf+0x15a>
  403906:	f8dd 9000 	ldr.w	r9, [sp]
  40390a:	45b1      	cmp	r9, r6
  40390c:	d148      	bne.n	4039a0 <setvbuf+0x14c>
  40390e:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
  403912:	2200      	movs	r2, #0
  403914:	60a2      	str	r2, [r4, #8]
  403916:	f104 0247 	add.w	r2, r4, #71	; 0x47
  40391a:	6022      	str	r2, [r4, #0]
  40391c:	6122      	str	r2, [r4, #16]
  40391e:	2201      	movs	r2, #1
  403920:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  403924:	6162      	str	r2, [r4, #20]
  403926:	6e62      	ldr	r2, [r4, #100]	; 0x64
  403928:	f043 0302 	orr.w	r3, r3, #2
  40392c:	07d1      	lsls	r1, r2, #31
  40392e:	81a3      	strh	r3, [r4, #12]
  403930:	d404      	bmi.n	40393c <setvbuf+0xe8>
  403932:	059b      	lsls	r3, r3, #22
  403934:	d402      	bmi.n	40393c <setvbuf+0xe8>
  403936:	6da0      	ldr	r0, [r4, #88]	; 0x58
  403938:	f002 fb1a 	bl	405f70 <__retarget_lock_release_recursive>
  40393c:	4628      	mov	r0, r5
  40393e:	b003      	add	sp, #12
  403940:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  403944:	4b22      	ldr	r3, [pc, #136]	; (4039d0 <setvbuf+0x17c>)
  403946:	429c      	cmp	r4, r3
  403948:	d101      	bne.n	40394e <setvbuf+0xfa>
  40394a:	68ac      	ldr	r4, [r5, #8]
  40394c:	e794      	b.n	403878 <setvbuf+0x24>
  40394e:	4b21      	ldr	r3, [pc, #132]	; (4039d4 <setvbuf+0x180>)
  403950:	429c      	cmp	r4, r3
  403952:	bf08      	it	eq
  403954:	68ec      	ldreq	r4, [r5, #12]
  403956:	e78f      	b.n	403878 <setvbuf+0x24>
  403958:	2f00      	cmp	r7, #0
  40395a:	d0ce      	beq.n	4038fa <setvbuf+0xa6>
  40395c:	69ab      	ldr	r3, [r5, #24]
  40395e:	b913      	cbnz	r3, 403966 <setvbuf+0x112>
  403960:	4628      	mov	r0, r5
  403962:	f001 ff39 	bl	4057d8 <__sinit>
  403966:	f1b8 0f01 	cmp.w	r8, #1
  40396a:	bf08      	it	eq
  40396c:	89a3      	ldrheq	r3, [r4, #12]
  40396e:	6027      	str	r7, [r4, #0]
  403970:	bf04      	itt	eq
  403972:	f043 0301 	orreq.w	r3, r3, #1
  403976:	81a3      	strheq	r3, [r4, #12]
  403978:	89a3      	ldrh	r3, [r4, #12]
  40397a:	f013 0208 	ands.w	r2, r3, #8
  40397e:	e9c4 7604 	strd	r7, r6, [r4, #16]
  403982:	d01b      	beq.n	4039bc <setvbuf+0x168>
  403984:	07da      	lsls	r2, r3, #31
  403986:	bf41      	itttt	mi
  403988:	2200      	movmi	r2, #0
  40398a:	4276      	negmi	r6, r6
  40398c:	60a2      	strmi	r2, [r4, #8]
  40398e:	61a6      	strmi	r6, [r4, #24]
  403990:	bf58      	it	pl
  403992:	60a6      	strpl	r6, [r4, #8]
  403994:	6e65      	ldr	r5, [r4, #100]	; 0x64
  403996:	f015 0501 	ands.w	r5, r5, #1
  40399a:	d0ca      	beq.n	403932 <setvbuf+0xde>
  40399c:	2500      	movs	r5, #0
  40399e:	e7cd      	b.n	40393c <setvbuf+0xe8>
  4039a0:	4648      	mov	r0, r9
  4039a2:	f002 fb4b 	bl	40603c <malloc>
  4039a6:	4607      	mov	r7, r0
  4039a8:	2800      	cmp	r0, #0
  4039aa:	d0b0      	beq.n	40390e <setvbuf+0xba>
  4039ac:	464e      	mov	r6, r9
  4039ae:	89a3      	ldrh	r3, [r4, #12]
  4039b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  4039b4:	81a3      	strh	r3, [r4, #12]
  4039b6:	e7d1      	b.n	40395c <setvbuf+0x108>
  4039b8:	2500      	movs	r5, #0
  4039ba:	e7aa      	b.n	403912 <setvbuf+0xbe>
  4039bc:	60a2      	str	r2, [r4, #8]
  4039be:	e7e9      	b.n	403994 <setvbuf+0x140>
  4039c0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
  4039c4:	e7ba      	b.n	40393c <setvbuf+0xe8>
  4039c6:	bf00      	nop
  4039c8:	20000014 	.word	0x20000014
  4039cc:	004085a8 	.word	0x004085a8
  4039d0:	004085c8 	.word	0x004085c8
  4039d4:	00408588 	.word	0x00408588

004039d8 <strcmp>:
  4039d8:	f810 2b01 	ldrb.w	r2, [r0], #1
  4039dc:	f811 3b01 	ldrb.w	r3, [r1], #1
  4039e0:	2a01      	cmp	r2, #1
  4039e2:	bf28      	it	cs
  4039e4:	429a      	cmpcs	r2, r3
  4039e6:	d0f7      	beq.n	4039d8 <strcmp>
  4039e8:	1ad0      	subs	r0, r2, r3
  4039ea:	4770      	bx	lr

004039ec <strcpy>:
  4039ec:	4603      	mov	r3, r0
  4039ee:	f811 2b01 	ldrb.w	r2, [r1], #1
  4039f2:	f803 2b01 	strb.w	r2, [r3], #1
  4039f6:	2a00      	cmp	r2, #0
  4039f8:	d1f9      	bne.n	4039ee <strcpy+0x2>
  4039fa:	4770      	bx	lr

004039fc <strlen>:
  4039fc:	4603      	mov	r3, r0
  4039fe:	f813 2b01 	ldrb.w	r2, [r3], #1
  403a02:	2a00      	cmp	r2, #0
  403a04:	d1fb      	bne.n	4039fe <strlen+0x2>
  403a06:	1a18      	subs	r0, r3, r0
  403a08:	3801      	subs	r0, #1
  403a0a:	4770      	bx	lr

00403a0c <sulp>:
  403a0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  403a10:	460f      	mov	r7, r1
  403a12:	4690      	mov	r8, r2
  403a14:	f002 fe42 	bl	40669c <__ulp>
  403a18:	4604      	mov	r4, r0
  403a1a:	460d      	mov	r5, r1
  403a1c:	f1b8 0f00 	cmp.w	r8, #0
  403a20:	d011      	beq.n	403a46 <sulp+0x3a>
  403a22:	f3c7 530a 	ubfx	r3, r7, #20, #11
  403a26:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
  403a2a:	2b00      	cmp	r3, #0
  403a2c:	dd0b      	ble.n	403a46 <sulp+0x3a>
  403a2e:	051b      	lsls	r3, r3, #20
  403a30:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
  403a34:	2400      	movs	r4, #0
  403a36:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
  403a3a:	4622      	mov	r2, r4
  403a3c:	462b      	mov	r3, r5
  403a3e:	f003 fc09 	bl	407254 <__aeabi_dmul>
  403a42:	4604      	mov	r4, r0
  403a44:	460d      	mov	r5, r1
  403a46:	4620      	mov	r0, r4
  403a48:	4629      	mov	r1, r5
  403a4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00403a50 <_strtod_l>:
  403a50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403a54:	b0a1      	sub	sp, #132	; 0x84
  403a56:	461f      	mov	r7, r3
  403a58:	2300      	movs	r3, #0
  403a5a:	931c      	str	r3, [sp, #112]	; 0x70
  403a5c:	4b9c      	ldr	r3, [pc, #624]	; (403cd0 <_strtod_l+0x280>)
  403a5e:	9217      	str	r2, [sp, #92]	; 0x5c
  403a60:	681b      	ldr	r3, [r3, #0]
  403a62:	9304      	str	r3, [sp, #16]
  403a64:	4683      	mov	fp, r0
  403a66:	4618      	mov	r0, r3
  403a68:	460e      	mov	r6, r1
  403a6a:	f7ff ffc7 	bl	4039fc <strlen>
  403a6e:	f04f 0800 	mov.w	r8, #0
  403a72:	4604      	mov	r4, r0
  403a74:	f04f 0900 	mov.w	r9, #0
  403a78:	961b      	str	r6, [sp, #108]	; 0x6c
  403a7a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  403a7c:	7813      	ldrb	r3, [r2, #0]
  403a7e:	2b0d      	cmp	r3, #13
  403a80:	d832      	bhi.n	403ae8 <_strtod_l+0x98>
  403a82:	2b09      	cmp	r3, #9
  403a84:	d236      	bcs.n	403af4 <_strtod_l+0xa4>
  403a86:	2b00      	cmp	r3, #0
  403a88:	d03e      	beq.n	403b08 <_strtod_l+0xb8>
  403a8a:	2300      	movs	r3, #0
  403a8c:	930d      	str	r3, [sp, #52]	; 0x34
  403a8e:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
  403a90:	782b      	ldrb	r3, [r5, #0]
  403a92:	2b30      	cmp	r3, #48	; 0x30
  403a94:	f040 80aa 	bne.w	403bec <_strtod_l+0x19c>
  403a98:	786b      	ldrb	r3, [r5, #1]
  403a9a:	2b58      	cmp	r3, #88	; 0x58
  403a9c:	d001      	beq.n	403aa2 <_strtod_l+0x52>
  403a9e:	2b78      	cmp	r3, #120	; 0x78
  403aa0:	d167      	bne.n	403b72 <_strtod_l+0x122>
  403aa2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403aa4:	9301      	str	r3, [sp, #4]
  403aa6:	ab1c      	add	r3, sp, #112	; 0x70
  403aa8:	9300      	str	r3, [sp, #0]
  403aaa:	9702      	str	r7, [sp, #8]
  403aac:	ab1d      	add	r3, sp, #116	; 0x74
  403aae:	4a89      	ldr	r2, [pc, #548]	; (403cd4 <_strtod_l+0x284>)
  403ab0:	a91b      	add	r1, sp, #108	; 0x6c
  403ab2:	4658      	mov	r0, fp
  403ab4:	f001 ff7c 	bl	4059b0 <__gethex>
  403ab8:	f010 0407 	ands.w	r4, r0, #7
  403abc:	4606      	mov	r6, r0
  403abe:	d005      	beq.n	403acc <_strtod_l+0x7c>
  403ac0:	2c06      	cmp	r4, #6
  403ac2:	d12b      	bne.n	403b1c <_strtod_l+0xcc>
  403ac4:	3501      	adds	r5, #1
  403ac6:	2300      	movs	r3, #0
  403ac8:	951b      	str	r5, [sp, #108]	; 0x6c
  403aca:	930d      	str	r3, [sp, #52]	; 0x34
  403acc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403ace:	2b00      	cmp	r3, #0
  403ad0:	f040 859d 	bne.w	40460e <_strtod_l+0xbbe>
  403ad4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403ad6:	b1e3      	cbz	r3, 403b12 <_strtod_l+0xc2>
  403ad8:	4642      	mov	r2, r8
  403ada:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
  403ade:	4610      	mov	r0, r2
  403ae0:	4619      	mov	r1, r3
  403ae2:	b021      	add	sp, #132	; 0x84
  403ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403ae8:	2b2b      	cmp	r3, #43	; 0x2b
  403aea:	d006      	beq.n	403afa <_strtod_l+0xaa>
  403aec:	2b2d      	cmp	r3, #45	; 0x2d
  403aee:	d013      	beq.n	403b18 <_strtod_l+0xc8>
  403af0:	2b20      	cmp	r3, #32
  403af2:	d1ca      	bne.n	403a8a <_strtod_l+0x3a>
  403af4:	3201      	adds	r2, #1
  403af6:	921b      	str	r2, [sp, #108]	; 0x6c
  403af8:	e7bf      	b.n	403a7a <_strtod_l+0x2a>
  403afa:	2300      	movs	r3, #0
  403afc:	930d      	str	r3, [sp, #52]	; 0x34
  403afe:	1c53      	adds	r3, r2, #1
  403b00:	931b      	str	r3, [sp, #108]	; 0x6c
  403b02:	7853      	ldrb	r3, [r2, #1]
  403b04:	2b00      	cmp	r3, #0
  403b06:	d1c2      	bne.n	403a8e <_strtod_l+0x3e>
  403b08:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  403b0a:	961b      	str	r6, [sp, #108]	; 0x6c
  403b0c:	2b00      	cmp	r3, #0
  403b0e:	f040 857c 	bne.w	40460a <_strtod_l+0xbba>
  403b12:	4642      	mov	r2, r8
  403b14:	464b      	mov	r3, r9
  403b16:	e7e2      	b.n	403ade <_strtod_l+0x8e>
  403b18:	2301      	movs	r3, #1
  403b1a:	e7ef      	b.n	403afc <_strtod_l+0xac>
  403b1c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  403b1e:	b13a      	cbz	r2, 403b30 <_strtod_l+0xe0>
  403b20:	2135      	movs	r1, #53	; 0x35
  403b22:	a81e      	add	r0, sp, #120	; 0x78
  403b24:	f002 feac 	bl	406880 <__copybits>
  403b28:	991c      	ldr	r1, [sp, #112]	; 0x70
  403b2a:	4658      	mov	r0, fp
  403b2c:	f002 fb24 	bl	406178 <_Bfree>
  403b30:	3c01      	subs	r4, #1
  403b32:	2c04      	cmp	r4, #4
  403b34:	d806      	bhi.n	403b44 <_strtod_l+0xf4>
  403b36:	e8df f004 	tbb	[pc, r4]
  403b3a:	030a      	.short	0x030a
  403b3c:	1714      	.short	0x1714
  403b3e:	0a          	.byte	0x0a
  403b3f:	00          	.byte	0x00
  403b40:	e9dd 891e 	ldrd	r8, r9, [sp, #120]	; 0x78
  403b44:	0731      	lsls	r1, r6, #28
  403b46:	d5c1      	bpl.n	403acc <_strtod_l+0x7c>
  403b48:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
  403b4c:	e7be      	b.n	403acc <_strtod_l+0x7c>
  403b4e:	e9dd 831e 	ldrd	r8, r3, [sp, #120]	; 0x78
  403b52:	9a1d      	ldr	r2, [sp, #116]	; 0x74
  403b54:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
  403b58:	f202 4233 	addw	r2, r2, #1075	; 0x433
  403b5c:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
  403b60:	e7f0      	b.n	403b44 <_strtod_l+0xf4>
  403b62:	f8df 9174 	ldr.w	r9, [pc, #372]	; 403cd8 <_strtod_l+0x288>
  403b66:	e7ed      	b.n	403b44 <_strtod_l+0xf4>
  403b68:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
  403b6c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
  403b70:	e7e8      	b.n	403b44 <_strtod_l+0xf4>
  403b72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403b74:	1c5a      	adds	r2, r3, #1
  403b76:	921b      	str	r2, [sp, #108]	; 0x6c
  403b78:	785b      	ldrb	r3, [r3, #1]
  403b7a:	2b30      	cmp	r3, #48	; 0x30
  403b7c:	d0f9      	beq.n	403b72 <_strtod_l+0x122>
  403b7e:	2b00      	cmp	r3, #0
  403b80:	d0a4      	beq.n	403acc <_strtod_l+0x7c>
  403b82:	2301      	movs	r3, #1
  403b84:	f04f 0a00 	mov.w	sl, #0
  403b88:	9305      	str	r3, [sp, #20]
  403b8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403b8c:	9308      	str	r3, [sp, #32]
  403b8e:	f8cd a018 	str.w	sl, [sp, #24]
  403b92:	4657      	mov	r7, sl
  403b94:	220a      	movs	r2, #10
  403b96:	981b      	ldr	r0, [sp, #108]	; 0x6c
  403b98:	7805      	ldrb	r5, [r0, #0]
  403b9a:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
  403b9e:	b2d9      	uxtb	r1, r3
  403ba0:	2909      	cmp	r1, #9
  403ba2:	d925      	bls.n	403bf0 <_strtod_l+0x1a0>
  403ba4:	4622      	mov	r2, r4
  403ba6:	9904      	ldr	r1, [sp, #16]
  403ba8:	f003 f905 	bl	406db6 <strncmp>
  403bac:	b370      	cbz	r0, 403c0c <_strtod_l+0x1bc>
  403bae:	2000      	movs	r0, #0
  403bb0:	462b      	mov	r3, r5
  403bb2:	463c      	mov	r4, r7
  403bb4:	9004      	str	r0, [sp, #16]
  403bb6:	4602      	mov	r2, r0
  403bb8:	2b65      	cmp	r3, #101	; 0x65
  403bba:	d001      	beq.n	403bc0 <_strtod_l+0x170>
  403bbc:	2b45      	cmp	r3, #69	; 0x45
  403bbe:	d113      	bne.n	403be8 <_strtod_l+0x198>
  403bc0:	b91c      	cbnz	r4, 403bca <_strtod_l+0x17a>
  403bc2:	9b05      	ldr	r3, [sp, #20]
  403bc4:	4303      	orrs	r3, r0
  403bc6:	d09f      	beq.n	403b08 <_strtod_l+0xb8>
  403bc8:	2400      	movs	r4, #0
  403bca:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  403bcc:	1c73      	adds	r3, r6, #1
  403bce:	931b      	str	r3, [sp, #108]	; 0x6c
  403bd0:	7873      	ldrb	r3, [r6, #1]
  403bd2:	2b2b      	cmp	r3, #43	; 0x2b
  403bd4:	d073      	beq.n	403cbe <_strtod_l+0x26e>
  403bd6:	2b2d      	cmp	r3, #45	; 0x2d
  403bd8:	d077      	beq.n	403cca <_strtod_l+0x27a>
  403bda:	f04f 0c00 	mov.w	ip, #0
  403bde:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
  403be2:	2909      	cmp	r1, #9
  403be4:	d97e      	bls.n	403ce4 <_strtod_l+0x294>
  403be6:	961b      	str	r6, [sp, #108]	; 0x6c
  403be8:	2500      	movs	r5, #0
  403bea:	e09d      	b.n	403d28 <_strtod_l+0x2d8>
  403bec:	2300      	movs	r3, #0
  403bee:	e7c9      	b.n	403b84 <_strtod_l+0x134>
  403bf0:	2f08      	cmp	r7, #8
  403bf2:	bfd8      	it	le
  403bf4:	9906      	ldrle	r1, [sp, #24]
  403bf6:	f100 0001 	add.w	r0, r0, #1
  403bfa:	bfda      	itte	le
  403bfc:	fb02 3301 	mlale	r3, r2, r1, r3
  403c00:	9306      	strle	r3, [sp, #24]
  403c02:	fb02 3a0a 	mlagt	sl, r2, sl, r3
  403c06:	3701      	adds	r7, #1
  403c08:	901b      	str	r0, [sp, #108]	; 0x6c
  403c0a:	e7c4      	b.n	403b96 <_strtod_l+0x146>
  403c0c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403c0e:	191a      	adds	r2, r3, r4
  403c10:	921b      	str	r2, [sp, #108]	; 0x6c
  403c12:	5d1b      	ldrb	r3, [r3, r4]
  403c14:	2f00      	cmp	r7, #0
  403c16:	d037      	beq.n	403c88 <_strtod_l+0x238>
  403c18:	9004      	str	r0, [sp, #16]
  403c1a:	463c      	mov	r4, r7
  403c1c:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
  403c20:	2a09      	cmp	r2, #9
  403c22:	d912      	bls.n	403c4a <_strtod_l+0x1fa>
  403c24:	2201      	movs	r2, #1
  403c26:	e7c7      	b.n	403bb8 <_strtod_l+0x168>
  403c28:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403c2a:	1c5a      	adds	r2, r3, #1
  403c2c:	921b      	str	r2, [sp, #108]	; 0x6c
  403c2e:	785b      	ldrb	r3, [r3, #1]
  403c30:	3001      	adds	r0, #1
  403c32:	2b30      	cmp	r3, #48	; 0x30
  403c34:	d0f8      	beq.n	403c28 <_strtod_l+0x1d8>
  403c36:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
  403c3a:	2a08      	cmp	r2, #8
  403c3c:	f200 84ec 	bhi.w	404618 <_strtod_l+0xbc8>
  403c40:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  403c42:	9004      	str	r0, [sp, #16]
  403c44:	2000      	movs	r0, #0
  403c46:	9208      	str	r2, [sp, #32]
  403c48:	4604      	mov	r4, r0
  403c4a:	3b30      	subs	r3, #48	; 0x30
  403c4c:	f100 0201 	add.w	r2, r0, #1
  403c50:	d014      	beq.n	403c7c <_strtod_l+0x22c>
  403c52:	9904      	ldr	r1, [sp, #16]
  403c54:	4411      	add	r1, r2
  403c56:	9104      	str	r1, [sp, #16]
  403c58:	4622      	mov	r2, r4
  403c5a:	eb00 0e04 	add.w	lr, r0, r4
  403c5e:	210a      	movs	r1, #10
  403c60:	4572      	cmp	r2, lr
  403c62:	d113      	bne.n	403c8c <_strtod_l+0x23c>
  403c64:	1822      	adds	r2, r4, r0
  403c66:	2a08      	cmp	r2, #8
  403c68:	f104 0401 	add.w	r4, r4, #1
  403c6c:	4404      	add	r4, r0
  403c6e:	dc1c      	bgt.n	403caa <_strtod_l+0x25a>
  403c70:	9906      	ldr	r1, [sp, #24]
  403c72:	220a      	movs	r2, #10
  403c74:	fb02 3301 	mla	r3, r2, r1, r3
  403c78:	9306      	str	r3, [sp, #24]
  403c7a:	2200      	movs	r2, #0
  403c7c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403c7e:	1c59      	adds	r1, r3, #1
  403c80:	911b      	str	r1, [sp, #108]	; 0x6c
  403c82:	785b      	ldrb	r3, [r3, #1]
  403c84:	4610      	mov	r0, r2
  403c86:	e7c9      	b.n	403c1c <_strtod_l+0x1cc>
  403c88:	4638      	mov	r0, r7
  403c8a:	e7d2      	b.n	403c32 <_strtod_l+0x1e2>
  403c8c:	2a08      	cmp	r2, #8
  403c8e:	dc04      	bgt.n	403c9a <_strtod_l+0x24a>
  403c90:	9d06      	ldr	r5, [sp, #24]
  403c92:	434d      	muls	r5, r1
  403c94:	9506      	str	r5, [sp, #24]
  403c96:	3201      	adds	r2, #1
  403c98:	e7e2      	b.n	403c60 <_strtod_l+0x210>
  403c9a:	f102 0c01 	add.w	ip, r2, #1
  403c9e:	f1bc 0f10 	cmp.w	ip, #16
  403ca2:	bfd8      	it	le
  403ca4:	fb01 fa0a 	mulle.w	sl, r1, sl
  403ca8:	e7f5      	b.n	403c96 <_strtod_l+0x246>
  403caa:	2c10      	cmp	r4, #16
  403cac:	bfdc      	itt	le
  403cae:	220a      	movle	r2, #10
  403cb0:	fb02 3a0a 	mlale	sl, r2, sl, r3
  403cb4:	e7e1      	b.n	403c7a <_strtod_l+0x22a>
  403cb6:	2300      	movs	r3, #0
  403cb8:	9304      	str	r3, [sp, #16]
  403cba:	2201      	movs	r2, #1
  403cbc:	e781      	b.n	403bc2 <_strtod_l+0x172>
  403cbe:	f04f 0c00 	mov.w	ip, #0
  403cc2:	1cb3      	adds	r3, r6, #2
  403cc4:	931b      	str	r3, [sp, #108]	; 0x6c
  403cc6:	78b3      	ldrb	r3, [r6, #2]
  403cc8:	e789      	b.n	403bde <_strtod_l+0x18e>
  403cca:	f04f 0c01 	mov.w	ip, #1
  403cce:	e7f8      	b.n	403cc2 <_strtod_l+0x272>
  403cd0:	004085e8 	.word	0x004085e8
  403cd4:	00408428 	.word	0x00408428
  403cd8:	7ff00000 	.word	0x7ff00000
  403cdc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403cde:	1c59      	adds	r1, r3, #1
  403ce0:	911b      	str	r1, [sp, #108]	; 0x6c
  403ce2:	785b      	ldrb	r3, [r3, #1]
  403ce4:	2b30      	cmp	r3, #48	; 0x30
  403ce6:	d0f9      	beq.n	403cdc <_strtod_l+0x28c>
  403ce8:	f1a3 0131 	sub.w	r1, r3, #49	; 0x31
  403cec:	2908      	cmp	r1, #8
  403cee:	f63f af7b 	bhi.w	403be8 <_strtod_l+0x198>
  403cf2:	3b30      	subs	r3, #48	; 0x30
  403cf4:	9307      	str	r3, [sp, #28]
  403cf6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403cf8:	9309      	str	r3, [sp, #36]	; 0x24
  403cfa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403cfc:	1c5d      	adds	r5, r3, #1
  403cfe:	951b      	str	r5, [sp, #108]	; 0x6c
  403d00:	785b      	ldrb	r3, [r3, #1]
  403d02:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
  403d06:	f1be 0f09 	cmp.w	lr, #9
  403d0a:	d931      	bls.n	403d70 <_strtod_l+0x320>
  403d0c:	9909      	ldr	r1, [sp, #36]	; 0x24
  403d0e:	1a6d      	subs	r5, r5, r1
  403d10:	2d08      	cmp	r5, #8
  403d12:	f644 651f 	movw	r5, #19999	; 0x4e1f
  403d16:	dc03      	bgt.n	403d20 <_strtod_l+0x2d0>
  403d18:	9907      	ldr	r1, [sp, #28]
  403d1a:	428d      	cmp	r5, r1
  403d1c:	bfa8      	it	ge
  403d1e:	460d      	movge	r5, r1
  403d20:	f1bc 0f00 	cmp.w	ip, #0
  403d24:	d000      	beq.n	403d28 <_strtod_l+0x2d8>
  403d26:	426d      	negs	r5, r5
  403d28:	2c00      	cmp	r4, #0
  403d2a:	d14e      	bne.n	403dca <_strtod_l+0x37a>
  403d2c:	9905      	ldr	r1, [sp, #20]
  403d2e:	4301      	orrs	r1, r0
  403d30:	f47f aecc 	bne.w	403acc <_strtod_l+0x7c>
  403d34:	2a00      	cmp	r2, #0
  403d36:	f47f aee7 	bne.w	403b08 <_strtod_l+0xb8>
  403d3a:	2b4e      	cmp	r3, #78	; 0x4e
  403d3c:	d025      	beq.n	403d8a <_strtod_l+0x33a>
  403d3e:	dc1f      	bgt.n	403d80 <_strtod_l+0x330>
  403d40:	2b49      	cmp	r3, #73	; 0x49
  403d42:	f47f aee1 	bne.w	403b08 <_strtod_l+0xb8>
  403d46:	49a2      	ldr	r1, [pc, #648]	; (403fd0 <_strtod_l+0x580>)
  403d48:	a81b      	add	r0, sp, #108	; 0x6c
  403d4a:	f002 f867 	bl	405e1c <__match>
  403d4e:	2800      	cmp	r0, #0
  403d50:	f43f aeda 	beq.w	403b08 <_strtod_l+0xb8>
  403d54:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403d56:	499f      	ldr	r1, [pc, #636]	; (403fd4 <_strtod_l+0x584>)
  403d58:	3b01      	subs	r3, #1
  403d5a:	a81b      	add	r0, sp, #108	; 0x6c
  403d5c:	931b      	str	r3, [sp, #108]	; 0x6c
  403d5e:	f002 f85d 	bl	405e1c <__match>
  403d62:	b910      	cbnz	r0, 403d6a <_strtod_l+0x31a>
  403d64:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403d66:	3301      	adds	r3, #1
  403d68:	931b      	str	r3, [sp, #108]	; 0x6c
  403d6a:	f8df 9280 	ldr.w	r9, [pc, #640]	; 403fec <_strtod_l+0x59c>
  403d6e:	e6ad      	b.n	403acc <_strtod_l+0x7c>
  403d70:	9d07      	ldr	r5, [sp, #28]
  403d72:	210a      	movs	r1, #10
  403d74:	fb01 3505 	mla	r5, r1, r5, r3
  403d78:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
  403d7c:	9307      	str	r3, [sp, #28]
  403d7e:	e7bc      	b.n	403cfa <_strtod_l+0x2aa>
  403d80:	2b69      	cmp	r3, #105	; 0x69
  403d82:	d0e0      	beq.n	403d46 <_strtod_l+0x2f6>
  403d84:	2b6e      	cmp	r3, #110	; 0x6e
  403d86:	f47f aebf 	bne.w	403b08 <_strtod_l+0xb8>
  403d8a:	4993      	ldr	r1, [pc, #588]	; (403fd8 <_strtod_l+0x588>)
  403d8c:	a81b      	add	r0, sp, #108	; 0x6c
  403d8e:	f002 f845 	bl	405e1c <__match>
  403d92:	2800      	cmp	r0, #0
  403d94:	f43f aeb8 	beq.w	403b08 <_strtod_l+0xb8>
  403d98:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  403d9a:	781b      	ldrb	r3, [r3, #0]
  403d9c:	2b28      	cmp	r3, #40	; 0x28
  403d9e:	d10e      	bne.n	403dbe <_strtod_l+0x36e>
  403da0:	aa1e      	add	r2, sp, #120	; 0x78
  403da2:	498e      	ldr	r1, [pc, #568]	; (403fdc <_strtod_l+0x58c>)
  403da4:	a81b      	add	r0, sp, #108	; 0x6c
  403da6:	f002 f84d 	bl	405e44 <__hexnan>
  403daa:	2805      	cmp	r0, #5
  403dac:	d107      	bne.n	403dbe <_strtod_l+0x36e>
  403dae:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  403db0:	f8dd 8078 	ldr.w	r8, [sp, #120]	; 0x78
  403db4:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
  403db8:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
  403dbc:	e686      	b.n	403acc <_strtod_l+0x7c>
  403dbe:	4888      	ldr	r0, [pc, #544]	; (403fe0 <_strtod_l+0x590>)
  403dc0:	f002 ffa0 	bl	406d04 <nan>
  403dc4:	4680      	mov	r8, r0
  403dc6:	4689      	mov	r9, r1
  403dc8:	e680      	b.n	403acc <_strtod_l+0x7c>
  403dca:	9b04      	ldr	r3, [sp, #16]
  403dcc:	9806      	ldr	r0, [sp, #24]
  403dce:	1aeb      	subs	r3, r5, r3
  403dd0:	2f00      	cmp	r7, #0
  403dd2:	bf08      	it	eq
  403dd4:	4627      	moveq	r7, r4
  403dd6:	2c10      	cmp	r4, #16
  403dd8:	9307      	str	r3, [sp, #28]
  403dda:	4626      	mov	r6, r4
  403ddc:	bfa8      	it	ge
  403dde:	2610      	movge	r6, #16
  403de0:	f003 f9be 	bl	407160 <__aeabi_ui2d>
  403de4:	2c09      	cmp	r4, #9
  403de6:	4680      	mov	r8, r0
  403de8:	4689      	mov	r9, r1
  403dea:	dd13      	ble.n	403e14 <_strtod_l+0x3c4>
  403dec:	4b7d      	ldr	r3, [pc, #500]	; (403fe4 <_strtod_l+0x594>)
  403dee:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  403df2:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
  403df6:	f003 fa2d 	bl	407254 <__aeabi_dmul>
  403dfa:	4680      	mov	r8, r0
  403dfc:	4650      	mov	r0, sl
  403dfe:	4689      	mov	r9, r1
  403e00:	f003 f9ae 	bl	407160 <__aeabi_ui2d>
  403e04:	4602      	mov	r2, r0
  403e06:	460b      	mov	r3, r1
  403e08:	4640      	mov	r0, r8
  403e0a:	4649      	mov	r1, r9
  403e0c:	f003 f86c 	bl	406ee8 <__adddf3>
  403e10:	4680      	mov	r8, r0
  403e12:	4689      	mov	r9, r1
  403e14:	2c0f      	cmp	r4, #15
  403e16:	dc36      	bgt.n	403e86 <_strtod_l+0x436>
  403e18:	9b07      	ldr	r3, [sp, #28]
  403e1a:	2b00      	cmp	r3, #0
  403e1c:	f43f ae56 	beq.w	403acc <_strtod_l+0x7c>
  403e20:	dd22      	ble.n	403e68 <_strtod_l+0x418>
  403e22:	2b16      	cmp	r3, #22
  403e24:	dc09      	bgt.n	403e3a <_strtod_l+0x3ea>
  403e26:	4c6f      	ldr	r4, [pc, #444]	; (403fe4 <_strtod_l+0x594>)
  403e28:	eb04 04c3 	add.w	r4, r4, r3, lsl #3
  403e2c:	e9d4 0100 	ldrd	r0, r1, [r4]
  403e30:	4642      	mov	r2, r8
  403e32:	464b      	mov	r3, r9
  403e34:	f003 fa0e 	bl	407254 <__aeabi_dmul>
  403e38:	e7c4      	b.n	403dc4 <_strtod_l+0x374>
  403e3a:	9a07      	ldr	r2, [sp, #28]
  403e3c:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
  403e40:	4293      	cmp	r3, r2
  403e42:	db20      	blt.n	403e86 <_strtod_l+0x436>
  403e44:	4d67      	ldr	r5, [pc, #412]	; (403fe4 <_strtod_l+0x594>)
  403e46:	f1c4 040f 	rsb	r4, r4, #15
  403e4a:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
  403e4e:	4642      	mov	r2, r8
  403e50:	464b      	mov	r3, r9
  403e52:	e9d1 0100 	ldrd	r0, r1, [r1]
  403e56:	f003 f9fd 	bl	407254 <__aeabi_dmul>
  403e5a:	9b07      	ldr	r3, [sp, #28]
  403e5c:	1b1c      	subs	r4, r3, r4
  403e5e:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
  403e62:	e9d5 2300 	ldrd	r2, r3, [r5]
  403e66:	e7e5      	b.n	403e34 <_strtod_l+0x3e4>
  403e68:	9b07      	ldr	r3, [sp, #28]
  403e6a:	3316      	adds	r3, #22
  403e6c:	db0b      	blt.n	403e86 <_strtod_l+0x436>
  403e6e:	9b04      	ldr	r3, [sp, #16]
  403e70:	4a5c      	ldr	r2, [pc, #368]	; (403fe4 <_strtod_l+0x594>)
  403e72:	1b5d      	subs	r5, r3, r5
  403e74:	eb02 05c5 	add.w	r5, r2, r5, lsl #3
  403e78:	e9d5 2300 	ldrd	r2, r3, [r5]
  403e7c:	4640      	mov	r0, r8
  403e7e:	4649      	mov	r1, r9
  403e80:	f003 fb12 	bl	4074a8 <__aeabi_ddiv>
  403e84:	e79e      	b.n	403dc4 <_strtod_l+0x374>
  403e86:	9b07      	ldr	r3, [sp, #28]
  403e88:	eba4 0a06 	sub.w	sl, r4, r6
  403e8c:	449a      	add	sl, r3
  403e8e:	f1ba 0f00 	cmp.w	sl, #0
  403e92:	dd75      	ble.n	403f80 <_strtod_l+0x530>
  403e94:	f01a 030f 	ands.w	r3, sl, #15
  403e98:	d00a      	beq.n	403eb0 <_strtod_l+0x460>
  403e9a:	4952      	ldr	r1, [pc, #328]	; (403fe4 <_strtod_l+0x594>)
  403e9c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403ea0:	4642      	mov	r2, r8
  403ea2:	464b      	mov	r3, r9
  403ea4:	e9d1 0100 	ldrd	r0, r1, [r1]
  403ea8:	f003 f9d4 	bl	407254 <__aeabi_dmul>
  403eac:	4680      	mov	r8, r0
  403eae:	4689      	mov	r9, r1
  403eb0:	f03a 0a0f 	bics.w	sl, sl, #15
  403eb4:	d052      	beq.n	403f5c <_strtod_l+0x50c>
  403eb6:	f5ba 7f9a 	cmp.w	sl, #308	; 0x134
  403eba:	dd27      	ble.n	403f0c <_strtod_l+0x4bc>
  403ebc:	f04f 0a00 	mov.w	sl, #0
  403ec0:	f8cd a010 	str.w	sl, [sp, #16]
  403ec4:	f8cd a020 	str.w	sl, [sp, #32]
  403ec8:	f8cd a018 	str.w	sl, [sp, #24]
  403ecc:	2322      	movs	r3, #34	; 0x22
  403ece:	f8df 911c 	ldr.w	r9, [pc, #284]	; 403fec <_strtod_l+0x59c>
  403ed2:	f8cb 3000 	str.w	r3, [fp]
  403ed6:	f04f 0800 	mov.w	r8, #0
  403eda:	9b08      	ldr	r3, [sp, #32]
  403edc:	2b00      	cmp	r3, #0
  403ede:	f43f adf5 	beq.w	403acc <_strtod_l+0x7c>
  403ee2:	991c      	ldr	r1, [sp, #112]	; 0x70
  403ee4:	4658      	mov	r0, fp
  403ee6:	f002 f947 	bl	406178 <_Bfree>
  403eea:	9906      	ldr	r1, [sp, #24]
  403eec:	4658      	mov	r0, fp
  403eee:	f002 f943 	bl	406178 <_Bfree>
  403ef2:	9904      	ldr	r1, [sp, #16]
  403ef4:	4658      	mov	r0, fp
  403ef6:	f002 f93f 	bl	406178 <_Bfree>
  403efa:	9908      	ldr	r1, [sp, #32]
  403efc:	4658      	mov	r0, fp
  403efe:	f002 f93b 	bl	406178 <_Bfree>
  403f02:	4651      	mov	r1, sl
  403f04:	4658      	mov	r0, fp
  403f06:	f002 f937 	bl	406178 <_Bfree>
  403f0a:	e5df      	b.n	403acc <_strtod_l+0x7c>
  403f0c:	2300      	movs	r3, #0
  403f0e:	ea4f 1a2a 	mov.w	sl, sl, asr #4
  403f12:	4640      	mov	r0, r8
  403f14:	4649      	mov	r1, r9
  403f16:	461e      	mov	r6, r3
  403f18:	f1ba 0f01 	cmp.w	sl, #1
  403f1c:	dc21      	bgt.n	403f62 <_strtod_l+0x512>
  403f1e:	b10b      	cbz	r3, 403f24 <_strtod_l+0x4d4>
  403f20:	4680      	mov	r8, r0
  403f22:	4689      	mov	r9, r1
  403f24:	4b30      	ldr	r3, [pc, #192]	; (403fe8 <_strtod_l+0x598>)
  403f26:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
  403f2a:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
  403f2e:	4642      	mov	r2, r8
  403f30:	464b      	mov	r3, r9
  403f32:	e9d6 0100 	ldrd	r0, r1, [r6]
  403f36:	f003 f98d 	bl	407254 <__aeabi_dmul>
  403f3a:	4b2c      	ldr	r3, [pc, #176]	; (403fec <_strtod_l+0x59c>)
  403f3c:	460a      	mov	r2, r1
  403f3e:	400b      	ands	r3, r1
  403f40:	492b      	ldr	r1, [pc, #172]	; (403ff0 <_strtod_l+0x5a0>)
  403f42:	428b      	cmp	r3, r1
  403f44:	4680      	mov	r8, r0
  403f46:	d8b9      	bhi.n	403ebc <_strtod_l+0x46c>
  403f48:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
  403f4c:	428b      	cmp	r3, r1
  403f4e:	bf86      	itte	hi
  403f50:	f8df 90a0 	ldrhi.w	r9, [pc, #160]	; 403ff4 <_strtod_l+0x5a4>
  403f54:	f04f 38ff 	movhi.w	r8, #4294967295	; 0xffffffff
  403f58:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
  403f5c:	2300      	movs	r3, #0
  403f5e:	9305      	str	r3, [sp, #20]
  403f60:	e085      	b.n	40406e <_strtod_l+0x61e>
  403f62:	f01a 0f01 	tst.w	sl, #1
  403f66:	d007      	beq.n	403f78 <_strtod_l+0x528>
  403f68:	4b1f      	ldr	r3, [pc, #124]	; (403fe8 <_strtod_l+0x598>)
  403f6a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
  403f6e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403f72:	f003 f96f 	bl	407254 <__aeabi_dmul>
  403f76:	2301      	movs	r3, #1
  403f78:	3601      	adds	r6, #1
  403f7a:	ea4f 0a6a 	mov.w	sl, sl, asr #1
  403f7e:	e7cb      	b.n	403f18 <_strtod_l+0x4c8>
  403f80:	d0ec      	beq.n	403f5c <_strtod_l+0x50c>
  403f82:	f1ca 0a00 	rsb	sl, sl, #0
  403f86:	f01a 020f 	ands.w	r2, sl, #15
  403f8a:	d00a      	beq.n	403fa2 <_strtod_l+0x552>
  403f8c:	4b15      	ldr	r3, [pc, #84]	; (403fe4 <_strtod_l+0x594>)
  403f8e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403f92:	4640      	mov	r0, r8
  403f94:	4649      	mov	r1, r9
  403f96:	e9d3 2300 	ldrd	r2, r3, [r3]
  403f9a:	f003 fa85 	bl	4074a8 <__aeabi_ddiv>
  403f9e:	4680      	mov	r8, r0
  403fa0:	4689      	mov	r9, r1
  403fa2:	ea5f 1a2a 	movs.w	sl, sl, asr #4
  403fa6:	d0d9      	beq.n	403f5c <_strtod_l+0x50c>
  403fa8:	f1ba 0f1f 	cmp.w	sl, #31
  403fac:	dd24      	ble.n	403ff8 <_strtod_l+0x5a8>
  403fae:	f04f 0a00 	mov.w	sl, #0
  403fb2:	f8cd a010 	str.w	sl, [sp, #16]
  403fb6:	f8cd a020 	str.w	sl, [sp, #32]
  403fba:	f8cd a018 	str.w	sl, [sp, #24]
  403fbe:	2322      	movs	r3, #34	; 0x22
  403fc0:	f04f 0800 	mov.w	r8, #0
  403fc4:	f04f 0900 	mov.w	r9, #0
  403fc8:	f8cb 3000 	str.w	r3, [fp]
  403fcc:	e785      	b.n	403eda <_strtod_l+0x48a>
  403fce:	bf00      	nop
  403fd0:	004083f9 	.word	0x004083f9
  403fd4:	0040857c 	.word	0x0040857c
  403fd8:	00408401 	.word	0x00408401
  403fdc:	0040843c 	.word	0x0040843c
  403fe0:	00408701 	.word	0x00408701
  403fe4:	00408628 	.word	0x00408628
  403fe8:	00408600 	.word	0x00408600
  403fec:	7ff00000 	.word	0x7ff00000
  403ff0:	7ca00000 	.word	0x7ca00000
  403ff4:	7fefffff 	.word	0x7fefffff
  403ff8:	f01a 0310 	ands.w	r3, sl, #16
  403ffc:	bf18      	it	ne
  403ffe:	236a      	movne	r3, #106	; 0x6a
  404000:	4eb4      	ldr	r6, [pc, #720]	; (4042d4 <_strtod_l+0x884>)
  404002:	9305      	str	r3, [sp, #20]
  404004:	4640      	mov	r0, r8
  404006:	4649      	mov	r1, r9
  404008:	2300      	movs	r3, #0
  40400a:	f01a 0f01 	tst.w	sl, #1
  40400e:	d004      	beq.n	40401a <_strtod_l+0x5ca>
  404010:	e9d6 2300 	ldrd	r2, r3, [r6]
  404014:	f003 f91e 	bl	407254 <__aeabi_dmul>
  404018:	2301      	movs	r3, #1
  40401a:	ea5f 0a6a 	movs.w	sl, sl, asr #1
  40401e:	f106 0608 	add.w	r6, r6, #8
  404022:	d1f2      	bne.n	40400a <_strtod_l+0x5ba>
  404024:	b10b      	cbz	r3, 40402a <_strtod_l+0x5da>
  404026:	4680      	mov	r8, r0
  404028:	4689      	mov	r9, r1
  40402a:	9b05      	ldr	r3, [sp, #20]
  40402c:	b1bb      	cbz	r3, 40405e <_strtod_l+0x60e>
  40402e:	f3c9 530a 	ubfx	r3, r9, #20, #11
  404032:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
  404036:	2b00      	cmp	r3, #0
  404038:	4649      	mov	r1, r9
  40403a:	dd10      	ble.n	40405e <_strtod_l+0x60e>
  40403c:	2b1f      	cmp	r3, #31
  40403e:	f340 8128 	ble.w	404292 <_strtod_l+0x842>
  404042:	2b34      	cmp	r3, #52	; 0x34
  404044:	bfde      	ittt	le
  404046:	3b20      	suble	r3, #32
  404048:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
  40404c:	fa02 f303 	lslle.w	r3, r2, r3
  404050:	f04f 0800 	mov.w	r8, #0
  404054:	bfcc      	ite	gt
  404056:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
  40405a:	ea03 0901 	andle.w	r9, r3, r1
  40405e:	2200      	movs	r2, #0
  404060:	2300      	movs	r3, #0
  404062:	4640      	mov	r0, r8
  404064:	4649      	mov	r1, r9
  404066:	f003 fb5d 	bl	407724 <__aeabi_dcmpeq>
  40406a:	2800      	cmp	r0, #0
  40406c:	d19f      	bne.n	403fae <_strtod_l+0x55e>
  40406e:	9b06      	ldr	r3, [sp, #24]
  404070:	9300      	str	r3, [sp, #0]
  404072:	463a      	mov	r2, r7
  404074:	4623      	mov	r3, r4
  404076:	9908      	ldr	r1, [sp, #32]
  404078:	4658      	mov	r0, fp
  40407a:	f002 f8cf 	bl	40621c <__s2b>
  40407e:	9008      	str	r0, [sp, #32]
  404080:	2800      	cmp	r0, #0
  404082:	f43f af1b 	beq.w	403ebc <_strtod_l+0x46c>
  404086:	9b04      	ldr	r3, [sp, #16]
  404088:	1b5d      	subs	r5, r3, r5
  40408a:	9b07      	ldr	r3, [sp, #28]
  40408c:	2b00      	cmp	r3, #0
  40408e:	bfb4      	ite	lt
  404090:	462b      	movlt	r3, r5
  404092:	2300      	movge	r3, #0
  404094:	930e      	str	r3, [sp, #56]	; 0x38
  404096:	9b07      	ldr	r3, [sp, #28]
  404098:	f04f 0a00 	mov.w	sl, #0
  40409c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  4040a0:	9316      	str	r3, [sp, #88]	; 0x58
  4040a2:	f8cd a010 	str.w	sl, [sp, #16]
  4040a6:	9b08      	ldr	r3, [sp, #32]
  4040a8:	4658      	mov	r0, fp
  4040aa:	6859      	ldr	r1, [r3, #4]
  4040ac:	f002 f830 	bl	406110 <_Balloc>
  4040b0:	9006      	str	r0, [sp, #24]
  4040b2:	2800      	cmp	r0, #0
  4040b4:	f43f af0a 	beq.w	403ecc <_strtod_l+0x47c>
  4040b8:	9b08      	ldr	r3, [sp, #32]
  4040ba:	691a      	ldr	r2, [r3, #16]
  4040bc:	3202      	adds	r2, #2
  4040be:	f103 010c 	add.w	r1, r3, #12
  4040c2:	0092      	lsls	r2, r2, #2
  4040c4:	300c      	adds	r0, #12
  4040c6:	f7fe fedd 	bl	402e84 <memcpy>
  4040ca:	ab1e      	add	r3, sp, #120	; 0x78
  4040cc:	9301      	str	r3, [sp, #4]
  4040ce:	ab1d      	add	r3, sp, #116	; 0x74
  4040d0:	9300      	str	r3, [sp, #0]
  4040d2:	4642      	mov	r2, r8
  4040d4:	464b      	mov	r3, r9
  4040d6:	4658      	mov	r0, fp
  4040d8:	e9cd 890a 	strd	r8, r9, [sp, #40]	; 0x28
  4040dc:	f002 fb54 	bl	406788 <__d2b>
  4040e0:	901c      	str	r0, [sp, #112]	; 0x70
  4040e2:	2800      	cmp	r0, #0
  4040e4:	f43f aef2 	beq.w	403ecc <_strtod_l+0x47c>
  4040e8:	2101      	movs	r1, #1
  4040ea:	4658      	mov	r0, fp
  4040ec:	f002 f924 	bl	406338 <__i2b>
  4040f0:	9004      	str	r0, [sp, #16]
  4040f2:	4603      	mov	r3, r0
  4040f4:	2800      	cmp	r0, #0
  4040f6:	f43f aee9 	beq.w	403ecc <_strtod_l+0x47c>
  4040fa:	9d1d      	ldr	r5, [sp, #116]	; 0x74
  4040fc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
  4040fe:	2d00      	cmp	r5, #0
  404100:	bfab      	itete	ge
  404102:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
  404104:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
  404106:	9c16      	ldrge	r4, [sp, #88]	; 0x58
  404108:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
  40410a:	bfac      	ite	ge
  40410c:	18ee      	addge	r6, r5, r3
  40410e:	1b5c      	sublt	r4, r3, r5
  404110:	9b05      	ldr	r3, [sp, #20]
  404112:	1aed      	subs	r5, r5, r3
  404114:	4415      	add	r5, r2
  404116:	4b70      	ldr	r3, [pc, #448]	; (4042d8 <_strtod_l+0x888>)
  404118:	3d01      	subs	r5, #1
  40411a:	429d      	cmp	r5, r3
  40411c:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
  404120:	f280 80c9 	bge.w	4042b6 <_strtod_l+0x866>
  404124:	1b5b      	subs	r3, r3, r5
  404126:	2b1f      	cmp	r3, #31
  404128:	eba2 0203 	sub.w	r2, r2, r3
  40412c:	f04f 0701 	mov.w	r7, #1
  404130:	f300 80b6 	bgt.w	4042a0 <_strtod_l+0x850>
  404134:	fa07 f303 	lsl.w	r3, r7, r3
  404138:	930f      	str	r3, [sp, #60]	; 0x3c
  40413a:	2500      	movs	r5, #0
  40413c:	18b7      	adds	r7, r6, r2
  40413e:	9b05      	ldr	r3, [sp, #20]
  404140:	42be      	cmp	r6, r7
  404142:	4414      	add	r4, r2
  404144:	441c      	add	r4, r3
  404146:	4633      	mov	r3, r6
  404148:	bfa8      	it	ge
  40414a:	463b      	movge	r3, r7
  40414c:	42a3      	cmp	r3, r4
  40414e:	bfa8      	it	ge
  404150:	4623      	movge	r3, r4
  404152:	2b00      	cmp	r3, #0
  404154:	bfc2      	ittt	gt
  404156:	1aff      	subgt	r7, r7, r3
  404158:	1ae4      	subgt	r4, r4, r3
  40415a:	1af6      	subgt	r6, r6, r3
  40415c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40415e:	2b00      	cmp	r3, #0
  404160:	dd17      	ble.n	404192 <_strtod_l+0x742>
  404162:	461a      	mov	r2, r3
  404164:	9904      	ldr	r1, [sp, #16]
  404166:	4658      	mov	r0, fp
  404168:	f002 f980 	bl	40646c <__pow5mult>
  40416c:	9004      	str	r0, [sp, #16]
  40416e:	2800      	cmp	r0, #0
  404170:	f43f aeac 	beq.w	403ecc <_strtod_l+0x47c>
  404174:	4601      	mov	r1, r0
  404176:	9a1c      	ldr	r2, [sp, #112]	; 0x70
  404178:	4658      	mov	r0, fp
  40417a:	f002 f8e6 	bl	40634a <__multiply>
  40417e:	9009      	str	r0, [sp, #36]	; 0x24
  404180:	2800      	cmp	r0, #0
  404182:	f43f aea3 	beq.w	403ecc <_strtod_l+0x47c>
  404186:	991c      	ldr	r1, [sp, #112]	; 0x70
  404188:	4658      	mov	r0, fp
  40418a:	f001 fff5 	bl	406178 <_Bfree>
  40418e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404190:	931c      	str	r3, [sp, #112]	; 0x70
  404192:	2f00      	cmp	r7, #0
  404194:	f300 8093 	bgt.w	4042be <_strtod_l+0x86e>
  404198:	9b07      	ldr	r3, [sp, #28]
  40419a:	2b00      	cmp	r3, #0
  40419c:	dd08      	ble.n	4041b0 <_strtod_l+0x760>
  40419e:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4041a0:	9906      	ldr	r1, [sp, #24]
  4041a2:	4658      	mov	r0, fp
  4041a4:	f002 f962 	bl	40646c <__pow5mult>
  4041a8:	9006      	str	r0, [sp, #24]
  4041aa:	2800      	cmp	r0, #0
  4041ac:	f43f ae8e 	beq.w	403ecc <_strtod_l+0x47c>
  4041b0:	2c00      	cmp	r4, #0
  4041b2:	dd08      	ble.n	4041c6 <_strtod_l+0x776>
  4041b4:	4622      	mov	r2, r4
  4041b6:	9906      	ldr	r1, [sp, #24]
  4041b8:	4658      	mov	r0, fp
  4041ba:	f002 f9a5 	bl	406508 <__lshift>
  4041be:	9006      	str	r0, [sp, #24]
  4041c0:	2800      	cmp	r0, #0
  4041c2:	f43f ae83 	beq.w	403ecc <_strtod_l+0x47c>
  4041c6:	2e00      	cmp	r6, #0
  4041c8:	dd08      	ble.n	4041dc <_strtod_l+0x78c>
  4041ca:	4632      	mov	r2, r6
  4041cc:	9904      	ldr	r1, [sp, #16]
  4041ce:	4658      	mov	r0, fp
  4041d0:	f002 f99a 	bl	406508 <__lshift>
  4041d4:	9004      	str	r0, [sp, #16]
  4041d6:	2800      	cmp	r0, #0
  4041d8:	f43f ae78 	beq.w	403ecc <_strtod_l+0x47c>
  4041dc:	9a06      	ldr	r2, [sp, #24]
  4041de:	991c      	ldr	r1, [sp, #112]	; 0x70
  4041e0:	4658      	mov	r0, fp
  4041e2:	f002 f9fe 	bl	4065e2 <__mdiff>
  4041e6:	4682      	mov	sl, r0
  4041e8:	2800      	cmp	r0, #0
  4041ea:	f43f ae6f 	beq.w	403ecc <_strtod_l+0x47c>
  4041ee:	2400      	movs	r4, #0
  4041f0:	68c3      	ldr	r3, [r0, #12]
  4041f2:	9904      	ldr	r1, [sp, #16]
  4041f4:	60c4      	str	r4, [r0, #12]
  4041f6:	930c      	str	r3, [sp, #48]	; 0x30
  4041f8:	f002 f9d9 	bl	4065ae <__mcmp>
  4041fc:	42a0      	cmp	r0, r4
  4041fe:	da71      	bge.n	4042e4 <_strtod_l+0x894>
  404200:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  404202:	ea53 0308 	orrs.w	r3, r3, r8
  404206:	f040 8097 	bne.w	404338 <_strtod_l+0x8e8>
  40420a:	f3c9 0313 	ubfx	r3, r9, #0, #20
  40420e:	2b00      	cmp	r3, #0
  404210:	f040 8092 	bne.w	404338 <_strtod_l+0x8e8>
  404214:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  404218:	0d1b      	lsrs	r3, r3, #20
  40421a:	051b      	lsls	r3, r3, #20
  40421c:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
  404220:	f240 808a 	bls.w	404338 <_strtod_l+0x8e8>
  404224:	f8da 3014 	ldr.w	r3, [sl, #20]
  404228:	b923      	cbnz	r3, 404234 <_strtod_l+0x7e4>
  40422a:	f8da 3010 	ldr.w	r3, [sl, #16]
  40422e:	2b01      	cmp	r3, #1
  404230:	f340 8082 	ble.w	404338 <_strtod_l+0x8e8>
  404234:	4651      	mov	r1, sl
  404236:	2201      	movs	r2, #1
  404238:	4658      	mov	r0, fp
  40423a:	f002 f965 	bl	406508 <__lshift>
  40423e:	9904      	ldr	r1, [sp, #16]
  404240:	4682      	mov	sl, r0
  404242:	f002 f9b4 	bl	4065ae <__mcmp>
  404246:	2800      	cmp	r0, #0
  404248:	dd76      	ble.n	404338 <_strtod_l+0x8e8>
  40424a:	9905      	ldr	r1, [sp, #20]
  40424c:	4a23      	ldr	r2, [pc, #140]	; (4042dc <_strtod_l+0x88c>)
  40424e:	464b      	mov	r3, r9
  404250:	2900      	cmp	r1, #0
  404252:	f000 8092 	beq.w	40437a <_strtod_l+0x92a>
  404256:	ea02 0109 	and.w	r1, r2, r9
  40425a:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
  40425e:	f300 808c 	bgt.w	40437a <_strtod_l+0x92a>
  404262:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
  404266:	f77f aeaa 	ble.w	403fbe <_strtod_l+0x56e>
  40426a:	4a1d      	ldr	r2, [pc, #116]	; (4042e0 <_strtod_l+0x890>)
  40426c:	2300      	movs	r3, #0
  40426e:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
  404272:	4640      	mov	r0, r8
  404274:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
  404278:	4649      	mov	r1, r9
  40427a:	f002 ffeb 	bl	407254 <__aeabi_dmul>
  40427e:	460b      	mov	r3, r1
  404280:	4303      	orrs	r3, r0
  404282:	bf08      	it	eq
  404284:	2322      	moveq	r3, #34	; 0x22
  404286:	4680      	mov	r8, r0
  404288:	4689      	mov	r9, r1
  40428a:	bf08      	it	eq
  40428c:	f8cb 3000 	streq.w	r3, [fp]
  404290:	e627      	b.n	403ee2 <_strtod_l+0x492>
  404292:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  404296:	fa02 f303 	lsl.w	r3, r2, r3
  40429a:	ea03 0808 	and.w	r8, r3, r8
  40429e:	e6de      	b.n	40405e <_strtod_l+0x60e>
  4042a0:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
  4042a4:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
  4042a8:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
  4042ac:	35e2      	adds	r5, #226	; 0xe2
  4042ae:	fa07 f505 	lsl.w	r5, r7, r5
  4042b2:	970f      	str	r7, [sp, #60]	; 0x3c
  4042b4:	e742      	b.n	40413c <_strtod_l+0x6ec>
  4042b6:	2301      	movs	r3, #1
  4042b8:	2500      	movs	r5, #0
  4042ba:	930f      	str	r3, [sp, #60]	; 0x3c
  4042bc:	e73e      	b.n	40413c <_strtod_l+0x6ec>
  4042be:	463a      	mov	r2, r7
  4042c0:	991c      	ldr	r1, [sp, #112]	; 0x70
  4042c2:	4658      	mov	r0, fp
  4042c4:	f002 f920 	bl	406508 <__lshift>
  4042c8:	901c      	str	r0, [sp, #112]	; 0x70
  4042ca:	2800      	cmp	r0, #0
  4042cc:	f47f af64 	bne.w	404198 <_strtod_l+0x748>
  4042d0:	e5fc      	b.n	403ecc <_strtod_l+0x47c>
  4042d2:	bf00      	nop
  4042d4:	00408450 	.word	0x00408450
  4042d8:	fffffc02 	.word	0xfffffc02
  4042dc:	7ff00000 	.word	0x7ff00000
  4042e0:	39500000 	.word	0x39500000
  4042e4:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
  4042e8:	d166      	bne.n	4043b8 <_strtod_l+0x968>
  4042ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  4042ec:	f3c9 0313 	ubfx	r3, r9, #0, #20
  4042f0:	b35a      	cbz	r2, 40434a <_strtod_l+0x8fa>
  4042f2:	4a9d      	ldr	r2, [pc, #628]	; (404568 <_strtod_l+0xb18>)
  4042f4:	4293      	cmp	r3, r2
  4042f6:	d12c      	bne.n	404352 <_strtod_l+0x902>
  4042f8:	9b05      	ldr	r3, [sp, #20]
  4042fa:	4640      	mov	r0, r8
  4042fc:	b303      	cbz	r3, 404340 <_strtod_l+0x8f0>
  4042fe:	4a9b      	ldr	r2, [pc, #620]	; (40456c <_strtod_l+0xb1c>)
  404300:	464b      	mov	r3, r9
  404302:	401a      	ands	r2, r3
  404304:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
  404308:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
  40430c:	d81b      	bhi.n	404346 <_strtod_l+0x8f6>
  40430e:	0d12      	lsrs	r2, r2, #20
  404310:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
  404314:	fa01 f303 	lsl.w	r3, r1, r3
  404318:	4298      	cmp	r0, r3
  40431a:	d11a      	bne.n	404352 <_strtod_l+0x902>
  40431c:	4b94      	ldr	r3, [pc, #592]	; (404570 <_strtod_l+0xb20>)
  40431e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  404320:	429a      	cmp	r2, r3
  404322:	d102      	bne.n	40432a <_strtod_l+0x8da>
  404324:	3001      	adds	r0, #1
  404326:	f43f add1 	beq.w	403ecc <_strtod_l+0x47c>
  40432a:	4b90      	ldr	r3, [pc, #576]	; (40456c <_strtod_l+0xb1c>)
  40432c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40432e:	401a      	ands	r2, r3
  404330:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
  404334:	f04f 0800 	mov.w	r8, #0
  404338:	9b05      	ldr	r3, [sp, #20]
  40433a:	2b00      	cmp	r3, #0
  40433c:	d195      	bne.n	40426a <_strtod_l+0x81a>
  40433e:	e5d0      	b.n	403ee2 <_strtod_l+0x492>
  404340:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
  404344:	e7e8      	b.n	404318 <_strtod_l+0x8c8>
  404346:	460b      	mov	r3, r1
  404348:	e7e6      	b.n	404318 <_strtod_l+0x8c8>
  40434a:	ea53 0308 	orrs.w	r3, r3, r8
  40434e:	f43f af7c 	beq.w	40424a <_strtod_l+0x7fa>
  404352:	b1e5      	cbz	r5, 40438e <_strtod_l+0x93e>
  404354:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404356:	421d      	tst	r5, r3
  404358:	d0ee      	beq.n	404338 <_strtod_l+0x8e8>
  40435a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40435c:	9a05      	ldr	r2, [sp, #20]
  40435e:	4640      	mov	r0, r8
  404360:	4649      	mov	r1, r9
  404362:	b1c3      	cbz	r3, 404396 <_strtod_l+0x946>
  404364:	f7ff fb52 	bl	403a0c <sulp>
  404368:	4602      	mov	r2, r0
  40436a:	460b      	mov	r3, r1
  40436c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  404370:	f002 fdba 	bl	406ee8 <__adddf3>
  404374:	4680      	mov	r8, r0
  404376:	4689      	mov	r9, r1
  404378:	e7de      	b.n	404338 <_strtod_l+0x8e8>
  40437a:	4013      	ands	r3, r2
  40437c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
  404380:	ea6f 5913 	mvn.w	r9, r3, lsr #20
  404384:	ea6f 5909 	mvn.w	r9, r9, lsl #20
  404388:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
  40438c:	e7d4      	b.n	404338 <_strtod_l+0x8e8>
  40438e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  404390:	ea13 0f08 	tst.w	r3, r8
  404394:	e7e0      	b.n	404358 <_strtod_l+0x908>
  404396:	f7ff fb39 	bl	403a0c <sulp>
  40439a:	4602      	mov	r2, r0
  40439c:	460b      	mov	r3, r1
  40439e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  4043a2:	f002 fd9f 	bl	406ee4 <__aeabi_dsub>
  4043a6:	2200      	movs	r2, #0
  4043a8:	2300      	movs	r3, #0
  4043aa:	4680      	mov	r8, r0
  4043ac:	4689      	mov	r9, r1
  4043ae:	f003 f9b9 	bl	407724 <__aeabi_dcmpeq>
  4043b2:	2800      	cmp	r0, #0
  4043b4:	d0c0      	beq.n	404338 <_strtod_l+0x8e8>
  4043b6:	e602      	b.n	403fbe <_strtod_l+0x56e>
  4043b8:	9904      	ldr	r1, [sp, #16]
  4043ba:	4650      	mov	r0, sl
  4043bc:	f002 fa32 	bl	406824 <__ratio>
  4043c0:	2200      	movs	r2, #0
  4043c2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  4043c6:	4606      	mov	r6, r0
  4043c8:	460f      	mov	r7, r1
  4043ca:	f003 f9bf 	bl	40774c <__aeabi_dcmple>
  4043ce:	2800      	cmp	r0, #0
  4043d0:	d075      	beq.n	4044be <_strtod_l+0xa6e>
  4043d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4043d4:	2b00      	cmp	r3, #0
  4043d6:	d047      	beq.n	404468 <_strtod_l+0xa18>
  4043d8:	4f66      	ldr	r7, [pc, #408]	; (404574 <_strtod_l+0xb24>)
  4043da:	2600      	movs	r6, #0
  4043dc:	4d65      	ldr	r5, [pc, #404]	; (404574 <_strtod_l+0xb24>)
  4043de:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4043e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  4043e4:	0d1b      	lsrs	r3, r3, #20
  4043e6:	051b      	lsls	r3, r3, #20
  4043e8:	930f      	str	r3, [sp, #60]	; 0x3c
  4043ea:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4043ec:	4b62      	ldr	r3, [pc, #392]	; (404578 <_strtod_l+0xb28>)
  4043ee:	429a      	cmp	r2, r3
  4043f0:	f040 80ca 	bne.w	404588 <_strtod_l+0xb38>
  4043f4:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  4043f8:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  4043fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4043fe:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
  404402:	4640      	mov	r0, r8
  404404:	4649      	mov	r1, r9
  404406:	f002 f949 	bl	40669c <__ulp>
  40440a:	4602      	mov	r2, r0
  40440c:	460b      	mov	r3, r1
  40440e:	4630      	mov	r0, r6
  404410:	4639      	mov	r1, r7
  404412:	f002 ff1f 	bl	407254 <__aeabi_dmul>
  404416:	4642      	mov	r2, r8
  404418:	464b      	mov	r3, r9
  40441a:	f002 fd65 	bl	406ee8 <__adddf3>
  40441e:	460b      	mov	r3, r1
  404420:	4952      	ldr	r1, [pc, #328]	; (40456c <_strtod_l+0xb1c>)
  404422:	4a56      	ldr	r2, [pc, #344]	; (40457c <_strtod_l+0xb2c>)
  404424:	4019      	ands	r1, r3
  404426:	4291      	cmp	r1, r2
  404428:	4680      	mov	r8, r0
  40442a:	d95e      	bls.n	4044ea <_strtod_l+0xa9a>
  40442c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40442e:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
  404432:	4293      	cmp	r3, r2
  404434:	d103      	bne.n	40443e <_strtod_l+0x9ee>
  404436:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  404438:	3301      	adds	r3, #1
  40443a:	f43f ad47 	beq.w	403ecc <_strtod_l+0x47c>
  40443e:	f8df 9130 	ldr.w	r9, [pc, #304]	; 404570 <_strtod_l+0xb20>
  404442:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
  404446:	991c      	ldr	r1, [sp, #112]	; 0x70
  404448:	4658      	mov	r0, fp
  40444a:	f001 fe95 	bl	406178 <_Bfree>
  40444e:	9906      	ldr	r1, [sp, #24]
  404450:	4658      	mov	r0, fp
  404452:	f001 fe91 	bl	406178 <_Bfree>
  404456:	9904      	ldr	r1, [sp, #16]
  404458:	4658      	mov	r0, fp
  40445a:	f001 fe8d 	bl	406178 <_Bfree>
  40445e:	4651      	mov	r1, sl
  404460:	4658      	mov	r0, fp
  404462:	f001 fe89 	bl	406178 <_Bfree>
  404466:	e61e      	b.n	4040a6 <_strtod_l+0x656>
  404468:	f1b8 0f00 	cmp.w	r8, #0
  40446c:	d119      	bne.n	4044a2 <_strtod_l+0xa52>
  40446e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404470:	f3c3 0313 	ubfx	r3, r3, #0, #20
  404474:	b9e3      	cbnz	r3, 4044b0 <_strtod_l+0xa60>
  404476:	2200      	movs	r2, #0
  404478:	4b3e      	ldr	r3, [pc, #248]	; (404574 <_strtod_l+0xb24>)
  40447a:	4630      	mov	r0, r6
  40447c:	4639      	mov	r1, r7
  40447e:	f003 f95b 	bl	407738 <__aeabi_dcmplt>
  404482:	b9c8      	cbnz	r0, 4044b8 <_strtod_l+0xa68>
  404484:	2200      	movs	r2, #0
  404486:	4b3e      	ldr	r3, [pc, #248]	; (404580 <_strtod_l+0xb30>)
  404488:	4630      	mov	r0, r6
  40448a:	4639      	mov	r1, r7
  40448c:	f002 fee2 	bl	407254 <__aeabi_dmul>
  404490:	4604      	mov	r4, r0
  404492:	460d      	mov	r5, r1
  404494:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  404498:	9418      	str	r4, [sp, #96]	; 0x60
  40449a:	9319      	str	r3, [sp, #100]	; 0x64
  40449c:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
  4044a0:	e79d      	b.n	4043de <_strtod_l+0x98e>
  4044a2:	f1b8 0f01 	cmp.w	r8, #1
  4044a6:	d103      	bne.n	4044b0 <_strtod_l+0xa60>
  4044a8:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4044aa:	2b00      	cmp	r3, #0
  4044ac:	f43f ad87 	beq.w	403fbe <_strtod_l+0x56e>
  4044b0:	2600      	movs	r6, #0
  4044b2:	4f34      	ldr	r7, [pc, #208]	; (404584 <_strtod_l+0xb34>)
  4044b4:	2400      	movs	r4, #0
  4044b6:	e791      	b.n	4043dc <_strtod_l+0x98c>
  4044b8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4044ba:	4d31      	ldr	r5, [pc, #196]	; (404580 <_strtod_l+0xb30>)
  4044bc:	e7ea      	b.n	404494 <_strtod_l+0xa44>
  4044be:	4b30      	ldr	r3, [pc, #192]	; (404580 <_strtod_l+0xb30>)
  4044c0:	2200      	movs	r2, #0
  4044c2:	4630      	mov	r0, r6
  4044c4:	4639      	mov	r1, r7
  4044c6:	f002 fec5 	bl	407254 <__aeabi_dmul>
  4044ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4044cc:	4604      	mov	r4, r0
  4044ce:	460d      	mov	r5, r1
  4044d0:	b933      	cbnz	r3, 4044e0 <_strtod_l+0xa90>
  4044d2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  4044d6:	9010      	str	r0, [sp, #64]	; 0x40
  4044d8:	9311      	str	r3, [sp, #68]	; 0x44
  4044da:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
  4044de:	e77e      	b.n	4043de <_strtod_l+0x98e>
  4044e0:	4602      	mov	r2, r0
  4044e2:	460b      	mov	r3, r1
  4044e4:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
  4044e8:	e7f7      	b.n	4044da <_strtod_l+0xa8a>
  4044ea:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
  4044ee:	9b05      	ldr	r3, [sp, #20]
  4044f0:	2b00      	cmp	r3, #0
  4044f2:	d1a8      	bne.n	404446 <_strtod_l+0x9f6>
  4044f4:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
  4044f8:	0d1b      	lsrs	r3, r3, #20
  4044fa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4044fc:	051b      	lsls	r3, r3, #20
  4044fe:	429a      	cmp	r2, r3
  404500:	d1a1      	bne.n	404446 <_strtod_l+0x9f6>
  404502:	4620      	mov	r0, r4
  404504:	4629      	mov	r1, r5
  404506:	f003 fd07 	bl	407f18 <__aeabi_d2lz>
  40450a:	f002 fe75 	bl	4071f8 <__aeabi_l2d>
  40450e:	4602      	mov	r2, r0
  404510:	460b      	mov	r3, r1
  404512:	4620      	mov	r0, r4
  404514:	4629      	mov	r1, r5
  404516:	f002 fce5 	bl	406ee4 <__aeabi_dsub>
  40451a:	f3c9 0313 	ubfx	r3, r9, #0, #20
  40451e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  404520:	ea43 0308 	orr.w	r3, r3, r8
  404524:	4313      	orrs	r3, r2
  404526:	4604      	mov	r4, r0
  404528:	460d      	mov	r5, r1
  40452a:	d068      	beq.n	4045fe <_strtod_l+0xbae>
  40452c:	a30a      	add	r3, pc, #40	; (adr r3, 404558 <_strtod_l+0xb08>)
  40452e:	e9d3 2300 	ldrd	r2, r3, [r3]
  404532:	f003 f901 	bl	407738 <__aeabi_dcmplt>
  404536:	2800      	cmp	r0, #0
  404538:	f47f acd3 	bne.w	403ee2 <_strtod_l+0x492>
  40453c:	a308      	add	r3, pc, #32	; (adr r3, 404560 <_strtod_l+0xb10>)
  40453e:	e9d3 2300 	ldrd	r2, r3, [r3]
  404542:	4620      	mov	r0, r4
  404544:	4629      	mov	r1, r5
  404546:	f003 f915 	bl	407774 <__aeabi_dcmpgt>
  40454a:	2800      	cmp	r0, #0
  40454c:	f43f af7b 	beq.w	404446 <_strtod_l+0x9f6>
  404550:	e4c7      	b.n	403ee2 <_strtod_l+0x492>
  404552:	bf00      	nop
  404554:	f3af 8000 	nop.w
  404558:	94a03595 	.word	0x94a03595
  40455c:	3fdfffff 	.word	0x3fdfffff
  404560:	35afe535 	.word	0x35afe535
  404564:	3fe00000 	.word	0x3fe00000
  404568:	000fffff 	.word	0x000fffff
  40456c:	7ff00000 	.word	0x7ff00000
  404570:	7fefffff 	.word	0x7fefffff
  404574:	3ff00000 	.word	0x3ff00000
  404578:	7fe00000 	.word	0x7fe00000
  40457c:	7c9fffff 	.word	0x7c9fffff
  404580:	3fe00000 	.word	0x3fe00000
  404584:	bff00000 	.word	0xbff00000
  404588:	9b05      	ldr	r3, [sp, #20]
  40458a:	b313      	cbz	r3, 4045d2 <_strtod_l+0xb82>
  40458c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40458e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
  404592:	d81e      	bhi.n	4045d2 <_strtod_l+0xb82>
  404594:	a326      	add	r3, pc, #152	; (adr r3, 404630 <_strtod_l+0xbe0>)
  404596:	e9d3 2300 	ldrd	r2, r3, [r3]
  40459a:	4620      	mov	r0, r4
  40459c:	4629      	mov	r1, r5
  40459e:	f003 f8d5 	bl	40774c <__aeabi_dcmple>
  4045a2:	b190      	cbz	r0, 4045ca <_strtod_l+0xb7a>
  4045a4:	4629      	mov	r1, r5
  4045a6:	4620      	mov	r0, r4
  4045a8:	f003 f92c 	bl	407804 <__aeabi_d2uiz>
  4045ac:	2800      	cmp	r0, #0
  4045ae:	bf08      	it	eq
  4045b0:	2001      	moveq	r0, #1
  4045b2:	f002 fdd5 	bl	407160 <__aeabi_ui2d>
  4045b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4045b8:	4604      	mov	r4, r0
  4045ba:	460d      	mov	r5, r1
  4045bc:	b9d3      	cbnz	r3, 4045f4 <_strtod_l+0xba4>
  4045be:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
  4045c2:	9012      	str	r0, [sp, #72]	; 0x48
  4045c4:	9313      	str	r3, [sp, #76]	; 0x4c
  4045c6:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
  4045ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  4045cc:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
  4045d0:	1a9f      	subs	r7, r3, r2
  4045d2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
  4045d6:	f002 f861 	bl	40669c <__ulp>
  4045da:	4602      	mov	r2, r0
  4045dc:	460b      	mov	r3, r1
  4045de:	4630      	mov	r0, r6
  4045e0:	4639      	mov	r1, r7
  4045e2:	f002 fe37 	bl	407254 <__aeabi_dmul>
  4045e6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
  4045ea:	f002 fc7d 	bl	406ee8 <__adddf3>
  4045ee:	4680      	mov	r8, r0
  4045f0:	4689      	mov	r9, r1
  4045f2:	e77c      	b.n	4044ee <_strtod_l+0xa9e>
  4045f4:	4602      	mov	r2, r0
  4045f6:	460b      	mov	r3, r1
  4045f8:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  4045fc:	e7e3      	b.n	4045c6 <_strtod_l+0xb76>
  4045fe:	a30e      	add	r3, pc, #56	; (adr r3, 404638 <_strtod_l+0xbe8>)
  404600:	e9d3 2300 	ldrd	r2, r3, [r3]
  404604:	f003 f898 	bl	407738 <__aeabi_dcmplt>
  404608:	e79f      	b.n	40454a <_strtod_l+0xafa>
  40460a:	2300      	movs	r3, #0
  40460c:	930d      	str	r3, [sp, #52]	; 0x34
  40460e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
  404610:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
  404612:	6013      	str	r3, [r2, #0]
  404614:	f7ff ba5e 	b.w	403ad4 <_strtod_l+0x84>
  404618:	2b65      	cmp	r3, #101	; 0x65
  40461a:	f43f ab4c 	beq.w	403cb6 <_strtod_l+0x266>
  40461e:	2b45      	cmp	r3, #69	; 0x45
  404620:	f43f ab49 	beq.w	403cb6 <_strtod_l+0x266>
  404624:	2201      	movs	r2, #1
  404626:	f7ff bb81 	b.w	403d2c <_strtod_l+0x2dc>
  40462a:	bf00      	nop
  40462c:	f3af 8000 	nop.w
  404630:	ffc00000 	.word	0xffc00000
  404634:	41dfffff 	.word	0x41dfffff
  404638:	94a03595 	.word	0x94a03595
  40463c:	3fcfffff 	.word	0x3fcfffff

00404640 <strtod>:
  404640:	460a      	mov	r2, r1
  404642:	4601      	mov	r1, r0
  404644:	4802      	ldr	r0, [pc, #8]	; (404650 <strtod+0x10>)
  404646:	4b03      	ldr	r3, [pc, #12]	; (404654 <strtod+0x14>)
  404648:	6800      	ldr	r0, [r0, #0]
  40464a:	f7ff ba01 	b.w	403a50 <_strtod_l>
  40464e:	bf00      	nop
  404650:	20000014 	.word	0x20000014
  404654:	2000007c 	.word	0x2000007c

00404658 <__strtok_r>:
  404658:	b5f0      	push	{r4, r5, r6, r7, lr}
  40465a:	b918      	cbnz	r0, 404664 <__strtok_r+0xc>
  40465c:	6810      	ldr	r0, [r2, #0]
  40465e:	b908      	cbnz	r0, 404664 <__strtok_r+0xc>
  404660:	bdf0      	pop	{r4, r5, r6, r7, pc}
  404662:	4620      	mov	r0, r4
  404664:	4604      	mov	r4, r0
  404666:	460f      	mov	r7, r1
  404668:	f814 5b01 	ldrb.w	r5, [r4], #1
  40466c:	f817 6b01 	ldrb.w	r6, [r7], #1
  404670:	b91e      	cbnz	r6, 40467a <__strtok_r+0x22>
  404672:	b965      	cbnz	r5, 40468e <__strtok_r+0x36>
  404674:	6015      	str	r5, [r2, #0]
  404676:	4628      	mov	r0, r5
  404678:	e7f2      	b.n	404660 <__strtok_r+0x8>
  40467a:	42b5      	cmp	r5, r6
  40467c:	d1f6      	bne.n	40466c <__strtok_r+0x14>
  40467e:	2b00      	cmp	r3, #0
  404680:	d1ef      	bne.n	404662 <__strtok_r+0xa>
  404682:	6014      	str	r4, [r2, #0]
  404684:	7003      	strb	r3, [r0, #0]
  404686:	e7eb      	b.n	404660 <__strtok_r+0x8>
  404688:	461c      	mov	r4, r3
  40468a:	e00c      	b.n	4046a6 <__strtok_r+0x4e>
  40468c:	b915      	cbnz	r5, 404694 <__strtok_r+0x3c>
  40468e:	f814 3b01 	ldrb.w	r3, [r4], #1
  404692:	460e      	mov	r6, r1
  404694:	f816 5b01 	ldrb.w	r5, [r6], #1
  404698:	42ab      	cmp	r3, r5
  40469a:	d1f7      	bne.n	40468c <__strtok_r+0x34>
  40469c:	2b00      	cmp	r3, #0
  40469e:	d0f3      	beq.n	404688 <__strtok_r+0x30>
  4046a0:	2300      	movs	r3, #0
  4046a2:	f804 3c01 	strb.w	r3, [r4, #-1]
  4046a6:	6014      	str	r4, [r2, #0]
  4046a8:	e7da      	b.n	404660 <__strtok_r+0x8>

004046aa <strtok_r>:
  4046aa:	2301      	movs	r3, #1
  4046ac:	f7ff bfd4 	b.w	404658 <__strtok_r>

004046b0 <_strtol_l.isra.0>:
  4046b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4046b4:	4f39      	ldr	r7, [pc, #228]	; (40479c <_strtol_l.isra.0+0xec>)
  4046b6:	4686      	mov	lr, r0
  4046b8:	4608      	mov	r0, r1
  4046ba:	4605      	mov	r5, r0
  4046bc:	f815 4b01 	ldrb.w	r4, [r5], #1
  4046c0:	5de6      	ldrb	r6, [r4, r7]
  4046c2:	f016 0608 	ands.w	r6, r6, #8
  4046c6:	d134      	bne.n	404732 <_strtol_l.isra.0+0x82>
  4046c8:	2c2d      	cmp	r4, #45	; 0x2d
  4046ca:	d134      	bne.n	404736 <_strtol_l.isra.0+0x86>
  4046cc:	782c      	ldrb	r4, [r5, #0]
  4046ce:	f04f 0801 	mov.w	r8, #1
  4046d2:	1c85      	adds	r5, r0, #2
  4046d4:	2b00      	cmp	r3, #0
  4046d6:	d05c      	beq.n	404792 <_strtol_l.isra.0+0xe2>
  4046d8:	2b10      	cmp	r3, #16
  4046da:	d109      	bne.n	4046f0 <_strtol_l.isra.0+0x40>
  4046dc:	2c30      	cmp	r4, #48	; 0x30
  4046de:	d107      	bne.n	4046f0 <_strtol_l.isra.0+0x40>
  4046e0:	7828      	ldrb	r0, [r5, #0]
  4046e2:	f000 00df 	and.w	r0, r0, #223	; 0xdf
  4046e6:	2858      	cmp	r0, #88	; 0x58
  4046e8:	d14e      	bne.n	404788 <_strtol_l.isra.0+0xd8>
  4046ea:	786c      	ldrb	r4, [r5, #1]
  4046ec:	2310      	movs	r3, #16
  4046ee:	3502      	adds	r5, #2
  4046f0:	f1b8 0f00 	cmp.w	r8, #0
  4046f4:	bf14      	ite	ne
  4046f6:	f04f 4c00 	movne.w	ip, #2147483648	; 0x80000000
  4046fa:	f06f 4c00 	mvneq.w	ip, #2147483648	; 0x80000000
  4046fe:	2700      	movs	r7, #0
  404700:	fbbc f9f3 	udiv	r9, ip, r3
  404704:	4638      	mov	r0, r7
  404706:	fb03 ca19 	mls	sl, r3, r9, ip
  40470a:	f1a4 0630 	sub.w	r6, r4, #48	; 0x30
  40470e:	2e09      	cmp	r6, #9
  404710:	d818      	bhi.n	404744 <_strtol_l.isra.0+0x94>
  404712:	4634      	mov	r4, r6
  404714:	42a3      	cmp	r3, r4
  404716:	dd24      	ble.n	404762 <_strtol_l.isra.0+0xb2>
  404718:	1c7e      	adds	r6, r7, #1
  40471a:	d007      	beq.n	40472c <_strtol_l.isra.0+0x7c>
  40471c:	4581      	cmp	r9, r0
  40471e:	d31d      	bcc.n	40475c <_strtol_l.isra.0+0xac>
  404720:	d101      	bne.n	404726 <_strtol_l.isra.0+0x76>
  404722:	45a2      	cmp	sl, r4
  404724:	db1a      	blt.n	40475c <_strtol_l.isra.0+0xac>
  404726:	fb00 4003 	mla	r0, r0, r3, r4
  40472a:	2701      	movs	r7, #1
  40472c:	f815 4b01 	ldrb.w	r4, [r5], #1
  404730:	e7eb      	b.n	40470a <_strtol_l.isra.0+0x5a>
  404732:	4628      	mov	r0, r5
  404734:	e7c1      	b.n	4046ba <_strtol_l.isra.0+0xa>
  404736:	2c2b      	cmp	r4, #43	; 0x2b
  404738:	bf08      	it	eq
  40473a:	782c      	ldrbeq	r4, [r5, #0]
  40473c:	46b0      	mov	r8, r6
  40473e:	bf08      	it	eq
  404740:	1c85      	addeq	r5, r0, #2
  404742:	e7c7      	b.n	4046d4 <_strtol_l.isra.0+0x24>
  404744:	f1a4 0641 	sub.w	r6, r4, #65	; 0x41
  404748:	2e19      	cmp	r6, #25
  40474a:	d801      	bhi.n	404750 <_strtol_l.isra.0+0xa0>
  40474c:	3c37      	subs	r4, #55	; 0x37
  40474e:	e7e1      	b.n	404714 <_strtol_l.isra.0+0x64>
  404750:	f1a4 0661 	sub.w	r6, r4, #97	; 0x61
  404754:	2e19      	cmp	r6, #25
  404756:	d804      	bhi.n	404762 <_strtol_l.isra.0+0xb2>
  404758:	3c57      	subs	r4, #87	; 0x57
  40475a:	e7db      	b.n	404714 <_strtol_l.isra.0+0x64>
  40475c:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
  404760:	e7e4      	b.n	40472c <_strtol_l.isra.0+0x7c>
  404762:	1c7b      	adds	r3, r7, #1
  404764:	d106      	bne.n	404774 <_strtol_l.isra.0+0xc4>
  404766:	2322      	movs	r3, #34	; 0x22
  404768:	f8ce 3000 	str.w	r3, [lr]
  40476c:	4660      	mov	r0, ip
  40476e:	b942      	cbnz	r2, 404782 <_strtol_l.isra.0+0xd2>
  404770:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  404774:	f1b8 0f00 	cmp.w	r8, #0
  404778:	d000      	beq.n	40477c <_strtol_l.isra.0+0xcc>
  40477a:	4240      	negs	r0, r0
  40477c:	2a00      	cmp	r2, #0
  40477e:	d0f7      	beq.n	404770 <_strtol_l.isra.0+0xc0>
  404780:	b107      	cbz	r7, 404784 <_strtol_l.isra.0+0xd4>
  404782:	1e69      	subs	r1, r5, #1
  404784:	6011      	str	r1, [r2, #0]
  404786:	e7f3      	b.n	404770 <_strtol_l.isra.0+0xc0>
  404788:	2430      	movs	r4, #48	; 0x30
  40478a:	2b00      	cmp	r3, #0
  40478c:	d1b0      	bne.n	4046f0 <_strtol_l.isra.0+0x40>
  40478e:	2308      	movs	r3, #8
  404790:	e7ae      	b.n	4046f0 <_strtol_l.isra.0+0x40>
  404792:	2c30      	cmp	r4, #48	; 0x30
  404794:	d0a4      	beq.n	4046e0 <_strtol_l.isra.0+0x30>
  404796:	230a      	movs	r3, #10
  404798:	e7aa      	b.n	4046f0 <_strtol_l.isra.0+0x40>
  40479a:	bf00      	nop
  40479c:	00408479 	.word	0x00408479

004047a0 <strtol>:
  4047a0:	4613      	mov	r3, r2
  4047a2:	460a      	mov	r2, r1
  4047a4:	4601      	mov	r1, r0
  4047a6:	4802      	ldr	r0, [pc, #8]	; (4047b0 <strtol+0x10>)
  4047a8:	6800      	ldr	r0, [r0, #0]
  4047aa:	f7ff bf81 	b.w	4046b0 <_strtol_l.isra.0>
  4047ae:	bf00      	nop
  4047b0:	20000014 	.word	0x20000014

004047b4 <__swbuf_r>:
  4047b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4047b6:	460e      	mov	r6, r1
  4047b8:	4614      	mov	r4, r2
  4047ba:	4605      	mov	r5, r0
  4047bc:	b118      	cbz	r0, 4047c6 <__swbuf_r+0x12>
  4047be:	6983      	ldr	r3, [r0, #24]
  4047c0:	b90b      	cbnz	r3, 4047c6 <__swbuf_r+0x12>
  4047c2:	f001 f809 	bl	4057d8 <__sinit>
  4047c6:	4b21      	ldr	r3, [pc, #132]	; (40484c <__swbuf_r+0x98>)
  4047c8:	429c      	cmp	r4, r3
  4047ca:	d12b      	bne.n	404824 <__swbuf_r+0x70>
  4047cc:	686c      	ldr	r4, [r5, #4]
  4047ce:	69a3      	ldr	r3, [r4, #24]
  4047d0:	60a3      	str	r3, [r4, #8]
  4047d2:	89a3      	ldrh	r3, [r4, #12]
  4047d4:	071a      	lsls	r2, r3, #28
  4047d6:	d52f      	bpl.n	404838 <__swbuf_r+0x84>
  4047d8:	6923      	ldr	r3, [r4, #16]
  4047da:	b36b      	cbz	r3, 404838 <__swbuf_r+0x84>
  4047dc:	6923      	ldr	r3, [r4, #16]
  4047de:	6820      	ldr	r0, [r4, #0]
  4047e0:	1ac0      	subs	r0, r0, r3
  4047e2:	6963      	ldr	r3, [r4, #20]
  4047e4:	b2f6      	uxtb	r6, r6
  4047e6:	4283      	cmp	r3, r0
  4047e8:	4637      	mov	r7, r6
  4047ea:	dc04      	bgt.n	4047f6 <__swbuf_r+0x42>
  4047ec:	4621      	mov	r1, r4
  4047ee:	4628      	mov	r0, r5
  4047f0:	f000 ff5e 	bl	4056b0 <_fflush_r>
  4047f4:	bb30      	cbnz	r0, 404844 <__swbuf_r+0x90>
  4047f6:	68a3      	ldr	r3, [r4, #8]
  4047f8:	3b01      	subs	r3, #1
  4047fa:	60a3      	str	r3, [r4, #8]
  4047fc:	6823      	ldr	r3, [r4, #0]
  4047fe:	1c5a      	adds	r2, r3, #1
  404800:	6022      	str	r2, [r4, #0]
  404802:	701e      	strb	r6, [r3, #0]
  404804:	6963      	ldr	r3, [r4, #20]
  404806:	3001      	adds	r0, #1
  404808:	4283      	cmp	r3, r0
  40480a:	d004      	beq.n	404816 <__swbuf_r+0x62>
  40480c:	89a3      	ldrh	r3, [r4, #12]
  40480e:	07db      	lsls	r3, r3, #31
  404810:	d506      	bpl.n	404820 <__swbuf_r+0x6c>
  404812:	2e0a      	cmp	r6, #10
  404814:	d104      	bne.n	404820 <__swbuf_r+0x6c>
  404816:	4621      	mov	r1, r4
  404818:	4628      	mov	r0, r5
  40481a:	f000 ff49 	bl	4056b0 <_fflush_r>
  40481e:	b988      	cbnz	r0, 404844 <__swbuf_r+0x90>
  404820:	4638      	mov	r0, r7
  404822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  404824:	4b0a      	ldr	r3, [pc, #40]	; (404850 <__swbuf_r+0x9c>)
  404826:	429c      	cmp	r4, r3
  404828:	d101      	bne.n	40482e <__swbuf_r+0x7a>
  40482a:	68ac      	ldr	r4, [r5, #8]
  40482c:	e7cf      	b.n	4047ce <__swbuf_r+0x1a>
  40482e:	4b09      	ldr	r3, [pc, #36]	; (404854 <__swbuf_r+0xa0>)
  404830:	429c      	cmp	r4, r3
  404832:	bf08      	it	eq
  404834:	68ec      	ldreq	r4, [r5, #12]
  404836:	e7ca      	b.n	4047ce <__swbuf_r+0x1a>
  404838:	4621      	mov	r1, r4
  40483a:	4628      	mov	r0, r5
  40483c:	f000 f80c 	bl	404858 <__swsetup_r>
  404840:	2800      	cmp	r0, #0
  404842:	d0cb      	beq.n	4047dc <__swbuf_r+0x28>
  404844:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
  404848:	e7ea      	b.n	404820 <__swbuf_r+0x6c>
  40484a:	bf00      	nop
  40484c:	004085a8 	.word	0x004085a8
  404850:	004085c8 	.word	0x004085c8
  404854:	00408588 	.word	0x00408588

00404858 <__swsetup_r>:
  404858:	4b32      	ldr	r3, [pc, #200]	; (404924 <__swsetup_r+0xcc>)
  40485a:	b570      	push	{r4, r5, r6, lr}
  40485c:	681d      	ldr	r5, [r3, #0]
  40485e:	4606      	mov	r6, r0
  404860:	460c      	mov	r4, r1
  404862:	b125      	cbz	r5, 40486e <__swsetup_r+0x16>
  404864:	69ab      	ldr	r3, [r5, #24]
  404866:	b913      	cbnz	r3, 40486e <__swsetup_r+0x16>
  404868:	4628      	mov	r0, r5
  40486a:	f000 ffb5 	bl	4057d8 <__sinit>
  40486e:	4b2e      	ldr	r3, [pc, #184]	; (404928 <__swsetup_r+0xd0>)
  404870:	429c      	cmp	r4, r3
  404872:	d10f      	bne.n	404894 <__swsetup_r+0x3c>
  404874:	686c      	ldr	r4, [r5, #4]
  404876:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40487a:	b29a      	uxth	r2, r3
  40487c:	0715      	lsls	r5, r2, #28
  40487e:	d42c      	bmi.n	4048da <__swsetup_r+0x82>
  404880:	06d0      	lsls	r0, r2, #27
  404882:	d411      	bmi.n	4048a8 <__swsetup_r+0x50>
  404884:	2209      	movs	r2, #9
  404886:	6032      	str	r2, [r6, #0]
  404888:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40488c:	81a3      	strh	r3, [r4, #12]
  40488e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  404892:	e03e      	b.n	404912 <__swsetup_r+0xba>
  404894:	4b25      	ldr	r3, [pc, #148]	; (40492c <__swsetup_r+0xd4>)
  404896:	429c      	cmp	r4, r3
  404898:	d101      	bne.n	40489e <__swsetup_r+0x46>
  40489a:	68ac      	ldr	r4, [r5, #8]
  40489c:	e7eb      	b.n	404876 <__swsetup_r+0x1e>
  40489e:	4b24      	ldr	r3, [pc, #144]	; (404930 <__swsetup_r+0xd8>)
  4048a0:	429c      	cmp	r4, r3
  4048a2:	bf08      	it	eq
  4048a4:	68ec      	ldreq	r4, [r5, #12]
  4048a6:	e7e6      	b.n	404876 <__swsetup_r+0x1e>
  4048a8:	0751      	lsls	r1, r2, #29
  4048aa:	d512      	bpl.n	4048d2 <__swsetup_r+0x7a>
  4048ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
  4048ae:	b141      	cbz	r1, 4048c2 <__swsetup_r+0x6a>
  4048b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
  4048b4:	4299      	cmp	r1, r3
  4048b6:	d002      	beq.n	4048be <__swsetup_r+0x66>
  4048b8:	4630      	mov	r0, r6
  4048ba:	f002 f82b 	bl	406914 <_free_r>
  4048be:	2300      	movs	r3, #0
  4048c0:	6363      	str	r3, [r4, #52]	; 0x34
  4048c2:	89a3      	ldrh	r3, [r4, #12]
  4048c4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
  4048c8:	81a3      	strh	r3, [r4, #12]
  4048ca:	2300      	movs	r3, #0
  4048cc:	6063      	str	r3, [r4, #4]
  4048ce:	6923      	ldr	r3, [r4, #16]
  4048d0:	6023      	str	r3, [r4, #0]
  4048d2:	89a3      	ldrh	r3, [r4, #12]
  4048d4:	f043 0308 	orr.w	r3, r3, #8
  4048d8:	81a3      	strh	r3, [r4, #12]
  4048da:	6923      	ldr	r3, [r4, #16]
  4048dc:	b94b      	cbnz	r3, 4048f2 <__swsetup_r+0x9a>
  4048de:	89a3      	ldrh	r3, [r4, #12]
  4048e0:	f403 7320 	and.w	r3, r3, #640	; 0x280
  4048e4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4048e8:	d003      	beq.n	4048f2 <__swsetup_r+0x9a>
  4048ea:	4621      	mov	r1, r4
  4048ec:	4630      	mov	r0, r6
  4048ee:	f001 fb65 	bl	405fbc <__smakebuf_r>
  4048f2:	89a2      	ldrh	r2, [r4, #12]
  4048f4:	f012 0301 	ands.w	r3, r2, #1
  4048f8:	d00c      	beq.n	404914 <__swsetup_r+0xbc>
  4048fa:	2300      	movs	r3, #0
  4048fc:	60a3      	str	r3, [r4, #8]
  4048fe:	6963      	ldr	r3, [r4, #20]
  404900:	425b      	negs	r3, r3
  404902:	61a3      	str	r3, [r4, #24]
  404904:	6923      	ldr	r3, [r4, #16]
  404906:	b953      	cbnz	r3, 40491e <__swsetup_r+0xc6>
  404908:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  40490c:	f013 0080 	ands.w	r0, r3, #128	; 0x80
  404910:	d1ba      	bne.n	404888 <__swsetup_r+0x30>
  404912:	bd70      	pop	{r4, r5, r6, pc}
  404914:	0792      	lsls	r2, r2, #30
  404916:	bf58      	it	pl
  404918:	6963      	ldrpl	r3, [r4, #20]
  40491a:	60a3      	str	r3, [r4, #8]
  40491c:	e7f2      	b.n	404904 <__swsetup_r+0xac>
  40491e:	2000      	movs	r0, #0
  404920:	e7f7      	b.n	404912 <__swsetup_r+0xba>
  404922:	bf00      	nop
  404924:	20000014 	.word	0x20000014
  404928:	004085a8 	.word	0x004085a8
  40492c:	004085c8 	.word	0x004085c8
  404930:	00408588 	.word	0x00408588

00404934 <quorem>:
  404934:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404938:	6903      	ldr	r3, [r0, #16]
  40493a:	690c      	ldr	r4, [r1, #16]
  40493c:	42a3      	cmp	r3, r4
  40493e:	4680      	mov	r8, r0
  404940:	db7f      	blt.n	404a42 <quorem+0x10e>
  404942:	3c01      	subs	r4, #1
  404944:	f101 0714 	add.w	r7, r1, #20
  404948:	00a0      	lsls	r0, r4, #2
  40494a:	f108 0514 	add.w	r5, r8, #20
  40494e:	182b      	adds	r3, r5, r0
  404950:	9301      	str	r3, [sp, #4]
  404952:	f857 3024 	ldr.w	r3, [r7, r4, lsl #2]
  404956:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
  40495a:	3301      	adds	r3, #1
  40495c:	429a      	cmp	r2, r3
  40495e:	eb07 0900 	add.w	r9, r7, r0
  404962:	fbb2 f6f3 	udiv	r6, r2, r3
  404966:	d331      	bcc.n	4049cc <quorem+0x98>
  404968:	f04f 0a00 	mov.w	sl, #0
  40496c:	46bc      	mov	ip, r7
  40496e:	46ae      	mov	lr, r5
  404970:	46d3      	mov	fp, sl
  404972:	f85c 2b04 	ldr.w	r2, [ip], #4
  404976:	b293      	uxth	r3, r2
  404978:	fb06 a303 	mla	r3, r6, r3, sl
  40497c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
  404980:	b29b      	uxth	r3, r3
  404982:	ebab 0303 	sub.w	r3, fp, r3
  404986:	0c12      	lsrs	r2, r2, #16
  404988:	f8de b000 	ldr.w	fp, [lr]
  40498c:	fb06 a202 	mla	r2, r6, r2, sl
  404990:	fa13 f38b 	uxtah	r3, r3, fp
  404994:	ea4f 4a12 	mov.w	sl, r2, lsr #16
  404998:	fa1f fb82 	uxth.w	fp, r2
  40499c:	f8de 2000 	ldr.w	r2, [lr]
  4049a0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
  4049a4:	eb02 4223 	add.w	r2, r2, r3, asr #16
  4049a8:	b29b      	uxth	r3, r3
  4049aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4049ae:	45e1      	cmp	r9, ip
  4049b0:	ea4f 4b22 	mov.w	fp, r2, asr #16
  4049b4:	f84e 3b04 	str.w	r3, [lr], #4
  4049b8:	d2db      	bcs.n	404972 <quorem+0x3e>
  4049ba:	582b      	ldr	r3, [r5, r0]
  4049bc:	b933      	cbnz	r3, 4049cc <quorem+0x98>
  4049be:	9b01      	ldr	r3, [sp, #4]
  4049c0:	3b04      	subs	r3, #4
  4049c2:	429d      	cmp	r5, r3
  4049c4:	461a      	mov	r2, r3
  4049c6:	d330      	bcc.n	404a2a <quorem+0xf6>
  4049c8:	f8c8 4010 	str.w	r4, [r8, #16]
  4049cc:	4640      	mov	r0, r8
  4049ce:	f001 fdee 	bl	4065ae <__mcmp>
  4049d2:	2800      	cmp	r0, #0
  4049d4:	db25      	blt.n	404a22 <quorem+0xee>
  4049d6:	3601      	adds	r6, #1
  4049d8:	4628      	mov	r0, r5
  4049da:	f04f 0c00 	mov.w	ip, #0
  4049de:	f857 2b04 	ldr.w	r2, [r7], #4
  4049e2:	f8d0 e000 	ldr.w	lr, [r0]
  4049e6:	b293      	uxth	r3, r2
  4049e8:	ebac 0303 	sub.w	r3, ip, r3
  4049ec:	0c12      	lsrs	r2, r2, #16
  4049ee:	fa13 f38e 	uxtah	r3, r3, lr
  4049f2:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
  4049f6:	eb02 4223 	add.w	r2, r2, r3, asr #16
  4049fa:	b29b      	uxth	r3, r3
  4049fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  404a00:	45b9      	cmp	r9, r7
  404a02:	ea4f 4c22 	mov.w	ip, r2, asr #16
  404a06:	f840 3b04 	str.w	r3, [r0], #4
  404a0a:	d2e8      	bcs.n	4049de <quorem+0xaa>
  404a0c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
  404a10:	eb05 0384 	add.w	r3, r5, r4, lsl #2
  404a14:	b92a      	cbnz	r2, 404a22 <quorem+0xee>
  404a16:	3b04      	subs	r3, #4
  404a18:	429d      	cmp	r5, r3
  404a1a:	461a      	mov	r2, r3
  404a1c:	d30b      	bcc.n	404a36 <quorem+0x102>
  404a1e:	f8c8 4010 	str.w	r4, [r8, #16]
  404a22:	4630      	mov	r0, r6
  404a24:	b003      	add	sp, #12
  404a26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404a2a:	6812      	ldr	r2, [r2, #0]
  404a2c:	3b04      	subs	r3, #4
  404a2e:	2a00      	cmp	r2, #0
  404a30:	d1ca      	bne.n	4049c8 <quorem+0x94>
  404a32:	3c01      	subs	r4, #1
  404a34:	e7c5      	b.n	4049c2 <quorem+0x8e>
  404a36:	6812      	ldr	r2, [r2, #0]
  404a38:	3b04      	subs	r3, #4
  404a3a:	2a00      	cmp	r2, #0
  404a3c:	d1ef      	bne.n	404a1e <quorem+0xea>
  404a3e:	3c01      	subs	r4, #1
  404a40:	e7ea      	b.n	404a18 <quorem+0xe4>
  404a42:	2000      	movs	r0, #0
  404a44:	e7ee      	b.n	404a24 <quorem+0xf0>
	...

00404a48 <_dtoa_r>:
  404a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404a4c:	6a47      	ldr	r7, [r0, #36]	; 0x24
  404a4e:	b097      	sub	sp, #92	; 0x5c
  404a50:	4680      	mov	r8, r0
  404a52:	461d      	mov	r5, r3
  404a54:	9e23      	ldr	r6, [sp, #140]	; 0x8c
  404a56:	4692      	mov	sl, r2
  404a58:	469b      	mov	fp, r3
  404a5a:	b947      	cbnz	r7, 404a6e <_dtoa_r+0x26>
  404a5c:	2010      	movs	r0, #16
  404a5e:	f001 faed 	bl	40603c <malloc>
  404a62:	e9c0 7701 	strd	r7, r7, [r0, #4]
  404a66:	f8c8 0024 	str.w	r0, [r8, #36]	; 0x24
  404a6a:	6007      	str	r7, [r0, #0]
  404a6c:	60c7      	str	r7, [r0, #12]
  404a6e:	f8d8 3024 	ldr.w	r3, [r8, #36]	; 0x24
  404a72:	6819      	ldr	r1, [r3, #0]
  404a74:	b159      	cbz	r1, 404a8e <_dtoa_r+0x46>
  404a76:	685a      	ldr	r2, [r3, #4]
  404a78:	604a      	str	r2, [r1, #4]
  404a7a:	2301      	movs	r3, #1
  404a7c:	4093      	lsls	r3, r2
  404a7e:	608b      	str	r3, [r1, #8]
  404a80:	4640      	mov	r0, r8
  404a82:	f001 fb79 	bl	406178 <_Bfree>
  404a86:	f8d8 3024 	ldr.w	r3, [r8, #36]	; 0x24
  404a8a:	2200      	movs	r2, #0
  404a8c:	601a      	str	r2, [r3, #0]
  404a8e:	1e2b      	subs	r3, r5, #0
  404a90:	bfaa      	itet	ge
  404a92:	2300      	movge	r3, #0
  404a94:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
  404a98:	6033      	strge	r3, [r6, #0]
  404a9a:	4ba7      	ldr	r3, [pc, #668]	; (404d38 <_dtoa_r+0x2f0>)
  404a9c:	bfbc      	itt	lt
  404a9e:	2201      	movlt	r2, #1
  404aa0:	6032      	strlt	r2, [r6, #0]
  404aa2:	ea33 030b 	bics.w	r3, r3, fp
  404aa6:	465c      	mov	r4, fp
  404aa8:	d11a      	bne.n	404ae0 <_dtoa_r+0x98>
  404aaa:	9a22      	ldr	r2, [sp, #136]	; 0x88
  404aac:	f242 730f 	movw	r3, #9999	; 0x270f
  404ab0:	6013      	str	r3, [r2, #0]
  404ab2:	f3cb 0313 	ubfx	r3, fp, #0, #20
  404ab6:	ea53 030a 	orrs.w	r3, r3, sl
  404aba:	f000 855e 	beq.w	40557a <_dtoa_r+0xb32>
  404abe:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404ac0:	b953      	cbnz	r3, 404ad8 <_dtoa_r+0x90>
  404ac2:	4b9e      	ldr	r3, [pc, #632]	; (404d3c <_dtoa_r+0x2f4>)
  404ac4:	e021      	b.n	404b0a <_dtoa_r+0xc2>
  404ac6:	4b9e      	ldr	r3, [pc, #632]	; (404d40 <_dtoa_r+0x2f8>)
  404ac8:	9305      	str	r3, [sp, #20]
  404aca:	3308      	adds	r3, #8
  404acc:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404ace:	6013      	str	r3, [r2, #0]
  404ad0:	9805      	ldr	r0, [sp, #20]
  404ad2:	b017      	add	sp, #92	; 0x5c
  404ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404ad8:	4b98      	ldr	r3, [pc, #608]	; (404d3c <_dtoa_r+0x2f4>)
  404ada:	9305      	str	r3, [sp, #20]
  404adc:	3303      	adds	r3, #3
  404ade:	e7f5      	b.n	404acc <_dtoa_r+0x84>
  404ae0:	2200      	movs	r2, #0
  404ae2:	2300      	movs	r3, #0
  404ae4:	4650      	mov	r0, sl
  404ae6:	4659      	mov	r1, fp
  404ae8:	e9cd ab0c 	strd	sl, fp, [sp, #48]	; 0x30
  404aec:	f002 fe1a 	bl	407724 <__aeabi_dcmpeq>
  404af0:	4607      	mov	r7, r0
  404af2:	b160      	cbz	r0, 404b0e <_dtoa_r+0xc6>
  404af4:	9a22      	ldr	r2, [sp, #136]	; 0x88
  404af6:	2301      	movs	r3, #1
  404af8:	6013      	str	r3, [r2, #0]
  404afa:	9b24      	ldr	r3, [sp, #144]	; 0x90
  404afc:	2b00      	cmp	r3, #0
  404afe:	f000 8539 	beq.w	405574 <_dtoa_r+0xb2c>
  404b02:	4b90      	ldr	r3, [pc, #576]	; (404d44 <_dtoa_r+0x2fc>)
  404b04:	9a24      	ldr	r2, [sp, #144]	; 0x90
  404b06:	6013      	str	r3, [r2, #0]
  404b08:	3b01      	subs	r3, #1
  404b0a:	9305      	str	r3, [sp, #20]
  404b0c:	e7e0      	b.n	404ad0 <_dtoa_r+0x88>
  404b0e:	ab14      	add	r3, sp, #80	; 0x50
  404b10:	9301      	str	r3, [sp, #4]
  404b12:	ab15      	add	r3, sp, #84	; 0x54
  404b14:	9300      	str	r3, [sp, #0]
  404b16:	4640      	mov	r0, r8
  404b18:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
  404b1c:	f001 fe34 	bl	406788 <__d2b>
  404b20:	f3cb 560a 	ubfx	r6, fp, #20, #11
  404b24:	9003      	str	r0, [sp, #12]
  404b26:	2e00      	cmp	r6, #0
  404b28:	d07f      	beq.n	404c2a <_dtoa_r+0x1e2>
  404b2a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  404b2c:	9712      	str	r7, [sp, #72]	; 0x48
  404b2e:	f3c3 0313 	ubfx	r3, r3, #0, #20
  404b32:	e9dd 450c 	ldrd	r4, r5, [sp, #48]	; 0x30
  404b36:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
  404b3a:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
  404b3e:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
  404b42:	2200      	movs	r2, #0
  404b44:	4b80      	ldr	r3, [pc, #512]	; (404d48 <_dtoa_r+0x300>)
  404b46:	4620      	mov	r0, r4
  404b48:	4629      	mov	r1, r5
  404b4a:	f002 f9cb 	bl	406ee4 <__aeabi_dsub>
  404b4e:	a374      	add	r3, pc, #464	; (adr r3, 404d20 <_dtoa_r+0x2d8>)
  404b50:	e9d3 2300 	ldrd	r2, r3, [r3]
  404b54:	f002 fb7e 	bl	407254 <__aeabi_dmul>
  404b58:	a373      	add	r3, pc, #460	; (adr r3, 404d28 <_dtoa_r+0x2e0>)
  404b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
  404b5e:	f002 f9c3 	bl	406ee8 <__adddf3>
  404b62:	4604      	mov	r4, r0
  404b64:	4630      	mov	r0, r6
  404b66:	460d      	mov	r5, r1
  404b68:	f002 fb0a 	bl	407180 <__aeabi_i2d>
  404b6c:	a370      	add	r3, pc, #448	; (adr r3, 404d30 <_dtoa_r+0x2e8>)
  404b6e:	e9d3 2300 	ldrd	r2, r3, [r3]
  404b72:	f002 fb6f 	bl	407254 <__aeabi_dmul>
  404b76:	4602      	mov	r2, r0
  404b78:	460b      	mov	r3, r1
  404b7a:	4620      	mov	r0, r4
  404b7c:	4629      	mov	r1, r5
  404b7e:	f002 f9b3 	bl	406ee8 <__adddf3>
  404b82:	4604      	mov	r4, r0
  404b84:	460d      	mov	r5, r1
  404b86:	f002 fe15 	bl	4077b4 <__aeabi_d2iz>
  404b8a:	2200      	movs	r2, #0
  404b8c:	4681      	mov	r9, r0
  404b8e:	2300      	movs	r3, #0
  404b90:	4620      	mov	r0, r4
  404b92:	4629      	mov	r1, r5
  404b94:	f002 fdd0 	bl	407738 <__aeabi_dcmplt>
  404b98:	b148      	cbz	r0, 404bae <_dtoa_r+0x166>
  404b9a:	4648      	mov	r0, r9
  404b9c:	f002 faf0 	bl	407180 <__aeabi_i2d>
  404ba0:	4622      	mov	r2, r4
  404ba2:	462b      	mov	r3, r5
  404ba4:	f002 fdbe 	bl	407724 <__aeabi_dcmpeq>
  404ba8:	b908      	cbnz	r0, 404bae <_dtoa_r+0x166>
  404baa:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
  404bae:	f1b9 0f16 	cmp.w	r9, #22
  404bb2:	d857      	bhi.n	404c64 <_dtoa_r+0x21c>
  404bb4:	4b65      	ldr	r3, [pc, #404]	; (404d4c <_dtoa_r+0x304>)
  404bb6:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  404bba:	e9d3 2300 	ldrd	r2, r3, [r3]
  404bbe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  404bc2:	f002 fdb9 	bl	407738 <__aeabi_dcmplt>
  404bc6:	2800      	cmp	r0, #0
  404bc8:	d04e      	beq.n	404c68 <_dtoa_r+0x220>
  404bca:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
  404bce:	2300      	movs	r3, #0
  404bd0:	9311      	str	r3, [sp, #68]	; 0x44
  404bd2:	9b14      	ldr	r3, [sp, #80]	; 0x50
  404bd4:	1b9e      	subs	r6, r3, r6
  404bd6:	1e73      	subs	r3, r6, #1
  404bd8:	9309      	str	r3, [sp, #36]	; 0x24
  404bda:	bf45      	ittet	mi
  404bdc:	f1c6 0301 	rsbmi	r3, r6, #1
  404be0:	9308      	strmi	r3, [sp, #32]
  404be2:	2300      	movpl	r3, #0
  404be4:	2300      	movmi	r3, #0
  404be6:	bf4c      	ite	mi
  404be8:	9309      	strmi	r3, [sp, #36]	; 0x24
  404bea:	9308      	strpl	r3, [sp, #32]
  404bec:	f1b9 0f00 	cmp.w	r9, #0
  404bf0:	db3c      	blt.n	404c6c <_dtoa_r+0x224>
  404bf2:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404bf4:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  404bf8:	444b      	add	r3, r9
  404bfa:	9309      	str	r3, [sp, #36]	; 0x24
  404bfc:	2300      	movs	r3, #0
  404bfe:	930a      	str	r3, [sp, #40]	; 0x28
  404c00:	9b20      	ldr	r3, [sp, #128]	; 0x80
  404c02:	2b09      	cmp	r3, #9
  404c04:	f200 80a6 	bhi.w	404d54 <_dtoa_r+0x30c>
  404c08:	2b05      	cmp	r3, #5
  404c0a:	bfc4      	itt	gt
  404c0c:	3b04      	subgt	r3, #4
  404c0e:	9320      	strgt	r3, [sp, #128]	; 0x80
  404c10:	9b20      	ldr	r3, [sp, #128]	; 0x80
  404c12:	f1a3 0302 	sub.w	r3, r3, #2
  404c16:	bfcc      	ite	gt
  404c18:	2400      	movgt	r4, #0
  404c1a:	2401      	movle	r4, #1
  404c1c:	2b03      	cmp	r3, #3
  404c1e:	f200 80a4 	bhi.w	404d6a <_dtoa_r+0x322>
  404c22:	e8df f003 	tbb	[pc, r3]
  404c26:	3a2d      	.short	0x3a2d
  404c28:	7b38      	.short	0x7b38
  404c2a:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	; 0x50
  404c2e:	441e      	add	r6, r3
  404c30:	f206 4032 	addw	r0, r6, #1074	; 0x432
  404c34:	2820      	cmp	r0, #32
  404c36:	bfc1      	itttt	gt
  404c38:	f1c0 0040 	rsbgt	r0, r0, #64	; 0x40
  404c3c:	4084      	lslgt	r4, r0
  404c3e:	f206 4012 	addwgt	r0, r6, #1042	; 0x412
  404c42:	fa2a f000 	lsrgt.w	r0, sl, r0
  404c46:	bfd6      	itet	le
  404c48:	f1c0 0020 	rsble	r0, r0, #32
  404c4c:	4320      	orrgt	r0, r4
  404c4e:	fa0a f000 	lslle.w	r0, sl, r0
  404c52:	f002 fa85 	bl	407160 <__aeabi_ui2d>
  404c56:	2301      	movs	r3, #1
  404c58:	4604      	mov	r4, r0
  404c5a:	f1a1 75f8 	sub.w	r5, r1, #32505856	; 0x1f00000
  404c5e:	3e01      	subs	r6, #1
  404c60:	9312      	str	r3, [sp, #72]	; 0x48
  404c62:	e76e      	b.n	404b42 <_dtoa_r+0xfa>
  404c64:	2301      	movs	r3, #1
  404c66:	e7b3      	b.n	404bd0 <_dtoa_r+0x188>
  404c68:	9011      	str	r0, [sp, #68]	; 0x44
  404c6a:	e7b2      	b.n	404bd2 <_dtoa_r+0x18a>
  404c6c:	9b08      	ldr	r3, [sp, #32]
  404c6e:	eba3 0309 	sub.w	r3, r3, r9
  404c72:	9308      	str	r3, [sp, #32]
  404c74:	f1c9 0300 	rsb	r3, r9, #0
  404c78:	930a      	str	r3, [sp, #40]	; 0x28
  404c7a:	2300      	movs	r3, #0
  404c7c:	9310      	str	r3, [sp, #64]	; 0x40
  404c7e:	e7bf      	b.n	404c00 <_dtoa_r+0x1b8>
  404c80:	2300      	movs	r3, #0
  404c82:	930b      	str	r3, [sp, #44]	; 0x2c
  404c84:	9b21      	ldr	r3, [sp, #132]	; 0x84
  404c86:	2b00      	cmp	r3, #0
  404c88:	dc72      	bgt.n	404d70 <_dtoa_r+0x328>
  404c8a:	2301      	movs	r3, #1
  404c8c:	9306      	str	r3, [sp, #24]
  404c8e:	9304      	str	r3, [sp, #16]
  404c90:	461a      	mov	r2, r3
  404c92:	9221      	str	r2, [sp, #132]	; 0x84
  404c94:	e00b      	b.n	404cae <_dtoa_r+0x266>
  404c96:	2301      	movs	r3, #1
  404c98:	e7f3      	b.n	404c82 <_dtoa_r+0x23a>
  404c9a:	2300      	movs	r3, #0
  404c9c:	930b      	str	r3, [sp, #44]	; 0x2c
  404c9e:	9b21      	ldr	r3, [sp, #132]	; 0x84
  404ca0:	444b      	add	r3, r9
  404ca2:	9306      	str	r3, [sp, #24]
  404ca4:	3301      	adds	r3, #1
  404ca6:	2b01      	cmp	r3, #1
  404ca8:	9304      	str	r3, [sp, #16]
  404caa:	bfb8      	it	lt
  404cac:	2301      	movlt	r3, #1
  404cae:	f8d8 5024 	ldr.w	r5, [r8, #36]	; 0x24
  404cb2:	2200      	movs	r2, #0
  404cb4:	606a      	str	r2, [r5, #4]
  404cb6:	2204      	movs	r2, #4
  404cb8:	f102 0014 	add.w	r0, r2, #20
  404cbc:	4298      	cmp	r0, r3
  404cbe:	6869      	ldr	r1, [r5, #4]
  404cc0:	d95a      	bls.n	404d78 <_dtoa_r+0x330>
  404cc2:	4640      	mov	r0, r8
  404cc4:	f001 fa24 	bl	406110 <_Balloc>
  404cc8:	f8d8 3024 	ldr.w	r3, [r8, #36]	; 0x24
  404ccc:	6028      	str	r0, [r5, #0]
  404cce:	681b      	ldr	r3, [r3, #0]
  404cd0:	9305      	str	r3, [sp, #20]
  404cd2:	9b04      	ldr	r3, [sp, #16]
  404cd4:	2b0e      	cmp	r3, #14
  404cd6:	f200 80d2 	bhi.w	404e7e <_dtoa_r+0x436>
  404cda:	2c00      	cmp	r4, #0
  404cdc:	f000 80cf 	beq.w	404e7e <_dtoa_r+0x436>
  404ce0:	f1b9 0f00 	cmp.w	r9, #0
  404ce4:	dd66      	ble.n	404db4 <_dtoa_r+0x36c>
  404ce6:	4a19      	ldr	r2, [pc, #100]	; (404d4c <_dtoa_r+0x304>)
  404ce8:	f009 030f 	and.w	r3, r9, #15
  404cec:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
  404cf0:	e9d3 3400 	ldrd	r3, r4, [r3]
  404cf4:	e9cd 340e 	strd	r3, r4, [sp, #56]	; 0x38
  404cf8:	ea4f 1429 	mov.w	r4, r9, asr #4
  404cfc:	06e0      	lsls	r0, r4, #27
  404cfe:	d557      	bpl.n	404db0 <_dtoa_r+0x368>
  404d00:	4b13      	ldr	r3, [pc, #76]	; (404d50 <_dtoa_r+0x308>)
  404d02:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  404d06:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  404d0a:	f002 fbcd 	bl	4074a8 <__aeabi_ddiv>
  404d0e:	f004 040f 	and.w	r4, r4, #15
  404d12:	4682      	mov	sl, r0
  404d14:	468b      	mov	fp, r1
  404d16:	2703      	movs	r7, #3
  404d18:	4d0d      	ldr	r5, [pc, #52]	; (404d50 <_dtoa_r+0x308>)
  404d1a:	e03e      	b.n	404d9a <_dtoa_r+0x352>
  404d1c:	2301      	movs	r3, #1
  404d1e:	e7bd      	b.n	404c9c <_dtoa_r+0x254>
  404d20:	636f4361 	.word	0x636f4361
  404d24:	3fd287a7 	.word	0x3fd287a7
  404d28:	8b60c8b3 	.word	0x8b60c8b3
  404d2c:	3fc68a28 	.word	0x3fc68a28
  404d30:	509f79fb 	.word	0x509f79fb
  404d34:	3fd34413 	.word	0x3fd34413
  404d38:	7ff00000 	.word	0x7ff00000
  404d3c:	00408582 	.word	0x00408582
  404d40:	00408579 	.word	0x00408579
  404d44:	00408405 	.word	0x00408405
  404d48:	3ff80000 	.word	0x3ff80000
  404d4c:	00408628 	.word	0x00408628
  404d50:	00408600 	.word	0x00408600
  404d54:	2401      	movs	r4, #1
  404d56:	2300      	movs	r3, #0
  404d58:	9320      	str	r3, [sp, #128]	; 0x80
  404d5a:	940b      	str	r4, [sp, #44]	; 0x2c
  404d5c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
  404d60:	9306      	str	r3, [sp, #24]
  404d62:	9304      	str	r3, [sp, #16]
  404d64:	2200      	movs	r2, #0
  404d66:	2312      	movs	r3, #18
  404d68:	e793      	b.n	404c92 <_dtoa_r+0x24a>
  404d6a:	2301      	movs	r3, #1
  404d6c:	930b      	str	r3, [sp, #44]	; 0x2c
  404d6e:	e7f5      	b.n	404d5c <_dtoa_r+0x314>
  404d70:	9b21      	ldr	r3, [sp, #132]	; 0x84
  404d72:	9306      	str	r3, [sp, #24]
  404d74:	9304      	str	r3, [sp, #16]
  404d76:	e79a      	b.n	404cae <_dtoa_r+0x266>
  404d78:	3101      	adds	r1, #1
  404d7a:	6069      	str	r1, [r5, #4]
  404d7c:	0052      	lsls	r2, r2, #1
  404d7e:	e79b      	b.n	404cb8 <_dtoa_r+0x270>
  404d80:	07e1      	lsls	r1, r4, #31
  404d82:	d508      	bpl.n	404d96 <_dtoa_r+0x34e>
  404d84:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  404d88:	e9d5 2300 	ldrd	r2, r3, [r5]
  404d8c:	f002 fa62 	bl	407254 <__aeabi_dmul>
  404d90:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  404d94:	3701      	adds	r7, #1
  404d96:	1064      	asrs	r4, r4, #1
  404d98:	3508      	adds	r5, #8
  404d9a:	2c00      	cmp	r4, #0
  404d9c:	d1f0      	bne.n	404d80 <_dtoa_r+0x338>
  404d9e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404da2:	4650      	mov	r0, sl
  404da4:	4659      	mov	r1, fp
  404da6:	f002 fb7f 	bl	4074a8 <__aeabi_ddiv>
  404daa:	4682      	mov	sl, r0
  404dac:	468b      	mov	fp, r1
  404dae:	e01a      	b.n	404de6 <_dtoa_r+0x39e>
  404db0:	2702      	movs	r7, #2
  404db2:	e7b1      	b.n	404d18 <_dtoa_r+0x2d0>
  404db4:	f000 809d 	beq.w	404ef2 <_dtoa_r+0x4aa>
  404db8:	f1c9 0400 	rsb	r4, r9, #0
  404dbc:	4b9c      	ldr	r3, [pc, #624]	; (405030 <_dtoa_r+0x5e8>)
  404dbe:	4d9d      	ldr	r5, [pc, #628]	; (405034 <_dtoa_r+0x5ec>)
  404dc0:	f004 020f 	and.w	r2, r4, #15
  404dc4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  404dc8:	e9d3 2300 	ldrd	r2, r3, [r3]
  404dcc:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
  404dd0:	f002 fa40 	bl	407254 <__aeabi_dmul>
  404dd4:	1124      	asrs	r4, r4, #4
  404dd6:	4682      	mov	sl, r0
  404dd8:	468b      	mov	fp, r1
  404dda:	2300      	movs	r3, #0
  404ddc:	2702      	movs	r7, #2
  404dde:	2c00      	cmp	r4, #0
  404de0:	d17c      	bne.n	404edc <_dtoa_r+0x494>
  404de2:	2b00      	cmp	r3, #0
  404de4:	d1e1      	bne.n	404daa <_dtoa_r+0x362>
  404de6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  404de8:	2b00      	cmp	r3, #0
  404dea:	f000 8084 	beq.w	404ef6 <_dtoa_r+0x4ae>
  404dee:	2200      	movs	r2, #0
  404df0:	4b91      	ldr	r3, [pc, #580]	; (405038 <_dtoa_r+0x5f0>)
  404df2:	4650      	mov	r0, sl
  404df4:	4659      	mov	r1, fp
  404df6:	465d      	mov	r5, fp
  404df8:	f002 fc9e 	bl	407738 <__aeabi_dcmplt>
  404dfc:	2800      	cmp	r0, #0
  404dfe:	d07a      	beq.n	404ef6 <_dtoa_r+0x4ae>
  404e00:	9b04      	ldr	r3, [sp, #16]
  404e02:	2b00      	cmp	r3, #0
  404e04:	d077      	beq.n	404ef6 <_dtoa_r+0x4ae>
  404e06:	9b06      	ldr	r3, [sp, #24]
  404e08:	2b00      	cmp	r3, #0
  404e0a:	dd36      	ble.n	404e7a <_dtoa_r+0x432>
  404e0c:	4650      	mov	r0, sl
  404e0e:	4659      	mov	r1, fp
  404e10:	2200      	movs	r2, #0
  404e12:	4b8a      	ldr	r3, [pc, #552]	; (40503c <_dtoa_r+0x5f4>)
  404e14:	f002 fa1e 	bl	407254 <__aeabi_dmul>
  404e18:	9c06      	ldr	r4, [sp, #24]
  404e1a:	f109 36ff 	add.w	r6, r9, #4294967295	; 0xffffffff
  404e1e:	4682      	mov	sl, r0
  404e20:	468b      	mov	fp, r1
  404e22:	3701      	adds	r7, #1
  404e24:	4638      	mov	r0, r7
  404e26:	f002 f9ab 	bl	407180 <__aeabi_i2d>
  404e2a:	4652      	mov	r2, sl
  404e2c:	465b      	mov	r3, fp
  404e2e:	f002 fa11 	bl	407254 <__aeabi_dmul>
  404e32:	2200      	movs	r2, #0
  404e34:	4b82      	ldr	r3, [pc, #520]	; (405040 <_dtoa_r+0x5f8>)
  404e36:	f002 f857 	bl	406ee8 <__adddf3>
  404e3a:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
  404e3e:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  404e42:	950f      	str	r5, [sp, #60]	; 0x3c
  404e44:	2c00      	cmp	r4, #0
  404e46:	d159      	bne.n	404efc <_dtoa_r+0x4b4>
  404e48:	2200      	movs	r2, #0
  404e4a:	4b7e      	ldr	r3, [pc, #504]	; (405044 <_dtoa_r+0x5fc>)
  404e4c:	4650      	mov	r0, sl
  404e4e:	4659      	mov	r1, fp
  404e50:	f002 f848 	bl	406ee4 <__aeabi_dsub>
  404e54:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404e56:	462b      	mov	r3, r5
  404e58:	4682      	mov	sl, r0
  404e5a:	468b      	mov	fp, r1
  404e5c:	f002 fc8a 	bl	407774 <__aeabi_dcmpgt>
  404e60:	2800      	cmp	r0, #0
  404e62:	f040 8288 	bne.w	405376 <_dtoa_r+0x92e>
  404e66:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  404e68:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
  404e6c:	4650      	mov	r0, sl
  404e6e:	4659      	mov	r1, fp
  404e70:	f002 fc62 	bl	407738 <__aeabi_dcmplt>
  404e74:	2800      	cmp	r0, #0
  404e76:	f040 827c 	bne.w	405372 <_dtoa_r+0x92a>
  404e7a:	e9dd ab0c 	ldrd	sl, fp, [sp, #48]	; 0x30
  404e7e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  404e80:	2b00      	cmp	r3, #0
  404e82:	f2c0 814d 	blt.w	405120 <_dtoa_r+0x6d8>
  404e86:	f1b9 0f0e 	cmp.w	r9, #14
  404e8a:	f300 8149 	bgt.w	405120 <_dtoa_r+0x6d8>
  404e8e:	4b68      	ldr	r3, [pc, #416]	; (405030 <_dtoa_r+0x5e8>)
  404e90:	eb03 03c9 	add.w	r3, r3, r9, lsl #3
  404e94:	e9d3 3400 	ldrd	r3, r4, [r3]
  404e98:	e9cd 3406 	strd	r3, r4, [sp, #24]
  404e9c:	9b21      	ldr	r3, [sp, #132]	; 0x84
  404e9e:	2b00      	cmp	r3, #0
  404ea0:	f280 80d4 	bge.w	40504c <_dtoa_r+0x604>
  404ea4:	9b04      	ldr	r3, [sp, #16]
  404ea6:	2b00      	cmp	r3, #0
  404ea8:	f300 80d0 	bgt.w	40504c <_dtoa_r+0x604>
  404eac:	f040 8260 	bne.w	405370 <_dtoa_r+0x928>
  404eb0:	2200      	movs	r2, #0
  404eb2:	4b64      	ldr	r3, [pc, #400]	; (405044 <_dtoa_r+0x5fc>)
  404eb4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
  404eb8:	f002 f9cc 	bl	407254 <__aeabi_dmul>
  404ebc:	4652      	mov	r2, sl
  404ebe:	465b      	mov	r3, fp
  404ec0:	f002 fc4e 	bl	407760 <__aeabi_dcmpge>
  404ec4:	9c04      	ldr	r4, [sp, #16]
  404ec6:	4626      	mov	r6, r4
  404ec8:	2800      	cmp	r0, #0
  404eca:	f040 8239 	bne.w	405340 <_dtoa_r+0x8f8>
  404ece:	9d05      	ldr	r5, [sp, #20]
  404ed0:	2331      	movs	r3, #49	; 0x31
  404ed2:	f805 3b01 	strb.w	r3, [r5], #1
  404ed6:	f109 0901 	add.w	r9, r9, #1
  404eda:	e235      	b.n	405348 <_dtoa_r+0x900>
  404edc:	07e2      	lsls	r2, r4, #31
  404ede:	d505      	bpl.n	404eec <_dtoa_r+0x4a4>
  404ee0:	e9d5 2300 	ldrd	r2, r3, [r5]
  404ee4:	f002 f9b6 	bl	407254 <__aeabi_dmul>
  404ee8:	3701      	adds	r7, #1
  404eea:	2301      	movs	r3, #1
  404eec:	1064      	asrs	r4, r4, #1
  404eee:	3508      	adds	r5, #8
  404ef0:	e775      	b.n	404dde <_dtoa_r+0x396>
  404ef2:	2702      	movs	r7, #2
  404ef4:	e777      	b.n	404de6 <_dtoa_r+0x39e>
  404ef6:	464e      	mov	r6, r9
  404ef8:	9c04      	ldr	r4, [sp, #16]
  404efa:	e793      	b.n	404e24 <_dtoa_r+0x3dc>
  404efc:	4b4c      	ldr	r3, [pc, #304]	; (405030 <_dtoa_r+0x5e8>)
  404efe:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
  404f02:	e953 0102 	ldrd	r0, r1, [r3, #-8]
  404f06:	9b05      	ldr	r3, [sp, #20]
  404f08:	441c      	add	r4, r3
  404f0a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  404f0c:	2b00      	cmp	r3, #0
  404f0e:	d044      	beq.n	404f9a <_dtoa_r+0x552>
  404f10:	4602      	mov	r2, r0
  404f12:	460b      	mov	r3, r1
  404f14:	2000      	movs	r0, #0
  404f16:	494c      	ldr	r1, [pc, #304]	; (405048 <_dtoa_r+0x600>)
  404f18:	f002 fac6 	bl	4074a8 <__aeabi_ddiv>
  404f1c:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404f20:	f001 ffe0 	bl	406ee4 <__aeabi_dsub>
  404f24:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  404f28:	9d05      	ldr	r5, [sp, #20]
  404f2a:	4659      	mov	r1, fp
  404f2c:	4650      	mov	r0, sl
  404f2e:	f002 fc41 	bl	4077b4 <__aeabi_d2iz>
  404f32:	4607      	mov	r7, r0
  404f34:	f002 f924 	bl	407180 <__aeabi_i2d>
  404f38:	4602      	mov	r2, r0
  404f3a:	460b      	mov	r3, r1
  404f3c:	4650      	mov	r0, sl
  404f3e:	4659      	mov	r1, fp
  404f40:	f001 ffd0 	bl	406ee4 <__aeabi_dsub>
  404f44:	3730      	adds	r7, #48	; 0x30
  404f46:	f805 7b01 	strb.w	r7, [r5], #1
  404f4a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404f4e:	4682      	mov	sl, r0
  404f50:	468b      	mov	fp, r1
  404f52:	f002 fbf1 	bl	407738 <__aeabi_dcmplt>
  404f56:	2800      	cmp	r0, #0
  404f58:	d160      	bne.n	40501c <_dtoa_r+0x5d4>
  404f5a:	4652      	mov	r2, sl
  404f5c:	465b      	mov	r3, fp
  404f5e:	2000      	movs	r0, #0
  404f60:	4935      	ldr	r1, [pc, #212]	; (405038 <_dtoa_r+0x5f0>)
  404f62:	f001 ffbf 	bl	406ee4 <__aeabi_dsub>
  404f66:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404f6a:	f002 fbe5 	bl	407738 <__aeabi_dcmplt>
  404f6e:	2800      	cmp	r0, #0
  404f70:	f040 80b6 	bne.w	4050e0 <_dtoa_r+0x698>
  404f74:	42a5      	cmp	r5, r4
  404f76:	d080      	beq.n	404e7a <_dtoa_r+0x432>
  404f78:	2200      	movs	r2, #0
  404f7a:	4b30      	ldr	r3, [pc, #192]	; (40503c <_dtoa_r+0x5f4>)
  404f7c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  404f80:	f002 f968 	bl	407254 <__aeabi_dmul>
  404f84:	2200      	movs	r2, #0
  404f86:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  404f8a:	4b2c      	ldr	r3, [pc, #176]	; (40503c <_dtoa_r+0x5f4>)
  404f8c:	4650      	mov	r0, sl
  404f8e:	4659      	mov	r1, fp
  404f90:	f002 f960 	bl	407254 <__aeabi_dmul>
  404f94:	4682      	mov	sl, r0
  404f96:	468b      	mov	fp, r1
  404f98:	e7c7      	b.n	404f2a <_dtoa_r+0x4e2>
  404f9a:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404f9e:	f002 f959 	bl	407254 <__aeabi_dmul>
  404fa2:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
  404fa6:	9f05      	ldr	r7, [sp, #20]
  404fa8:	4625      	mov	r5, r4
  404faa:	4659      	mov	r1, fp
  404fac:	4650      	mov	r0, sl
  404fae:	f002 fc01 	bl	4077b4 <__aeabi_d2iz>
  404fb2:	9013      	str	r0, [sp, #76]	; 0x4c
  404fb4:	f002 f8e4 	bl	407180 <__aeabi_i2d>
  404fb8:	4602      	mov	r2, r0
  404fba:	460b      	mov	r3, r1
  404fbc:	4650      	mov	r0, sl
  404fbe:	4659      	mov	r1, fp
  404fc0:	f001 ff90 	bl	406ee4 <__aeabi_dsub>
  404fc4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  404fc6:	3330      	adds	r3, #48	; 0x30
  404fc8:	f807 3b01 	strb.w	r3, [r7], #1
  404fcc:	42a7      	cmp	r7, r4
  404fce:	4682      	mov	sl, r0
  404fd0:	468b      	mov	fp, r1
  404fd2:	f04f 0200 	mov.w	r2, #0
  404fd6:	d125      	bne.n	405024 <_dtoa_r+0x5dc>
  404fd8:	4b1b      	ldr	r3, [pc, #108]	; (405048 <_dtoa_r+0x600>)
  404fda:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
  404fde:	f001 ff83 	bl	406ee8 <__adddf3>
  404fe2:	4602      	mov	r2, r0
  404fe4:	460b      	mov	r3, r1
  404fe6:	4650      	mov	r0, sl
  404fe8:	4659      	mov	r1, fp
  404fea:	f002 fbc3 	bl	407774 <__aeabi_dcmpgt>
  404fee:	2800      	cmp	r0, #0
  404ff0:	d176      	bne.n	4050e0 <_dtoa_r+0x698>
  404ff2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
  404ff6:	2000      	movs	r0, #0
  404ff8:	4913      	ldr	r1, [pc, #76]	; (405048 <_dtoa_r+0x600>)
  404ffa:	f001 ff73 	bl	406ee4 <__aeabi_dsub>
  404ffe:	4602      	mov	r2, r0
  405000:	460b      	mov	r3, r1
  405002:	4650      	mov	r0, sl
  405004:	4659      	mov	r1, fp
  405006:	f002 fb97 	bl	407738 <__aeabi_dcmplt>
  40500a:	2800      	cmp	r0, #0
  40500c:	f43f af35 	beq.w	404e7a <_dtoa_r+0x432>
  405010:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405014:	2b30      	cmp	r3, #48	; 0x30
  405016:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
  40501a:	d001      	beq.n	405020 <_dtoa_r+0x5d8>
  40501c:	46b1      	mov	r9, r6
  40501e:	e04e      	b.n	4050be <_dtoa_r+0x676>
  405020:	4615      	mov	r5, r2
  405022:	e7f5      	b.n	405010 <_dtoa_r+0x5c8>
  405024:	4b05      	ldr	r3, [pc, #20]	; (40503c <_dtoa_r+0x5f4>)
  405026:	f002 f915 	bl	407254 <__aeabi_dmul>
  40502a:	4682      	mov	sl, r0
  40502c:	468b      	mov	fp, r1
  40502e:	e7bc      	b.n	404faa <_dtoa_r+0x562>
  405030:	00408628 	.word	0x00408628
  405034:	00408600 	.word	0x00408600
  405038:	3ff00000 	.word	0x3ff00000
  40503c:	40240000 	.word	0x40240000
  405040:	401c0000 	.word	0x401c0000
  405044:	40140000 	.word	0x40140000
  405048:	3fe00000 	.word	0x3fe00000
  40504c:	465f      	mov	r7, fp
  40504e:	9d05      	ldr	r5, [sp, #20]
  405050:	f8df b54c 	ldr.w	fp, [pc, #1356]	; 4055a0 <_dtoa_r+0xb58>
  405054:	4656      	mov	r6, sl
  405056:	f04f 0a00 	mov.w	sl, #0
  40505a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  40505e:	4630      	mov	r0, r6
  405060:	4639      	mov	r1, r7
  405062:	f002 fa21 	bl	4074a8 <__aeabi_ddiv>
  405066:	f002 fba5 	bl	4077b4 <__aeabi_d2iz>
  40506a:	4604      	mov	r4, r0
  40506c:	f002 f888 	bl	407180 <__aeabi_i2d>
  405070:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  405074:	f002 f8ee 	bl	407254 <__aeabi_dmul>
  405078:	4602      	mov	r2, r0
  40507a:	460b      	mov	r3, r1
  40507c:	4630      	mov	r0, r6
  40507e:	4639      	mov	r1, r7
  405080:	f104 0630 	add.w	r6, r4, #48	; 0x30
  405084:	f001 ff2e 	bl	406ee4 <__aeabi_dsub>
  405088:	f805 6b01 	strb.w	r6, [r5], #1
  40508c:	9e05      	ldr	r6, [sp, #20]
  40508e:	9f04      	ldr	r7, [sp, #16]
  405090:	1bae      	subs	r6, r5, r6
  405092:	42b7      	cmp	r7, r6
  405094:	4602      	mov	r2, r0
  405096:	460b      	mov	r3, r1
  405098:	d135      	bne.n	405106 <_dtoa_r+0x6be>
  40509a:	f001 ff25 	bl	406ee8 <__adddf3>
  40509e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  4050a2:	4606      	mov	r6, r0
  4050a4:	460f      	mov	r7, r1
  4050a6:	f002 fb65 	bl	407774 <__aeabi_dcmpgt>
  4050aa:	b9c0      	cbnz	r0, 4050de <_dtoa_r+0x696>
  4050ac:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
  4050b0:	4630      	mov	r0, r6
  4050b2:	4639      	mov	r1, r7
  4050b4:	f002 fb36 	bl	407724 <__aeabi_dcmpeq>
  4050b8:	b108      	cbz	r0, 4050be <_dtoa_r+0x676>
  4050ba:	07e3      	lsls	r3, r4, #31
  4050bc:	d40f      	bmi.n	4050de <_dtoa_r+0x696>
  4050be:	9903      	ldr	r1, [sp, #12]
  4050c0:	4640      	mov	r0, r8
  4050c2:	f001 f859 	bl	406178 <_Bfree>
  4050c6:	2300      	movs	r3, #0
  4050c8:	9a22      	ldr	r2, [sp, #136]	; 0x88
  4050ca:	702b      	strb	r3, [r5, #0]
  4050cc:	f109 0301 	add.w	r3, r9, #1
  4050d0:	6013      	str	r3, [r2, #0]
  4050d2:	9b24      	ldr	r3, [sp, #144]	; 0x90
  4050d4:	2b00      	cmp	r3, #0
  4050d6:	f43f acfb 	beq.w	404ad0 <_dtoa_r+0x88>
  4050da:	601d      	str	r5, [r3, #0]
  4050dc:	e4f8      	b.n	404ad0 <_dtoa_r+0x88>
  4050de:	464e      	mov	r6, r9
  4050e0:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  4050e4:	2a39      	cmp	r2, #57	; 0x39
  4050e6:	f105 33ff 	add.w	r3, r5, #4294967295	; 0xffffffff
  4050ea:	d106      	bne.n	4050fa <_dtoa_r+0x6b2>
  4050ec:	9a05      	ldr	r2, [sp, #20]
  4050ee:	429a      	cmp	r2, r3
  4050f0:	d107      	bne.n	405102 <_dtoa_r+0x6ba>
  4050f2:	9905      	ldr	r1, [sp, #20]
  4050f4:	2230      	movs	r2, #48	; 0x30
  4050f6:	3601      	adds	r6, #1
  4050f8:	700a      	strb	r2, [r1, #0]
  4050fa:	781a      	ldrb	r2, [r3, #0]
  4050fc:	3201      	adds	r2, #1
  4050fe:	701a      	strb	r2, [r3, #0]
  405100:	e78c      	b.n	40501c <_dtoa_r+0x5d4>
  405102:	461d      	mov	r5, r3
  405104:	e7ec      	b.n	4050e0 <_dtoa_r+0x698>
  405106:	4652      	mov	r2, sl
  405108:	465b      	mov	r3, fp
  40510a:	f002 f8a3 	bl	407254 <__aeabi_dmul>
  40510e:	2200      	movs	r2, #0
  405110:	2300      	movs	r3, #0
  405112:	4606      	mov	r6, r0
  405114:	460f      	mov	r7, r1
  405116:	f002 fb05 	bl	407724 <__aeabi_dcmpeq>
  40511a:	2800      	cmp	r0, #0
  40511c:	d09d      	beq.n	40505a <_dtoa_r+0x612>
  40511e:	e7ce      	b.n	4050be <_dtoa_r+0x676>
  405120:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  405122:	2a00      	cmp	r2, #0
  405124:	f000 80cc 	beq.w	4052c0 <_dtoa_r+0x878>
  405128:	9a20      	ldr	r2, [sp, #128]	; 0x80
  40512a:	2a01      	cmp	r2, #1
  40512c:	f300 80ae 	bgt.w	40528c <_dtoa_r+0x844>
  405130:	9a12      	ldr	r2, [sp, #72]	; 0x48
  405132:	2a00      	cmp	r2, #0
  405134:	f000 80a6 	beq.w	405284 <_dtoa_r+0x83c>
  405138:	f203 4333 	addw	r3, r3, #1075	; 0x433
  40513c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  40513e:	9d08      	ldr	r5, [sp, #32]
  405140:	9a08      	ldr	r2, [sp, #32]
  405142:	441a      	add	r2, r3
  405144:	9208      	str	r2, [sp, #32]
  405146:	9a09      	ldr	r2, [sp, #36]	; 0x24
  405148:	2101      	movs	r1, #1
  40514a:	441a      	add	r2, r3
  40514c:	4640      	mov	r0, r8
  40514e:	9209      	str	r2, [sp, #36]	; 0x24
  405150:	f001 f8f2 	bl	406338 <__i2b>
  405154:	4606      	mov	r6, r0
  405156:	2d00      	cmp	r5, #0
  405158:	dd0c      	ble.n	405174 <_dtoa_r+0x72c>
  40515a:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40515c:	2b00      	cmp	r3, #0
  40515e:	dd09      	ble.n	405174 <_dtoa_r+0x72c>
  405160:	42ab      	cmp	r3, r5
  405162:	9a08      	ldr	r2, [sp, #32]
  405164:	bfa8      	it	ge
  405166:	462b      	movge	r3, r5
  405168:	1ad2      	subs	r2, r2, r3
  40516a:	9208      	str	r2, [sp, #32]
  40516c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  40516e:	1aed      	subs	r5, r5, r3
  405170:	1ad3      	subs	r3, r2, r3
  405172:	9309      	str	r3, [sp, #36]	; 0x24
  405174:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405176:	b1f3      	cbz	r3, 4051b6 <_dtoa_r+0x76e>
  405178:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40517a:	2b00      	cmp	r3, #0
  40517c:	f000 80a4 	beq.w	4052c8 <_dtoa_r+0x880>
  405180:	2c00      	cmp	r4, #0
  405182:	dd10      	ble.n	4051a6 <_dtoa_r+0x75e>
  405184:	4631      	mov	r1, r6
  405186:	4622      	mov	r2, r4
  405188:	4640      	mov	r0, r8
  40518a:	f001 f96f 	bl	40646c <__pow5mult>
  40518e:	9a03      	ldr	r2, [sp, #12]
  405190:	4601      	mov	r1, r0
  405192:	4606      	mov	r6, r0
  405194:	4640      	mov	r0, r8
  405196:	f001 f8d8 	bl	40634a <__multiply>
  40519a:	9903      	ldr	r1, [sp, #12]
  40519c:	4607      	mov	r7, r0
  40519e:	4640      	mov	r0, r8
  4051a0:	f000 ffea 	bl	406178 <_Bfree>
  4051a4:	9703      	str	r7, [sp, #12]
  4051a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4051a8:	1b1a      	subs	r2, r3, r4
  4051aa:	d004      	beq.n	4051b6 <_dtoa_r+0x76e>
  4051ac:	9903      	ldr	r1, [sp, #12]
  4051ae:	4640      	mov	r0, r8
  4051b0:	f001 f95c 	bl	40646c <__pow5mult>
  4051b4:	9003      	str	r0, [sp, #12]
  4051b6:	2101      	movs	r1, #1
  4051b8:	4640      	mov	r0, r8
  4051ba:	f001 f8bd 	bl	406338 <__i2b>
  4051be:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4051c0:	2b00      	cmp	r3, #0
  4051c2:	4604      	mov	r4, r0
  4051c4:	f340 8082 	ble.w	4052cc <_dtoa_r+0x884>
  4051c8:	461a      	mov	r2, r3
  4051ca:	4601      	mov	r1, r0
  4051cc:	4640      	mov	r0, r8
  4051ce:	f001 f94d 	bl	40646c <__pow5mult>
  4051d2:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4051d4:	2b01      	cmp	r3, #1
  4051d6:	4604      	mov	r4, r0
  4051d8:	dd7b      	ble.n	4052d2 <_dtoa_r+0x88a>
  4051da:	2700      	movs	r7, #0
  4051dc:	6923      	ldr	r3, [r4, #16]
  4051de:	eb04 0383 	add.w	r3, r4, r3, lsl #2
  4051e2:	6918      	ldr	r0, [r3, #16]
  4051e4:	f001 f858 	bl	406298 <__hi0bits>
  4051e8:	f1c0 0020 	rsb	r0, r0, #32
  4051ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4051ee:	4418      	add	r0, r3
  4051f0:	f010 001f 	ands.w	r0, r0, #31
  4051f4:	f000 808b 	beq.w	40530e <_dtoa_r+0x8c6>
  4051f8:	f1c0 0320 	rsb	r3, r0, #32
  4051fc:	2b04      	cmp	r3, #4
  4051fe:	f340 8084 	ble.w	40530a <_dtoa_r+0x8c2>
  405202:	f1c0 001c 	rsb	r0, r0, #28
  405206:	9b08      	ldr	r3, [sp, #32]
  405208:	4403      	add	r3, r0
  40520a:	9308      	str	r3, [sp, #32]
  40520c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  40520e:	4403      	add	r3, r0
  405210:	4405      	add	r5, r0
  405212:	9309      	str	r3, [sp, #36]	; 0x24
  405214:	9b08      	ldr	r3, [sp, #32]
  405216:	2b00      	cmp	r3, #0
  405218:	dd05      	ble.n	405226 <_dtoa_r+0x7de>
  40521a:	461a      	mov	r2, r3
  40521c:	9903      	ldr	r1, [sp, #12]
  40521e:	4640      	mov	r0, r8
  405220:	f001 f972 	bl	406508 <__lshift>
  405224:	9003      	str	r0, [sp, #12]
  405226:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405228:	2b00      	cmp	r3, #0
  40522a:	dd05      	ble.n	405238 <_dtoa_r+0x7f0>
  40522c:	4621      	mov	r1, r4
  40522e:	461a      	mov	r2, r3
  405230:	4640      	mov	r0, r8
  405232:	f001 f969 	bl	406508 <__lshift>
  405236:	4604      	mov	r4, r0
  405238:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40523a:	2b00      	cmp	r3, #0
  40523c:	d069      	beq.n	405312 <_dtoa_r+0x8ca>
  40523e:	4621      	mov	r1, r4
  405240:	9803      	ldr	r0, [sp, #12]
  405242:	f001 f9b4 	bl	4065ae <__mcmp>
  405246:	2800      	cmp	r0, #0
  405248:	da63      	bge.n	405312 <_dtoa_r+0x8ca>
  40524a:	2300      	movs	r3, #0
  40524c:	220a      	movs	r2, #10
  40524e:	9903      	ldr	r1, [sp, #12]
  405250:	4640      	mov	r0, r8
  405252:	f000 ffa8 	bl	4061a6 <__multadd>
  405256:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  405258:	9003      	str	r0, [sp, #12]
  40525a:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
  40525e:	2b00      	cmp	r3, #0
  405260:	f000 8192 	beq.w	405588 <_dtoa_r+0xb40>
  405264:	2300      	movs	r3, #0
  405266:	4631      	mov	r1, r6
  405268:	220a      	movs	r2, #10
  40526a:	4640      	mov	r0, r8
  40526c:	f000 ff9b 	bl	4061a6 <__multadd>
  405270:	9b06      	ldr	r3, [sp, #24]
  405272:	2b00      	cmp	r3, #0
  405274:	4606      	mov	r6, r0
  405276:	f300 8087 	bgt.w	405388 <_dtoa_r+0x940>
  40527a:	9b20      	ldr	r3, [sp, #128]	; 0x80
  40527c:	2b02      	cmp	r3, #2
  40527e:	f340 8083 	ble.w	405388 <_dtoa_r+0x940>
  405282:	e04e      	b.n	405322 <_dtoa_r+0x8da>
  405284:	9b14      	ldr	r3, [sp, #80]	; 0x50
  405286:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  40528a:	e757      	b.n	40513c <_dtoa_r+0x6f4>
  40528c:	9b04      	ldr	r3, [sp, #16]
  40528e:	1e5c      	subs	r4, r3, #1
  405290:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  405292:	42a3      	cmp	r3, r4
  405294:	bfbf      	itttt	lt
  405296:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
  405298:	940a      	strlt	r4, [sp, #40]	; 0x28
  40529a:	1ae2      	sublt	r2, r4, r3
  40529c:	9b10      	ldrlt	r3, [sp, #64]	; 0x40
  40529e:	bfb6      	itet	lt
  4052a0:	189b      	addlt	r3, r3, r2
  4052a2:	1b1c      	subge	r4, r3, r4
  4052a4:	9310      	strlt	r3, [sp, #64]	; 0x40
  4052a6:	9b04      	ldr	r3, [sp, #16]
  4052a8:	bfb8      	it	lt
  4052aa:	2400      	movlt	r4, #0
  4052ac:	2b00      	cmp	r3, #0
  4052ae:	bfb9      	ittee	lt
  4052b0:	9b08      	ldrlt	r3, [sp, #32]
  4052b2:	9a04      	ldrlt	r2, [sp, #16]
  4052b4:	9d08      	ldrge	r5, [sp, #32]
  4052b6:	9b04      	ldrge	r3, [sp, #16]
  4052b8:	bfbc      	itt	lt
  4052ba:	1a9d      	sublt	r5, r3, r2
  4052bc:	2300      	movlt	r3, #0
  4052be:	e73f      	b.n	405140 <_dtoa_r+0x6f8>
  4052c0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  4052c2:	9d08      	ldr	r5, [sp, #32]
  4052c4:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4052c6:	e746      	b.n	405156 <_dtoa_r+0x70e>
  4052c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4052ca:	e76f      	b.n	4051ac <_dtoa_r+0x764>
  4052cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
  4052ce:	2b01      	cmp	r3, #1
  4052d0:	dc17      	bgt.n	405302 <_dtoa_r+0x8ba>
  4052d2:	f1ba 0f00 	cmp.w	sl, #0
  4052d6:	d114      	bne.n	405302 <_dtoa_r+0x8ba>
  4052d8:	f3cb 0313 	ubfx	r3, fp, #0, #20
  4052dc:	b99b      	cbnz	r3, 405306 <_dtoa_r+0x8be>
  4052de:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  4052e2:	0d3f      	lsrs	r7, r7, #20
  4052e4:	053f      	lsls	r7, r7, #20
  4052e6:	b137      	cbz	r7, 4052f6 <_dtoa_r+0x8ae>
  4052e8:	9b08      	ldr	r3, [sp, #32]
  4052ea:	3301      	adds	r3, #1
  4052ec:	9308      	str	r3, [sp, #32]
  4052ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
  4052f0:	3301      	adds	r3, #1
  4052f2:	9309      	str	r3, [sp, #36]	; 0x24
  4052f4:	2701      	movs	r7, #1
  4052f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
  4052f8:	2b00      	cmp	r3, #0
  4052fa:	f47f af6f 	bne.w	4051dc <_dtoa_r+0x794>
  4052fe:	2001      	movs	r0, #1
  405300:	e774      	b.n	4051ec <_dtoa_r+0x7a4>
  405302:	2700      	movs	r7, #0
  405304:	e7f7      	b.n	4052f6 <_dtoa_r+0x8ae>
  405306:	4657      	mov	r7, sl
  405308:	e7f5      	b.n	4052f6 <_dtoa_r+0x8ae>
  40530a:	d083      	beq.n	405214 <_dtoa_r+0x7cc>
  40530c:	4618      	mov	r0, r3
  40530e:	301c      	adds	r0, #28
  405310:	e779      	b.n	405206 <_dtoa_r+0x7be>
  405312:	9b04      	ldr	r3, [sp, #16]
  405314:	2b00      	cmp	r3, #0
  405316:	dc31      	bgt.n	40537c <_dtoa_r+0x934>
  405318:	9b20      	ldr	r3, [sp, #128]	; 0x80
  40531a:	2b02      	cmp	r3, #2
  40531c:	dd2e      	ble.n	40537c <_dtoa_r+0x934>
  40531e:	9b04      	ldr	r3, [sp, #16]
  405320:	9306      	str	r3, [sp, #24]
  405322:	9b06      	ldr	r3, [sp, #24]
  405324:	b963      	cbnz	r3, 405340 <_dtoa_r+0x8f8>
  405326:	4621      	mov	r1, r4
  405328:	2205      	movs	r2, #5
  40532a:	4640      	mov	r0, r8
  40532c:	f000 ff3b 	bl	4061a6 <__multadd>
  405330:	4601      	mov	r1, r0
  405332:	4604      	mov	r4, r0
  405334:	9803      	ldr	r0, [sp, #12]
  405336:	f001 f93a 	bl	4065ae <__mcmp>
  40533a:	2800      	cmp	r0, #0
  40533c:	f73f adc7 	bgt.w	404ece <_dtoa_r+0x486>
  405340:	9b21      	ldr	r3, [sp, #132]	; 0x84
  405342:	9d05      	ldr	r5, [sp, #20]
  405344:	ea6f 0903 	mvn.w	r9, r3
  405348:	2700      	movs	r7, #0
  40534a:	4621      	mov	r1, r4
  40534c:	4640      	mov	r0, r8
  40534e:	f000 ff13 	bl	406178 <_Bfree>
  405352:	2e00      	cmp	r6, #0
  405354:	f43f aeb3 	beq.w	4050be <_dtoa_r+0x676>
  405358:	b12f      	cbz	r7, 405366 <_dtoa_r+0x91e>
  40535a:	42b7      	cmp	r7, r6
  40535c:	d003      	beq.n	405366 <_dtoa_r+0x91e>
  40535e:	4639      	mov	r1, r7
  405360:	4640      	mov	r0, r8
  405362:	f000 ff09 	bl	406178 <_Bfree>
  405366:	4631      	mov	r1, r6
  405368:	4640      	mov	r0, r8
  40536a:	f000 ff05 	bl	406178 <_Bfree>
  40536e:	e6a6      	b.n	4050be <_dtoa_r+0x676>
  405370:	2400      	movs	r4, #0
  405372:	4626      	mov	r6, r4
  405374:	e7e4      	b.n	405340 <_dtoa_r+0x8f8>
  405376:	46b1      	mov	r9, r6
  405378:	4626      	mov	r6, r4
  40537a:	e5a8      	b.n	404ece <_dtoa_r+0x486>
  40537c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  40537e:	2b00      	cmp	r3, #0
  405380:	f000 80bc 	beq.w	4054fc <_dtoa_r+0xab4>
  405384:	9b04      	ldr	r3, [sp, #16]
  405386:	9306      	str	r3, [sp, #24]
  405388:	2d00      	cmp	r5, #0
  40538a:	dd05      	ble.n	405398 <_dtoa_r+0x950>
  40538c:	4631      	mov	r1, r6
  40538e:	462a      	mov	r2, r5
  405390:	4640      	mov	r0, r8
  405392:	f001 f8b9 	bl	406508 <__lshift>
  405396:	4606      	mov	r6, r0
  405398:	2f00      	cmp	r7, #0
  40539a:	d052      	beq.n	405442 <_dtoa_r+0x9fa>
  40539c:	6871      	ldr	r1, [r6, #4]
  40539e:	4640      	mov	r0, r8
  4053a0:	f000 feb6 	bl	406110 <_Balloc>
  4053a4:	6932      	ldr	r2, [r6, #16]
  4053a6:	3202      	adds	r2, #2
  4053a8:	4605      	mov	r5, r0
  4053aa:	0092      	lsls	r2, r2, #2
  4053ac:	f106 010c 	add.w	r1, r6, #12
  4053b0:	300c      	adds	r0, #12
  4053b2:	f7fd fd67 	bl	402e84 <memcpy>
  4053b6:	2201      	movs	r2, #1
  4053b8:	4629      	mov	r1, r5
  4053ba:	4640      	mov	r0, r8
  4053bc:	f001 f8a4 	bl	406508 <__lshift>
  4053c0:	9b05      	ldr	r3, [sp, #20]
  4053c2:	3301      	adds	r3, #1
  4053c4:	9304      	str	r3, [sp, #16]
  4053c6:	e9dd 2305 	ldrd	r2, r3, [sp, #20]
  4053ca:	4413      	add	r3, r2
  4053cc:	930a      	str	r3, [sp, #40]	; 0x28
  4053ce:	f00a 0301 	and.w	r3, sl, #1
  4053d2:	4637      	mov	r7, r6
  4053d4:	9309      	str	r3, [sp, #36]	; 0x24
  4053d6:	4606      	mov	r6, r0
  4053d8:	9b04      	ldr	r3, [sp, #16]
  4053da:	9803      	ldr	r0, [sp, #12]
  4053dc:	4621      	mov	r1, r4
  4053de:	f103 3aff 	add.w	sl, r3, #4294967295	; 0xffffffff
  4053e2:	f7ff faa7 	bl	404934 <quorem>
  4053e6:	4639      	mov	r1, r7
  4053e8:	9006      	str	r0, [sp, #24]
  4053ea:	f100 0b30 	add.w	fp, r0, #48	; 0x30
  4053ee:	9803      	ldr	r0, [sp, #12]
  4053f0:	f001 f8dd 	bl	4065ae <__mcmp>
  4053f4:	4632      	mov	r2, r6
  4053f6:	9008      	str	r0, [sp, #32]
  4053f8:	4621      	mov	r1, r4
  4053fa:	4640      	mov	r0, r8
  4053fc:	f001 f8f1 	bl	4065e2 <__mdiff>
  405400:	68c2      	ldr	r2, [r0, #12]
  405402:	4605      	mov	r5, r0
  405404:	b9fa      	cbnz	r2, 405446 <_dtoa_r+0x9fe>
  405406:	4601      	mov	r1, r0
  405408:	9803      	ldr	r0, [sp, #12]
  40540a:	f001 f8d0 	bl	4065ae <__mcmp>
  40540e:	4602      	mov	r2, r0
  405410:	4629      	mov	r1, r5
  405412:	4640      	mov	r0, r8
  405414:	920b      	str	r2, [sp, #44]	; 0x2c
  405416:	f000 feaf 	bl	406178 <_Bfree>
  40541a:	9b20      	ldr	r3, [sp, #128]	; 0x80
  40541c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  40541e:	9d04      	ldr	r5, [sp, #16]
  405420:	ea43 0102 	orr.w	r1, r3, r2
  405424:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405426:	430b      	orrs	r3, r1
  405428:	d10f      	bne.n	40544a <_dtoa_r+0xa02>
  40542a:	f1bb 0f39 	cmp.w	fp, #57	; 0x39
  40542e:	d028      	beq.n	405482 <_dtoa_r+0xa3a>
  405430:	9b08      	ldr	r3, [sp, #32]
  405432:	2b00      	cmp	r3, #0
  405434:	dd02      	ble.n	40543c <_dtoa_r+0x9f4>
  405436:	9b06      	ldr	r3, [sp, #24]
  405438:	f103 0b31 	add.w	fp, r3, #49	; 0x31
  40543c:	f88a b000 	strb.w	fp, [sl]
  405440:	e783      	b.n	40534a <_dtoa_r+0x902>
  405442:	4630      	mov	r0, r6
  405444:	e7bc      	b.n	4053c0 <_dtoa_r+0x978>
  405446:	2201      	movs	r2, #1
  405448:	e7e2      	b.n	405410 <_dtoa_r+0x9c8>
  40544a:	9b08      	ldr	r3, [sp, #32]
  40544c:	2b00      	cmp	r3, #0
  40544e:	db04      	blt.n	40545a <_dtoa_r+0xa12>
  405450:	9920      	ldr	r1, [sp, #128]	; 0x80
  405452:	430b      	orrs	r3, r1
  405454:	9909      	ldr	r1, [sp, #36]	; 0x24
  405456:	430b      	orrs	r3, r1
  405458:	d11e      	bne.n	405498 <_dtoa_r+0xa50>
  40545a:	2a00      	cmp	r2, #0
  40545c:	ddee      	ble.n	40543c <_dtoa_r+0x9f4>
  40545e:	2201      	movs	r2, #1
  405460:	9903      	ldr	r1, [sp, #12]
  405462:	4640      	mov	r0, r8
  405464:	f001 f850 	bl	406508 <__lshift>
  405468:	4621      	mov	r1, r4
  40546a:	9003      	str	r0, [sp, #12]
  40546c:	f001 f89f 	bl	4065ae <__mcmp>
  405470:	2800      	cmp	r0, #0
  405472:	dc03      	bgt.n	40547c <_dtoa_r+0xa34>
  405474:	d1e2      	bne.n	40543c <_dtoa_r+0x9f4>
  405476:	f01b 0f01 	tst.w	fp, #1
  40547a:	d0df      	beq.n	40543c <_dtoa_r+0x9f4>
  40547c:	f1bb 0f39 	cmp.w	fp, #57	; 0x39
  405480:	d1d9      	bne.n	405436 <_dtoa_r+0x9ee>
  405482:	2339      	movs	r3, #57	; 0x39
  405484:	f88a 3000 	strb.w	r3, [sl]
  405488:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  40548c:	2b39      	cmp	r3, #57	; 0x39
  40548e:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
  405492:	d064      	beq.n	40555e <_dtoa_r+0xb16>
  405494:	3301      	adds	r3, #1
  405496:	e069      	b.n	40556c <_dtoa_r+0xb24>
  405498:	2a00      	cmp	r2, #0
  40549a:	dd07      	ble.n	4054ac <_dtoa_r+0xa64>
  40549c:	f1bb 0f39 	cmp.w	fp, #57	; 0x39
  4054a0:	d0ef      	beq.n	405482 <_dtoa_r+0xa3a>
  4054a2:	f10b 0301 	add.w	r3, fp, #1
  4054a6:	f88a 3000 	strb.w	r3, [sl]
  4054aa:	e74e      	b.n	40534a <_dtoa_r+0x902>
  4054ac:	9b04      	ldr	r3, [sp, #16]
  4054ae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  4054b0:	f803 bc01 	strb.w	fp, [r3, #-1]
  4054b4:	4293      	cmp	r3, r2
  4054b6:	d03a      	beq.n	40552e <_dtoa_r+0xae6>
  4054b8:	2300      	movs	r3, #0
  4054ba:	220a      	movs	r2, #10
  4054bc:	9903      	ldr	r1, [sp, #12]
  4054be:	4640      	mov	r0, r8
  4054c0:	f000 fe71 	bl	4061a6 <__multadd>
  4054c4:	42b7      	cmp	r7, r6
  4054c6:	9003      	str	r0, [sp, #12]
  4054c8:	f04f 0300 	mov.w	r3, #0
  4054cc:	f04f 020a 	mov.w	r2, #10
  4054d0:	4639      	mov	r1, r7
  4054d2:	4640      	mov	r0, r8
  4054d4:	d107      	bne.n	4054e6 <_dtoa_r+0xa9e>
  4054d6:	f000 fe66 	bl	4061a6 <__multadd>
  4054da:	4607      	mov	r7, r0
  4054dc:	4606      	mov	r6, r0
  4054de:	9b04      	ldr	r3, [sp, #16]
  4054e0:	3301      	adds	r3, #1
  4054e2:	9304      	str	r3, [sp, #16]
  4054e4:	e778      	b.n	4053d8 <_dtoa_r+0x990>
  4054e6:	f000 fe5e 	bl	4061a6 <__multadd>
  4054ea:	4631      	mov	r1, r6
  4054ec:	4607      	mov	r7, r0
  4054ee:	2300      	movs	r3, #0
  4054f0:	220a      	movs	r2, #10
  4054f2:	4640      	mov	r0, r8
  4054f4:	f000 fe57 	bl	4061a6 <__multadd>
  4054f8:	4606      	mov	r6, r0
  4054fa:	e7f0      	b.n	4054de <_dtoa_r+0xa96>
  4054fc:	9b04      	ldr	r3, [sp, #16]
  4054fe:	9306      	str	r3, [sp, #24]
  405500:	9d05      	ldr	r5, [sp, #20]
  405502:	9803      	ldr	r0, [sp, #12]
  405504:	4621      	mov	r1, r4
  405506:	f7ff fa15 	bl	404934 <quorem>
  40550a:	f100 0b30 	add.w	fp, r0, #48	; 0x30
  40550e:	9b05      	ldr	r3, [sp, #20]
  405510:	f805 bb01 	strb.w	fp, [r5], #1
  405514:	1aea      	subs	r2, r5, r3
  405516:	9b06      	ldr	r3, [sp, #24]
  405518:	4293      	cmp	r3, r2
  40551a:	dd07      	ble.n	40552c <_dtoa_r+0xae4>
  40551c:	2300      	movs	r3, #0
  40551e:	220a      	movs	r2, #10
  405520:	9903      	ldr	r1, [sp, #12]
  405522:	4640      	mov	r0, r8
  405524:	f000 fe3f 	bl	4061a6 <__multadd>
  405528:	9003      	str	r0, [sp, #12]
  40552a:	e7ea      	b.n	405502 <_dtoa_r+0xaba>
  40552c:	2700      	movs	r7, #0
  40552e:	2201      	movs	r2, #1
  405530:	9903      	ldr	r1, [sp, #12]
  405532:	4640      	mov	r0, r8
  405534:	f000 ffe8 	bl	406508 <__lshift>
  405538:	4621      	mov	r1, r4
  40553a:	9003      	str	r0, [sp, #12]
  40553c:	f001 f837 	bl	4065ae <__mcmp>
  405540:	2800      	cmp	r0, #0
  405542:	dca1      	bgt.n	405488 <_dtoa_r+0xa40>
  405544:	d102      	bne.n	40554c <_dtoa_r+0xb04>
  405546:	f01b 0f01 	tst.w	fp, #1
  40554a:	d19d      	bne.n	405488 <_dtoa_r+0xa40>
  40554c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  405550:	2b30      	cmp	r3, #48	; 0x30
  405552:	f105 32ff 	add.w	r2, r5, #4294967295	; 0xffffffff
  405556:	f47f aef8 	bne.w	40534a <_dtoa_r+0x902>
  40555a:	4615      	mov	r5, r2
  40555c:	e7f6      	b.n	40554c <_dtoa_r+0xb04>
  40555e:	9b05      	ldr	r3, [sp, #20]
  405560:	4293      	cmp	r3, r2
  405562:	d105      	bne.n	405570 <_dtoa_r+0xb28>
  405564:	9a05      	ldr	r2, [sp, #20]
  405566:	f109 0901 	add.w	r9, r9, #1
  40556a:	2331      	movs	r3, #49	; 0x31
  40556c:	7013      	strb	r3, [r2, #0]
  40556e:	e6ec      	b.n	40534a <_dtoa_r+0x902>
  405570:	4615      	mov	r5, r2
  405572:	e789      	b.n	405488 <_dtoa_r+0xa40>
  405574:	4b08      	ldr	r3, [pc, #32]	; (405598 <_dtoa_r+0xb50>)
  405576:	f7ff bac8 	b.w	404b0a <_dtoa_r+0xc2>
  40557a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40557c:	2b00      	cmp	r3, #0
  40557e:	f47f aaa2 	bne.w	404ac6 <_dtoa_r+0x7e>
  405582:	4b06      	ldr	r3, [pc, #24]	; (40559c <_dtoa_r+0xb54>)
  405584:	f7ff bac1 	b.w	404b0a <_dtoa_r+0xc2>
  405588:	9b06      	ldr	r3, [sp, #24]
  40558a:	2b00      	cmp	r3, #0
  40558c:	dcb8      	bgt.n	405500 <_dtoa_r+0xab8>
  40558e:	9b20      	ldr	r3, [sp, #128]	; 0x80
  405590:	2b02      	cmp	r3, #2
  405592:	f73f aec6 	bgt.w	405322 <_dtoa_r+0x8da>
  405596:	e7b3      	b.n	405500 <_dtoa_r+0xab8>
  405598:	00408404 	.word	0x00408404
  40559c:	00408579 	.word	0x00408579
  4055a0:	40240000 	.word	0x40240000

004055a4 <__sflush_r>:
  4055a4:	898a      	ldrh	r2, [r1, #12]
  4055a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4055aa:	4605      	mov	r5, r0
  4055ac:	0710      	lsls	r0, r2, #28
  4055ae:	460c      	mov	r4, r1
  4055b0:	d458      	bmi.n	405664 <__sflush_r+0xc0>
  4055b2:	684b      	ldr	r3, [r1, #4]
  4055b4:	2b00      	cmp	r3, #0
  4055b6:	dc05      	bgt.n	4055c4 <__sflush_r+0x20>
  4055b8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
  4055ba:	2b00      	cmp	r3, #0
  4055bc:	dc02      	bgt.n	4055c4 <__sflush_r+0x20>
  4055be:	2000      	movs	r0, #0
  4055c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4055c4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  4055c6:	2e00      	cmp	r6, #0
  4055c8:	d0f9      	beq.n	4055be <__sflush_r+0x1a>
  4055ca:	2300      	movs	r3, #0
  4055cc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
  4055d0:	682f      	ldr	r7, [r5, #0]
  4055d2:	602b      	str	r3, [r5, #0]
  4055d4:	d032      	beq.n	40563c <__sflush_r+0x98>
  4055d6:	6d60      	ldr	r0, [r4, #84]	; 0x54
  4055d8:	89a3      	ldrh	r3, [r4, #12]
  4055da:	075a      	lsls	r2, r3, #29
  4055dc:	d505      	bpl.n	4055ea <__sflush_r+0x46>
  4055de:	6863      	ldr	r3, [r4, #4]
  4055e0:	1ac0      	subs	r0, r0, r3
  4055e2:	6b63      	ldr	r3, [r4, #52]	; 0x34
  4055e4:	b10b      	cbz	r3, 4055ea <__sflush_r+0x46>
  4055e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
  4055e8:	1ac0      	subs	r0, r0, r3
  4055ea:	2300      	movs	r3, #0
  4055ec:	4602      	mov	r2, r0
  4055ee:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
  4055f0:	6a21      	ldr	r1, [r4, #32]
  4055f2:	4628      	mov	r0, r5
  4055f4:	47b0      	blx	r6
  4055f6:	1c43      	adds	r3, r0, #1
  4055f8:	89a3      	ldrh	r3, [r4, #12]
  4055fa:	d106      	bne.n	40560a <__sflush_r+0x66>
  4055fc:	6829      	ldr	r1, [r5, #0]
  4055fe:	291d      	cmp	r1, #29
  405600:	d849      	bhi.n	405696 <__sflush_r+0xf2>
  405602:	4a2a      	ldr	r2, [pc, #168]	; (4056ac <__sflush_r+0x108>)
  405604:	40ca      	lsrs	r2, r1
  405606:	07d6      	lsls	r6, r2, #31
  405608:	d545      	bpl.n	405696 <__sflush_r+0xf2>
  40560a:	2200      	movs	r2, #0
  40560c:	6062      	str	r2, [r4, #4]
  40560e:	04d9      	lsls	r1, r3, #19
  405610:	6922      	ldr	r2, [r4, #16]
  405612:	6022      	str	r2, [r4, #0]
  405614:	d504      	bpl.n	405620 <__sflush_r+0x7c>
  405616:	1c42      	adds	r2, r0, #1
  405618:	d101      	bne.n	40561e <__sflush_r+0x7a>
  40561a:	682b      	ldr	r3, [r5, #0]
  40561c:	b903      	cbnz	r3, 405620 <__sflush_r+0x7c>
  40561e:	6560      	str	r0, [r4, #84]	; 0x54
  405620:	6b61      	ldr	r1, [r4, #52]	; 0x34
  405622:	602f      	str	r7, [r5, #0]
  405624:	2900      	cmp	r1, #0
  405626:	d0ca      	beq.n	4055be <__sflush_r+0x1a>
  405628:	f104 0344 	add.w	r3, r4, #68	; 0x44
  40562c:	4299      	cmp	r1, r3
  40562e:	d002      	beq.n	405636 <__sflush_r+0x92>
  405630:	4628      	mov	r0, r5
  405632:	f001 f96f 	bl	406914 <_free_r>
  405636:	2000      	movs	r0, #0
  405638:	6360      	str	r0, [r4, #52]	; 0x34
  40563a:	e7c1      	b.n	4055c0 <__sflush_r+0x1c>
  40563c:	6a21      	ldr	r1, [r4, #32]
  40563e:	2301      	movs	r3, #1
  405640:	4628      	mov	r0, r5
  405642:	47b0      	blx	r6
  405644:	1c41      	adds	r1, r0, #1
  405646:	d1c7      	bne.n	4055d8 <__sflush_r+0x34>
  405648:	682b      	ldr	r3, [r5, #0]
  40564a:	2b00      	cmp	r3, #0
  40564c:	d0c4      	beq.n	4055d8 <__sflush_r+0x34>
  40564e:	2b1d      	cmp	r3, #29
  405650:	d001      	beq.n	405656 <__sflush_r+0xb2>
  405652:	2b16      	cmp	r3, #22
  405654:	d101      	bne.n	40565a <__sflush_r+0xb6>
  405656:	602f      	str	r7, [r5, #0]
  405658:	e7b1      	b.n	4055be <__sflush_r+0x1a>
  40565a:	89a3      	ldrh	r3, [r4, #12]
  40565c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  405660:	81a3      	strh	r3, [r4, #12]
  405662:	e7ad      	b.n	4055c0 <__sflush_r+0x1c>
  405664:	690f      	ldr	r7, [r1, #16]
  405666:	2f00      	cmp	r7, #0
  405668:	d0a9      	beq.n	4055be <__sflush_r+0x1a>
  40566a:	0793      	lsls	r3, r2, #30
  40566c:	680e      	ldr	r6, [r1, #0]
  40566e:	bf08      	it	eq
  405670:	694b      	ldreq	r3, [r1, #20]
  405672:	600f      	str	r7, [r1, #0]
  405674:	bf18      	it	ne
  405676:	2300      	movne	r3, #0
  405678:	eba6 0807 	sub.w	r8, r6, r7
  40567c:	608b      	str	r3, [r1, #8]
  40567e:	f1b8 0f00 	cmp.w	r8, #0
  405682:	dd9c      	ble.n	4055be <__sflush_r+0x1a>
  405684:	4643      	mov	r3, r8
  405686:	463a      	mov	r2, r7
  405688:	6a21      	ldr	r1, [r4, #32]
  40568a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
  40568c:	4628      	mov	r0, r5
  40568e:	47b0      	blx	r6
  405690:	2800      	cmp	r0, #0
  405692:	dc06      	bgt.n	4056a2 <__sflush_r+0xfe>
  405694:	89a3      	ldrh	r3, [r4, #12]
  405696:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  40569a:	81a3      	strh	r3, [r4, #12]
  40569c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  4056a0:	e78e      	b.n	4055c0 <__sflush_r+0x1c>
  4056a2:	4407      	add	r7, r0
  4056a4:	eba8 0800 	sub.w	r8, r8, r0
  4056a8:	e7e9      	b.n	40567e <__sflush_r+0xda>
  4056aa:	bf00      	nop
  4056ac:	20400001 	.word	0x20400001

004056b0 <_fflush_r>:
  4056b0:	b538      	push	{r3, r4, r5, lr}
  4056b2:	690b      	ldr	r3, [r1, #16]
  4056b4:	4605      	mov	r5, r0
  4056b6:	460c      	mov	r4, r1
  4056b8:	b913      	cbnz	r3, 4056c0 <_fflush_r+0x10>
  4056ba:	2500      	movs	r5, #0
  4056bc:	4628      	mov	r0, r5
  4056be:	bd38      	pop	{r3, r4, r5, pc}
  4056c0:	b118      	cbz	r0, 4056ca <_fflush_r+0x1a>
  4056c2:	6983      	ldr	r3, [r0, #24]
  4056c4:	b90b      	cbnz	r3, 4056ca <_fflush_r+0x1a>
  4056c6:	f000 f887 	bl	4057d8 <__sinit>
  4056ca:	4b14      	ldr	r3, [pc, #80]	; (40571c <_fflush_r+0x6c>)
  4056cc:	429c      	cmp	r4, r3
  4056ce:	d11b      	bne.n	405708 <_fflush_r+0x58>
  4056d0:	686c      	ldr	r4, [r5, #4]
  4056d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  4056d6:	2b00      	cmp	r3, #0
  4056d8:	d0ef      	beq.n	4056ba <_fflush_r+0xa>
  4056da:	6e62      	ldr	r2, [r4, #100]	; 0x64
  4056dc:	07d0      	lsls	r0, r2, #31
  4056de:	d404      	bmi.n	4056ea <_fflush_r+0x3a>
  4056e0:	0599      	lsls	r1, r3, #22
  4056e2:	d402      	bmi.n	4056ea <_fflush_r+0x3a>
  4056e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
  4056e6:	f000 fc42 	bl	405f6e <__retarget_lock_acquire_recursive>
  4056ea:	4628      	mov	r0, r5
  4056ec:	4621      	mov	r1, r4
  4056ee:	f7ff ff59 	bl	4055a4 <__sflush_r>
  4056f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
  4056f4:	07da      	lsls	r2, r3, #31
  4056f6:	4605      	mov	r5, r0
  4056f8:	d4e0      	bmi.n	4056bc <_fflush_r+0xc>
  4056fa:	89a3      	ldrh	r3, [r4, #12]
  4056fc:	059b      	lsls	r3, r3, #22
  4056fe:	d4dd      	bmi.n	4056bc <_fflush_r+0xc>
  405700:	6da0      	ldr	r0, [r4, #88]	; 0x58
  405702:	f000 fc35 	bl	405f70 <__retarget_lock_release_recursive>
  405706:	e7d9      	b.n	4056bc <_fflush_r+0xc>
  405708:	4b05      	ldr	r3, [pc, #20]	; (405720 <_fflush_r+0x70>)
  40570a:	429c      	cmp	r4, r3
  40570c:	d101      	bne.n	405712 <_fflush_r+0x62>
  40570e:	68ac      	ldr	r4, [r5, #8]
  405710:	e7df      	b.n	4056d2 <_fflush_r+0x22>
  405712:	4b04      	ldr	r3, [pc, #16]	; (405724 <_fflush_r+0x74>)
  405714:	429c      	cmp	r4, r3
  405716:	bf08      	it	eq
  405718:	68ec      	ldreq	r4, [r5, #12]
  40571a:	e7da      	b.n	4056d2 <_fflush_r+0x22>
  40571c:	004085a8 	.word	0x004085a8
  405720:	004085c8 	.word	0x004085c8
  405724:	00408588 	.word	0x00408588

00405728 <std>:
  405728:	2300      	movs	r3, #0
  40572a:	b510      	push	{r4, lr}
  40572c:	4604      	mov	r4, r0
  40572e:	e9c0 3300 	strd	r3, r3, [r0]
  405732:	6083      	str	r3, [r0, #8]
  405734:	8181      	strh	r1, [r0, #12]
  405736:	6643      	str	r3, [r0, #100]	; 0x64
  405738:	81c2      	strh	r2, [r0, #14]
  40573a:	e9c0 3304 	strd	r3, r3, [r0, #16]
  40573e:	6183      	str	r3, [r0, #24]
  405740:	4619      	mov	r1, r3
  405742:	2208      	movs	r2, #8
  405744:	305c      	adds	r0, #92	; 0x5c
  405746:	f7fd fbab 	bl	402ea0 <memset>
  40574a:	4b05      	ldr	r3, [pc, #20]	; (405760 <std+0x38>)
  40574c:	6263      	str	r3, [r4, #36]	; 0x24
  40574e:	4b05      	ldr	r3, [pc, #20]	; (405764 <std+0x3c>)
  405750:	62a3      	str	r3, [r4, #40]	; 0x28
  405752:	4b05      	ldr	r3, [pc, #20]	; (405768 <std+0x40>)
  405754:	62e3      	str	r3, [r4, #44]	; 0x2c
  405756:	4b05      	ldr	r3, [pc, #20]	; (40576c <std+0x44>)
  405758:	6224      	str	r4, [r4, #32]
  40575a:	6323      	str	r3, [r4, #48]	; 0x30
  40575c:	bd10      	pop	{r4, pc}
  40575e:	bf00      	nop
  405760:	00406d31 	.word	0x00406d31
  405764:	00406d53 	.word	0x00406d53
  405768:	00406d8b 	.word	0x00406d8b
  40576c:	00406daf 	.word	0x00406daf

00405770 <_cleanup_r>:
  405770:	4901      	ldr	r1, [pc, #4]	; (405778 <_cleanup_r+0x8>)
  405772:	f000 b8af 	b.w	4058d4 <_fwalk_reent>
  405776:	bf00      	nop
  405778:	004056b1 	.word	0x004056b1

0040577c <__sfmoreglue>:
  40577c:	b570      	push	{r4, r5, r6, lr}
  40577e:	1e4a      	subs	r2, r1, #1
  405780:	2568      	movs	r5, #104	; 0x68
  405782:	4355      	muls	r5, r2
  405784:	460e      	mov	r6, r1
  405786:	f105 0174 	add.w	r1, r5, #116	; 0x74
  40578a:	f001 f911 	bl	4069b0 <_malloc_r>
  40578e:	4604      	mov	r4, r0
  405790:	b140      	cbz	r0, 4057a4 <__sfmoreglue+0x28>
  405792:	2100      	movs	r1, #0
  405794:	e9c0 1600 	strd	r1, r6, [r0]
  405798:	300c      	adds	r0, #12
  40579a:	60a0      	str	r0, [r4, #8]
  40579c:	f105 0268 	add.w	r2, r5, #104	; 0x68
  4057a0:	f7fd fb7e 	bl	402ea0 <memset>
  4057a4:	4620      	mov	r0, r4
  4057a6:	bd70      	pop	{r4, r5, r6, pc}

004057a8 <__sfp_lock_acquire>:
  4057a8:	4801      	ldr	r0, [pc, #4]	; (4057b0 <__sfp_lock_acquire+0x8>)
  4057aa:	f000 bbe0 	b.w	405f6e <__retarget_lock_acquire_recursive>
  4057ae:	bf00      	nop
  4057b0:	200008ac 	.word	0x200008ac

004057b4 <__sfp_lock_release>:
  4057b4:	4801      	ldr	r0, [pc, #4]	; (4057bc <__sfp_lock_release+0x8>)
  4057b6:	f000 bbdb 	b.w	405f70 <__retarget_lock_release_recursive>
  4057ba:	bf00      	nop
  4057bc:	200008ac 	.word	0x200008ac

004057c0 <__sinit_lock_acquire>:
  4057c0:	4801      	ldr	r0, [pc, #4]	; (4057c8 <__sinit_lock_acquire+0x8>)
  4057c2:	f000 bbd4 	b.w	405f6e <__retarget_lock_acquire_recursive>
  4057c6:	bf00      	nop
  4057c8:	200008a7 	.word	0x200008a7

004057cc <__sinit_lock_release>:
  4057cc:	4801      	ldr	r0, [pc, #4]	; (4057d4 <__sinit_lock_release+0x8>)
  4057ce:	f000 bbcf 	b.w	405f70 <__retarget_lock_release_recursive>
  4057d2:	bf00      	nop
  4057d4:	200008a7 	.word	0x200008a7

004057d8 <__sinit>:
  4057d8:	b510      	push	{r4, lr}
  4057da:	4604      	mov	r4, r0
  4057dc:	f7ff fff0 	bl	4057c0 <__sinit_lock_acquire>
  4057e0:	69a3      	ldr	r3, [r4, #24]
  4057e2:	b11b      	cbz	r3, 4057ec <__sinit+0x14>
  4057e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  4057e8:	f7ff bff0 	b.w	4057cc <__sinit_lock_release>
  4057ec:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
  4057f0:	6523      	str	r3, [r4, #80]	; 0x50
  4057f2:	4b13      	ldr	r3, [pc, #76]	; (405840 <__sinit+0x68>)
  4057f4:	4a13      	ldr	r2, [pc, #76]	; (405844 <__sinit+0x6c>)
  4057f6:	681b      	ldr	r3, [r3, #0]
  4057f8:	62a2      	str	r2, [r4, #40]	; 0x28
  4057fa:	42a3      	cmp	r3, r4
  4057fc:	bf04      	itt	eq
  4057fe:	2301      	moveq	r3, #1
  405800:	61a3      	streq	r3, [r4, #24]
  405802:	4620      	mov	r0, r4
  405804:	f000 f820 	bl	405848 <__sfp>
  405808:	6060      	str	r0, [r4, #4]
  40580a:	4620      	mov	r0, r4
  40580c:	f000 f81c 	bl	405848 <__sfp>
  405810:	60a0      	str	r0, [r4, #8]
  405812:	4620      	mov	r0, r4
  405814:	f000 f818 	bl	405848 <__sfp>
  405818:	2200      	movs	r2, #0
  40581a:	60e0      	str	r0, [r4, #12]
  40581c:	2104      	movs	r1, #4
  40581e:	6860      	ldr	r0, [r4, #4]
  405820:	f7ff ff82 	bl	405728 <std>
  405824:	2201      	movs	r2, #1
  405826:	2109      	movs	r1, #9
  405828:	68a0      	ldr	r0, [r4, #8]
  40582a:	f7ff ff7d 	bl	405728 <std>
  40582e:	2202      	movs	r2, #2
  405830:	2112      	movs	r1, #18
  405832:	68e0      	ldr	r0, [r4, #12]
  405834:	f7ff ff78 	bl	405728 <std>
  405838:	2301      	movs	r3, #1
  40583a:	61a3      	str	r3, [r4, #24]
  40583c:	e7d2      	b.n	4057e4 <__sinit+0xc>
  40583e:	bf00      	nop
  405840:	004083f0 	.word	0x004083f0
  405844:	00405771 	.word	0x00405771

00405848 <__sfp>:
  405848:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  40584a:	4607      	mov	r7, r0
  40584c:	f7ff ffac 	bl	4057a8 <__sfp_lock_acquire>
  405850:	4b1e      	ldr	r3, [pc, #120]	; (4058cc <__sfp+0x84>)
  405852:	681e      	ldr	r6, [r3, #0]
  405854:	69b3      	ldr	r3, [r6, #24]
  405856:	b913      	cbnz	r3, 40585e <__sfp+0x16>
  405858:	4630      	mov	r0, r6
  40585a:	f7ff ffbd 	bl	4057d8 <__sinit>
  40585e:	3648      	adds	r6, #72	; 0x48
  405860:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
  405864:	3b01      	subs	r3, #1
  405866:	d503      	bpl.n	405870 <__sfp+0x28>
  405868:	6833      	ldr	r3, [r6, #0]
  40586a:	b30b      	cbz	r3, 4058b0 <__sfp+0x68>
  40586c:	6836      	ldr	r6, [r6, #0]
  40586e:	e7f7      	b.n	405860 <__sfp+0x18>
  405870:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
  405874:	b9d5      	cbnz	r5, 4058ac <__sfp+0x64>
  405876:	4b16      	ldr	r3, [pc, #88]	; (4058d0 <__sfp+0x88>)
  405878:	60e3      	str	r3, [r4, #12]
  40587a:	f104 0058 	add.w	r0, r4, #88	; 0x58
  40587e:	6665      	str	r5, [r4, #100]	; 0x64
  405880:	f000 fb74 	bl	405f6c <__retarget_lock_init_recursive>
  405884:	f7ff ff96 	bl	4057b4 <__sfp_lock_release>
  405888:	6025      	str	r5, [r4, #0]
  40588a:	e9c4 5501 	strd	r5, r5, [r4, #4]
  40588e:	e9c4 5504 	strd	r5, r5, [r4, #16]
  405892:	61a5      	str	r5, [r4, #24]
  405894:	2208      	movs	r2, #8
  405896:	4629      	mov	r1, r5
  405898:	f104 005c 	add.w	r0, r4, #92	; 0x5c
  40589c:	f7fd fb00 	bl	402ea0 <memset>
  4058a0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  4058a4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
  4058a8:	4620      	mov	r0, r4
  4058aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4058ac:	3468      	adds	r4, #104	; 0x68
  4058ae:	e7d9      	b.n	405864 <__sfp+0x1c>
  4058b0:	2104      	movs	r1, #4
  4058b2:	4638      	mov	r0, r7
  4058b4:	f7ff ff62 	bl	40577c <__sfmoreglue>
  4058b8:	4604      	mov	r4, r0
  4058ba:	6030      	str	r0, [r6, #0]
  4058bc:	2800      	cmp	r0, #0
  4058be:	d1d5      	bne.n	40586c <__sfp+0x24>
  4058c0:	f7ff ff78 	bl	4057b4 <__sfp_lock_release>
  4058c4:	230c      	movs	r3, #12
  4058c6:	603b      	str	r3, [r7, #0]
  4058c8:	e7ee      	b.n	4058a8 <__sfp+0x60>
  4058ca:	bf00      	nop
  4058cc:	004083f0 	.word	0x004083f0
  4058d0:	ffff0001 	.word	0xffff0001

004058d4 <_fwalk_reent>:
  4058d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4058d8:	4680      	mov	r8, r0
  4058da:	4689      	mov	r9, r1
  4058dc:	f100 0448 	add.w	r4, r0, #72	; 0x48
  4058e0:	2600      	movs	r6, #0
  4058e2:	b914      	cbnz	r4, 4058ea <_fwalk_reent+0x16>
  4058e4:	4630      	mov	r0, r6
  4058e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  4058ea:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
  4058ee:	3f01      	subs	r7, #1
  4058f0:	d501      	bpl.n	4058f6 <_fwalk_reent+0x22>
  4058f2:	6824      	ldr	r4, [r4, #0]
  4058f4:	e7f5      	b.n	4058e2 <_fwalk_reent+0xe>
  4058f6:	89ab      	ldrh	r3, [r5, #12]
  4058f8:	2b01      	cmp	r3, #1
  4058fa:	d907      	bls.n	40590c <_fwalk_reent+0x38>
  4058fc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
  405900:	3301      	adds	r3, #1
  405902:	d003      	beq.n	40590c <_fwalk_reent+0x38>
  405904:	4629      	mov	r1, r5
  405906:	4640      	mov	r0, r8
  405908:	47c8      	blx	r9
  40590a:	4306      	orrs	r6, r0
  40590c:	3568      	adds	r5, #104	; 0x68
  40590e:	e7ee      	b.n	4058ee <_fwalk_reent+0x1a>

00405910 <rshift>:
  405910:	b5f0      	push	{r4, r5, r6, r7, lr}
  405912:	6906      	ldr	r6, [r0, #16]
  405914:	114b      	asrs	r3, r1, #5
  405916:	429e      	cmp	r6, r3
  405918:	f100 0414 	add.w	r4, r0, #20
  40591c:	dd30      	ble.n	405980 <rshift+0x70>
  40591e:	f011 011f 	ands.w	r1, r1, #31
  405922:	eb04 0686 	add.w	r6, r4, r6, lsl #2
  405926:	eb04 0283 	add.w	r2, r4, r3, lsl #2
  40592a:	d108      	bne.n	40593e <rshift+0x2e>
  40592c:	4621      	mov	r1, r4
  40592e:	42b2      	cmp	r2, r6
  405930:	460b      	mov	r3, r1
  405932:	d211      	bcs.n	405958 <rshift+0x48>
  405934:	f852 3b04 	ldr.w	r3, [r2], #4
  405938:	f841 3b04 	str.w	r3, [r1], #4
  40593c:	e7f7      	b.n	40592e <rshift+0x1e>
  40593e:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
  405942:	f1c1 0c20 	rsb	ip, r1, #32
  405946:	40cd      	lsrs	r5, r1
  405948:	3204      	adds	r2, #4
  40594a:	4623      	mov	r3, r4
  40594c:	4296      	cmp	r6, r2
  40594e:	4617      	mov	r7, r2
  405950:	d80c      	bhi.n	40596c <rshift+0x5c>
  405952:	601d      	str	r5, [r3, #0]
  405954:	b105      	cbz	r5, 405958 <rshift+0x48>
  405956:	3304      	adds	r3, #4
  405958:	1b1a      	subs	r2, r3, r4
  40595a:	42a3      	cmp	r3, r4
  40595c:	ea4f 02a2 	mov.w	r2, r2, asr #2
  405960:	bf08      	it	eq
  405962:	2300      	moveq	r3, #0
  405964:	6102      	str	r2, [r0, #16]
  405966:	bf08      	it	eq
  405968:	6143      	streq	r3, [r0, #20]
  40596a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40596c:	683f      	ldr	r7, [r7, #0]
  40596e:	fa07 f70c 	lsl.w	r7, r7, ip
  405972:	433d      	orrs	r5, r7
  405974:	f843 5b04 	str.w	r5, [r3], #4
  405978:	f852 5b04 	ldr.w	r5, [r2], #4
  40597c:	40cd      	lsrs	r5, r1
  40597e:	e7e5      	b.n	40594c <rshift+0x3c>
  405980:	4623      	mov	r3, r4
  405982:	e7e9      	b.n	405958 <rshift+0x48>

00405984 <__hexdig_fun>:
  405984:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
  405988:	2b09      	cmp	r3, #9
  40598a:	d802      	bhi.n	405992 <__hexdig_fun+0xe>
  40598c:	3820      	subs	r0, #32
  40598e:	b2c0      	uxtb	r0, r0
  405990:	4770      	bx	lr
  405992:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
  405996:	2b05      	cmp	r3, #5
  405998:	d801      	bhi.n	40599e <__hexdig_fun+0x1a>
  40599a:	3847      	subs	r0, #71	; 0x47
  40599c:	e7f7      	b.n	40598e <__hexdig_fun+0xa>
  40599e:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
  4059a2:	2b05      	cmp	r3, #5
  4059a4:	d801      	bhi.n	4059aa <__hexdig_fun+0x26>
  4059a6:	3827      	subs	r0, #39	; 0x27
  4059a8:	e7f1      	b.n	40598e <__hexdig_fun+0xa>
  4059aa:	2000      	movs	r0, #0
  4059ac:	4770      	bx	lr
	...

004059b0 <__gethex>:
  4059b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4059b4:	b08b      	sub	sp, #44	; 0x2c
  4059b6:	468b      	mov	fp, r1
  4059b8:	9306      	str	r3, [sp, #24]
  4059ba:	4bb7      	ldr	r3, [pc, #732]	; (405c98 <__gethex+0x2e8>)
  4059bc:	9002      	str	r0, [sp, #8]
  4059be:	681b      	ldr	r3, [r3, #0]
  4059c0:	9303      	str	r3, [sp, #12]
  4059c2:	4618      	mov	r0, r3
  4059c4:	4690      	mov	r8, r2
  4059c6:	f7fe f819 	bl	4039fc <strlen>
  4059ca:	9b03      	ldr	r3, [sp, #12]
  4059cc:	f8db 2000 	ldr.w	r2, [fp]
  4059d0:	9001      	str	r0, [sp, #4]
  4059d2:	4403      	add	r3, r0
  4059d4:	f813 3c01 	ldrb.w	r3, [r3, #-1]
  4059d8:	9307      	str	r3, [sp, #28]
  4059da:	1c93      	adds	r3, r2, #2
  4059dc:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
  4059e0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
  4059e4:	32fe      	adds	r2, #254	; 0xfe
  4059e6:	eb02 0a03 	add.w	sl, r2, r3
  4059ea:	461f      	mov	r7, r3
  4059ec:	f813 0b01 	ldrb.w	r0, [r3], #1
  4059f0:	2830      	cmp	r0, #48	; 0x30
  4059f2:	d0f8      	beq.n	4059e6 <__gethex+0x36>
  4059f4:	f7ff ffc6 	bl	405984 <__hexdig_fun>
  4059f8:	4604      	mov	r4, r0
  4059fa:	2800      	cmp	r0, #0
  4059fc:	d167      	bne.n	405ace <__gethex+0x11e>
  4059fe:	9a01      	ldr	r2, [sp, #4]
  405a00:	9903      	ldr	r1, [sp, #12]
  405a02:	4638      	mov	r0, r7
  405a04:	f001 f9d7 	bl	406db6 <strncmp>
  405a08:	2800      	cmp	r0, #0
  405a0a:	d163      	bne.n	405ad4 <__gethex+0x124>
  405a0c:	9b01      	ldr	r3, [sp, #4]
  405a0e:	5cf8      	ldrb	r0, [r7, r3]
  405a10:	18fe      	adds	r6, r7, r3
  405a12:	f7ff ffb7 	bl	405984 <__hexdig_fun>
  405a16:	2800      	cmp	r0, #0
  405a18:	d05f      	beq.n	405ada <__gethex+0x12a>
  405a1a:	4633      	mov	r3, r6
  405a1c:	7818      	ldrb	r0, [r3, #0]
  405a1e:	2830      	cmp	r0, #48	; 0x30
  405a20:	461f      	mov	r7, r3
  405a22:	f103 0301 	add.w	r3, r3, #1
  405a26:	d0f9      	beq.n	405a1c <__gethex+0x6c>
  405a28:	f7ff ffac 	bl	405984 <__hexdig_fun>
  405a2c:	fab0 f580 	clz	r5, r0
  405a30:	096d      	lsrs	r5, r5, #5
  405a32:	4634      	mov	r4, r6
  405a34:	f04f 0a01 	mov.w	sl, #1
  405a38:	463a      	mov	r2, r7
  405a3a:	4616      	mov	r6, r2
  405a3c:	3201      	adds	r2, #1
  405a3e:	7830      	ldrb	r0, [r6, #0]
  405a40:	f7ff ffa0 	bl	405984 <__hexdig_fun>
  405a44:	2800      	cmp	r0, #0
  405a46:	d1f8      	bne.n	405a3a <__gethex+0x8a>
  405a48:	9a01      	ldr	r2, [sp, #4]
  405a4a:	9903      	ldr	r1, [sp, #12]
  405a4c:	4630      	mov	r0, r6
  405a4e:	f001 f9b2 	bl	406db6 <strncmp>
  405a52:	b950      	cbnz	r0, 405a6a <__gethex+0xba>
  405a54:	b954      	cbnz	r4, 405a6c <__gethex+0xbc>
  405a56:	9b01      	ldr	r3, [sp, #4]
  405a58:	18f4      	adds	r4, r6, r3
  405a5a:	4622      	mov	r2, r4
  405a5c:	4616      	mov	r6, r2
  405a5e:	3201      	adds	r2, #1
  405a60:	7830      	ldrb	r0, [r6, #0]
  405a62:	f7ff ff8f 	bl	405984 <__hexdig_fun>
  405a66:	2800      	cmp	r0, #0
  405a68:	d1f8      	bne.n	405a5c <__gethex+0xac>
  405a6a:	b10c      	cbz	r4, 405a70 <__gethex+0xc0>
  405a6c:	1ba4      	subs	r4, r4, r6
  405a6e:	00a4      	lsls	r4, r4, #2
  405a70:	7833      	ldrb	r3, [r6, #0]
  405a72:	2b50      	cmp	r3, #80	; 0x50
  405a74:	d001      	beq.n	405a7a <__gethex+0xca>
  405a76:	2b70      	cmp	r3, #112	; 0x70
  405a78:	d13d      	bne.n	405af6 <__gethex+0x146>
  405a7a:	7873      	ldrb	r3, [r6, #1]
  405a7c:	2b2b      	cmp	r3, #43	; 0x2b
  405a7e:	d02e      	beq.n	405ade <__gethex+0x12e>
  405a80:	2b2d      	cmp	r3, #45	; 0x2d
  405a82:	d030      	beq.n	405ae6 <__gethex+0x136>
  405a84:	1c71      	adds	r1, r6, #1
  405a86:	f04f 0900 	mov.w	r9, #0
  405a8a:	7808      	ldrb	r0, [r1, #0]
  405a8c:	f7ff ff7a 	bl	405984 <__hexdig_fun>
  405a90:	1e43      	subs	r3, r0, #1
  405a92:	b2db      	uxtb	r3, r3
  405a94:	2b18      	cmp	r3, #24
  405a96:	d82e      	bhi.n	405af6 <__gethex+0x146>
  405a98:	f1a0 0210 	sub.w	r2, r0, #16
  405a9c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
  405aa0:	f7ff ff70 	bl	405984 <__hexdig_fun>
  405aa4:	1e43      	subs	r3, r0, #1
  405aa6:	b2db      	uxtb	r3, r3
  405aa8:	2b18      	cmp	r3, #24
  405aaa:	d91f      	bls.n	405aec <__gethex+0x13c>
  405aac:	f1b9 0f00 	cmp.w	r9, #0
  405ab0:	d000      	beq.n	405ab4 <__gethex+0x104>
  405ab2:	4252      	negs	r2, r2
  405ab4:	4414      	add	r4, r2
  405ab6:	f8cb 1000 	str.w	r1, [fp]
  405aba:	b1f5      	cbz	r5, 405afa <__gethex+0x14a>
  405abc:	f1ba 0f00 	cmp.w	sl, #0
  405ac0:	bf14      	ite	ne
  405ac2:	2700      	movne	r7, #0
  405ac4:	2706      	moveq	r7, #6
  405ac6:	4638      	mov	r0, r7
  405ac8:	b00b      	add	sp, #44	; 0x2c
  405aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405ace:	2500      	movs	r5, #0
  405ad0:	462c      	mov	r4, r5
  405ad2:	e7b1      	b.n	405a38 <__gethex+0x88>
  405ad4:	463e      	mov	r6, r7
  405ad6:	2501      	movs	r5, #1
  405ad8:	e7ca      	b.n	405a70 <__gethex+0xc0>
  405ada:	4604      	mov	r4, r0
  405adc:	e7fb      	b.n	405ad6 <__gethex+0x126>
  405ade:	f04f 0900 	mov.w	r9, #0
  405ae2:	1cb1      	adds	r1, r6, #2
  405ae4:	e7d1      	b.n	405a8a <__gethex+0xda>
  405ae6:	f04f 0901 	mov.w	r9, #1
  405aea:	e7fa      	b.n	405ae2 <__gethex+0x132>
  405aec:	230a      	movs	r3, #10
  405aee:	fb03 0202 	mla	r2, r3, r2, r0
  405af2:	3a10      	subs	r2, #16
  405af4:	e7d2      	b.n	405a9c <__gethex+0xec>
  405af6:	4631      	mov	r1, r6
  405af8:	e7dd      	b.n	405ab6 <__gethex+0x106>
  405afa:	1bf3      	subs	r3, r6, r7
  405afc:	3b01      	subs	r3, #1
  405afe:	4629      	mov	r1, r5
  405b00:	2b07      	cmp	r3, #7
  405b02:	dc4f      	bgt.n	405ba4 <__gethex+0x1f4>
  405b04:	9802      	ldr	r0, [sp, #8]
  405b06:	f000 fb03 	bl	406110 <_Balloc>
  405b0a:	9b01      	ldr	r3, [sp, #4]
  405b0c:	f100 0914 	add.w	r9, r0, #20
  405b10:	f04f 0b00 	mov.w	fp, #0
  405b14:	f1c3 0301 	rsb	r3, r3, #1
  405b18:	4605      	mov	r5, r0
  405b1a:	f8cd 9010 	str.w	r9, [sp, #16]
  405b1e:	46da      	mov	sl, fp
  405b20:	9308      	str	r3, [sp, #32]
  405b22:	42b7      	cmp	r7, r6
  405b24:	d341      	bcc.n	405baa <__gethex+0x1fa>
  405b26:	9804      	ldr	r0, [sp, #16]
  405b28:	f840 ab04 	str.w	sl, [r0], #4
  405b2c:	eba0 0009 	sub.w	r0, r0, r9
  405b30:	1080      	asrs	r0, r0, #2
  405b32:	6128      	str	r0, [r5, #16]
  405b34:	0147      	lsls	r7, r0, #5
  405b36:	4650      	mov	r0, sl
  405b38:	f000 fbae 	bl	406298 <__hi0bits>
  405b3c:	f8d8 6000 	ldr.w	r6, [r8]
  405b40:	1a3f      	subs	r7, r7, r0
  405b42:	42b7      	cmp	r7, r6
  405b44:	dd63      	ble.n	405c0e <__gethex+0x25e>
  405b46:	1bbf      	subs	r7, r7, r6
  405b48:	4639      	mov	r1, r7
  405b4a:	4628      	mov	r0, r5
  405b4c:	f000 feb2 	bl	4068b4 <__any_on>
  405b50:	4682      	mov	sl, r0
  405b52:	b1a8      	cbz	r0, 405b80 <__gethex+0x1d0>
  405b54:	1e7b      	subs	r3, r7, #1
  405b56:	1159      	asrs	r1, r3, #5
  405b58:	f003 021f 	and.w	r2, r3, #31
  405b5c:	f04f 0a01 	mov.w	sl, #1
  405b60:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
  405b64:	fa0a f202 	lsl.w	r2, sl, r2
  405b68:	420a      	tst	r2, r1
  405b6a:	d009      	beq.n	405b80 <__gethex+0x1d0>
  405b6c:	4553      	cmp	r3, sl
  405b6e:	dd05      	ble.n	405b7c <__gethex+0x1cc>
  405b70:	1eb9      	subs	r1, r7, #2
  405b72:	4628      	mov	r0, r5
  405b74:	f000 fe9e 	bl	4068b4 <__any_on>
  405b78:	2800      	cmp	r0, #0
  405b7a:	d145      	bne.n	405c08 <__gethex+0x258>
  405b7c:	f04f 0a02 	mov.w	sl, #2
  405b80:	4639      	mov	r1, r7
  405b82:	4628      	mov	r0, r5
  405b84:	f7ff fec4 	bl	405910 <rshift>
  405b88:	443c      	add	r4, r7
  405b8a:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405b8e:	42a3      	cmp	r3, r4
  405b90:	da4b      	bge.n	405c2a <__gethex+0x27a>
  405b92:	4629      	mov	r1, r5
  405b94:	9802      	ldr	r0, [sp, #8]
  405b96:	f000 faef 	bl	406178 <_Bfree>
  405b9a:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405b9c:	2300      	movs	r3, #0
  405b9e:	6013      	str	r3, [r2, #0]
  405ba0:	27a3      	movs	r7, #163	; 0xa3
  405ba2:	e790      	b.n	405ac6 <__gethex+0x116>
  405ba4:	3101      	adds	r1, #1
  405ba6:	105b      	asrs	r3, r3, #1
  405ba8:	e7aa      	b.n	405b00 <__gethex+0x150>
  405baa:	1e73      	subs	r3, r6, #1
  405bac:	9305      	str	r3, [sp, #20]
  405bae:	9a07      	ldr	r2, [sp, #28]
  405bb0:	f816 3c01 	ldrb.w	r3, [r6, #-1]
  405bb4:	4293      	cmp	r3, r2
  405bb6:	d017      	beq.n	405be8 <__gethex+0x238>
  405bb8:	f1bb 0f20 	cmp.w	fp, #32
  405bbc:	d106      	bne.n	405bcc <__gethex+0x21c>
  405bbe:	9b04      	ldr	r3, [sp, #16]
  405bc0:	f843 ab04 	str.w	sl, [r3], #4
  405bc4:	f04f 0a00 	mov.w	sl, #0
  405bc8:	9304      	str	r3, [sp, #16]
  405bca:	46d3      	mov	fp, sl
  405bcc:	f816 0c01 	ldrb.w	r0, [r6, #-1]
  405bd0:	f7ff fed8 	bl	405984 <__hexdig_fun>
  405bd4:	f000 000f 	and.w	r0, r0, #15
  405bd8:	fa00 f00b 	lsl.w	r0, r0, fp
  405bdc:	ea4a 0a00 	orr.w	sl, sl, r0
  405be0:	f10b 0b04 	add.w	fp, fp, #4
  405be4:	9b05      	ldr	r3, [sp, #20]
  405be6:	e00d      	b.n	405c04 <__gethex+0x254>
  405be8:	9b05      	ldr	r3, [sp, #20]
  405bea:	9a08      	ldr	r2, [sp, #32]
  405bec:	4413      	add	r3, r2
  405bee:	42bb      	cmp	r3, r7
  405bf0:	d3e2      	bcc.n	405bb8 <__gethex+0x208>
  405bf2:	4618      	mov	r0, r3
  405bf4:	9a01      	ldr	r2, [sp, #4]
  405bf6:	9903      	ldr	r1, [sp, #12]
  405bf8:	9309      	str	r3, [sp, #36]	; 0x24
  405bfa:	f001 f8dc 	bl	406db6 <strncmp>
  405bfe:	9b09      	ldr	r3, [sp, #36]	; 0x24
  405c00:	2800      	cmp	r0, #0
  405c02:	d1d9      	bne.n	405bb8 <__gethex+0x208>
  405c04:	461e      	mov	r6, r3
  405c06:	e78c      	b.n	405b22 <__gethex+0x172>
  405c08:	f04f 0a03 	mov.w	sl, #3
  405c0c:	e7b8      	b.n	405b80 <__gethex+0x1d0>
  405c0e:	da09      	bge.n	405c24 <__gethex+0x274>
  405c10:	1bf7      	subs	r7, r6, r7
  405c12:	4629      	mov	r1, r5
  405c14:	463a      	mov	r2, r7
  405c16:	9802      	ldr	r0, [sp, #8]
  405c18:	f000 fc76 	bl	406508 <__lshift>
  405c1c:	1be4      	subs	r4, r4, r7
  405c1e:	4605      	mov	r5, r0
  405c20:	f100 0914 	add.w	r9, r0, #20
  405c24:	f04f 0a00 	mov.w	sl, #0
  405c28:	e7af      	b.n	405b8a <__gethex+0x1da>
  405c2a:	f8d8 0004 	ldr.w	r0, [r8, #4]
  405c2e:	42a0      	cmp	r0, r4
  405c30:	dd6d      	ble.n	405d0e <__gethex+0x35e>
  405c32:	1b04      	subs	r4, r0, r4
  405c34:	42a6      	cmp	r6, r4
  405c36:	dc31      	bgt.n	405c9c <__gethex+0x2ec>
  405c38:	f8d8 300c 	ldr.w	r3, [r8, #12]
  405c3c:	2b02      	cmp	r3, #2
  405c3e:	d022      	beq.n	405c86 <__gethex+0x2d6>
  405c40:	2b03      	cmp	r3, #3
  405c42:	d024      	beq.n	405c8e <__gethex+0x2de>
  405c44:	2b01      	cmp	r3, #1
  405c46:	d115      	bne.n	405c74 <__gethex+0x2c4>
  405c48:	42a6      	cmp	r6, r4
  405c4a:	d113      	bne.n	405c74 <__gethex+0x2c4>
  405c4c:	2e01      	cmp	r6, #1
  405c4e:	d10b      	bne.n	405c68 <__gethex+0x2b8>
  405c50:	9a06      	ldr	r2, [sp, #24]
  405c52:	f8d8 3004 	ldr.w	r3, [r8, #4]
  405c56:	6013      	str	r3, [r2, #0]
  405c58:	2301      	movs	r3, #1
  405c5a:	612b      	str	r3, [r5, #16]
  405c5c:	f8c9 3000 	str.w	r3, [r9]
  405c60:	9b14      	ldr	r3, [sp, #80]	; 0x50
  405c62:	2762      	movs	r7, #98	; 0x62
  405c64:	601d      	str	r5, [r3, #0]
  405c66:	e72e      	b.n	405ac6 <__gethex+0x116>
  405c68:	1e71      	subs	r1, r6, #1
  405c6a:	4628      	mov	r0, r5
  405c6c:	f000 fe22 	bl	4068b4 <__any_on>
  405c70:	2800      	cmp	r0, #0
  405c72:	d1ed      	bne.n	405c50 <__gethex+0x2a0>
  405c74:	4629      	mov	r1, r5
  405c76:	9802      	ldr	r0, [sp, #8]
  405c78:	f000 fa7e 	bl	406178 <_Bfree>
  405c7c:	9a14      	ldr	r2, [sp, #80]	; 0x50
  405c7e:	2300      	movs	r3, #0
  405c80:	6013      	str	r3, [r2, #0]
  405c82:	2750      	movs	r7, #80	; 0x50
  405c84:	e71f      	b.n	405ac6 <__gethex+0x116>
  405c86:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405c88:	2b00      	cmp	r3, #0
  405c8a:	d1f3      	bne.n	405c74 <__gethex+0x2c4>
  405c8c:	e7e0      	b.n	405c50 <__gethex+0x2a0>
  405c8e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405c90:	2b00      	cmp	r3, #0
  405c92:	d1dd      	bne.n	405c50 <__gethex+0x2a0>
  405c94:	e7ee      	b.n	405c74 <__gethex+0x2c4>
  405c96:	bf00      	nop
  405c98:	004085e8 	.word	0x004085e8
  405c9c:	1e67      	subs	r7, r4, #1
  405c9e:	f1ba 0f00 	cmp.w	sl, #0
  405ca2:	d131      	bne.n	405d08 <__gethex+0x358>
  405ca4:	b127      	cbz	r7, 405cb0 <__gethex+0x300>
  405ca6:	4639      	mov	r1, r7
  405ca8:	4628      	mov	r0, r5
  405caa:	f000 fe03 	bl	4068b4 <__any_on>
  405cae:	4682      	mov	sl, r0
  405cb0:	117a      	asrs	r2, r7, #5
  405cb2:	2301      	movs	r3, #1
  405cb4:	f007 071f 	and.w	r7, r7, #31
  405cb8:	fa03 f707 	lsl.w	r7, r3, r7
  405cbc:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
  405cc0:	4621      	mov	r1, r4
  405cc2:	421f      	tst	r7, r3
  405cc4:	4628      	mov	r0, r5
  405cc6:	bf18      	it	ne
  405cc8:	f04a 0a02 	orrne.w	sl, sl, #2
  405ccc:	1b36      	subs	r6, r6, r4
  405cce:	f7ff fe1f 	bl	405910 <rshift>
  405cd2:	f8d8 4004 	ldr.w	r4, [r8, #4]
  405cd6:	2702      	movs	r7, #2
  405cd8:	f1ba 0f00 	cmp.w	sl, #0
  405cdc:	d048      	beq.n	405d70 <__gethex+0x3c0>
  405cde:	f8d8 300c 	ldr.w	r3, [r8, #12]
  405ce2:	2b02      	cmp	r3, #2
  405ce4:	d015      	beq.n	405d12 <__gethex+0x362>
  405ce6:	2b03      	cmp	r3, #3
  405ce8:	d017      	beq.n	405d1a <__gethex+0x36a>
  405cea:	2b01      	cmp	r3, #1
  405cec:	d109      	bne.n	405d02 <__gethex+0x352>
  405cee:	f01a 0f02 	tst.w	sl, #2
  405cf2:	d006      	beq.n	405d02 <__gethex+0x352>
  405cf4:	f8d9 3000 	ldr.w	r3, [r9]
  405cf8:	ea4a 0a03 	orr.w	sl, sl, r3
  405cfc:	f01a 0f01 	tst.w	sl, #1
  405d00:	d10e      	bne.n	405d20 <__gethex+0x370>
  405d02:	f047 0710 	orr.w	r7, r7, #16
  405d06:	e033      	b.n	405d70 <__gethex+0x3c0>
  405d08:	f04f 0a01 	mov.w	sl, #1
  405d0c:	e7d0      	b.n	405cb0 <__gethex+0x300>
  405d0e:	2701      	movs	r7, #1
  405d10:	e7e2      	b.n	405cd8 <__gethex+0x328>
  405d12:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405d14:	f1c3 0301 	rsb	r3, r3, #1
  405d18:	9315      	str	r3, [sp, #84]	; 0x54
  405d1a:	9b15      	ldr	r3, [sp, #84]	; 0x54
  405d1c:	2b00      	cmp	r3, #0
  405d1e:	d0f0      	beq.n	405d02 <__gethex+0x352>
  405d20:	f8d5 9010 	ldr.w	r9, [r5, #16]
  405d24:	f105 0314 	add.w	r3, r5, #20
  405d28:	ea4f 0a89 	mov.w	sl, r9, lsl #2
  405d2c:	eb03 010a 	add.w	r1, r3, sl
  405d30:	f04f 0c00 	mov.w	ip, #0
  405d34:	4618      	mov	r0, r3
  405d36:	f853 2b04 	ldr.w	r2, [r3], #4
  405d3a:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
  405d3e:	d01c      	beq.n	405d7a <__gethex+0x3ca>
  405d40:	3201      	adds	r2, #1
  405d42:	6002      	str	r2, [r0, #0]
  405d44:	2f02      	cmp	r7, #2
  405d46:	f105 0314 	add.w	r3, r5, #20
  405d4a:	d138      	bne.n	405dbe <__gethex+0x40e>
  405d4c:	f8d8 2000 	ldr.w	r2, [r8]
  405d50:	3a01      	subs	r2, #1
  405d52:	42b2      	cmp	r2, r6
  405d54:	d10a      	bne.n	405d6c <__gethex+0x3bc>
  405d56:	1171      	asrs	r1, r6, #5
  405d58:	2201      	movs	r2, #1
  405d5a:	f006 061f 	and.w	r6, r6, #31
  405d5e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  405d62:	fa02 f606 	lsl.w	r6, r2, r6
  405d66:	421e      	tst	r6, r3
  405d68:	bf18      	it	ne
  405d6a:	4617      	movne	r7, r2
  405d6c:	f047 0720 	orr.w	r7, r7, #32
  405d70:	9b14      	ldr	r3, [sp, #80]	; 0x50
  405d72:	601d      	str	r5, [r3, #0]
  405d74:	9b06      	ldr	r3, [sp, #24]
  405d76:	601c      	str	r4, [r3, #0]
  405d78:	e6a5      	b.n	405ac6 <__gethex+0x116>
  405d7a:	4299      	cmp	r1, r3
  405d7c:	f843 cc04 	str.w	ip, [r3, #-4]
  405d80:	d8d8      	bhi.n	405d34 <__gethex+0x384>
  405d82:	68ab      	ldr	r3, [r5, #8]
  405d84:	4599      	cmp	r9, r3
  405d86:	db12      	blt.n	405dae <__gethex+0x3fe>
  405d88:	6869      	ldr	r1, [r5, #4]
  405d8a:	9802      	ldr	r0, [sp, #8]
  405d8c:	3101      	adds	r1, #1
  405d8e:	f000 f9bf 	bl	406110 <_Balloc>
  405d92:	692a      	ldr	r2, [r5, #16]
  405d94:	3202      	adds	r2, #2
  405d96:	f105 010c 	add.w	r1, r5, #12
  405d9a:	4683      	mov	fp, r0
  405d9c:	0092      	lsls	r2, r2, #2
  405d9e:	300c      	adds	r0, #12
  405da0:	f7fd f870 	bl	402e84 <memcpy>
  405da4:	4629      	mov	r1, r5
  405da6:	9802      	ldr	r0, [sp, #8]
  405da8:	f000 f9e6 	bl	406178 <_Bfree>
  405dac:	465d      	mov	r5, fp
  405dae:	692b      	ldr	r3, [r5, #16]
  405db0:	1c5a      	adds	r2, r3, #1
  405db2:	eb05 0383 	add.w	r3, r5, r3, lsl #2
  405db6:	612a      	str	r2, [r5, #16]
  405db8:	2201      	movs	r2, #1
  405dba:	615a      	str	r2, [r3, #20]
  405dbc:	e7c2      	b.n	405d44 <__gethex+0x394>
  405dbe:	692a      	ldr	r2, [r5, #16]
  405dc0:	454a      	cmp	r2, r9
  405dc2:	dd0b      	ble.n	405ddc <__gethex+0x42c>
  405dc4:	2101      	movs	r1, #1
  405dc6:	4628      	mov	r0, r5
  405dc8:	f7ff fda2 	bl	405910 <rshift>
  405dcc:	f8d8 3008 	ldr.w	r3, [r8, #8]
  405dd0:	3401      	adds	r4, #1
  405dd2:	42a3      	cmp	r3, r4
  405dd4:	f6ff aedd 	blt.w	405b92 <__gethex+0x1e2>
  405dd8:	2701      	movs	r7, #1
  405dda:	e7c7      	b.n	405d6c <__gethex+0x3bc>
  405ddc:	f016 061f 	ands.w	r6, r6, #31
  405de0:	d0fa      	beq.n	405dd8 <__gethex+0x428>
  405de2:	449a      	add	sl, r3
  405de4:	f1c6 0620 	rsb	r6, r6, #32
  405de8:	f85a 0c04 	ldr.w	r0, [sl, #-4]
  405dec:	f000 fa54 	bl	406298 <__hi0bits>
  405df0:	42b0      	cmp	r0, r6
  405df2:	dbe7      	blt.n	405dc4 <__gethex+0x414>
  405df4:	e7f0      	b.n	405dd8 <__gethex+0x428>
  405df6:	bf00      	nop

00405df8 <L_shift>:
  405df8:	f1c2 0208 	rsb	r2, r2, #8
  405dfc:	0092      	lsls	r2, r2, #2
  405dfe:	b570      	push	{r4, r5, r6, lr}
  405e00:	f1c2 0620 	rsb	r6, r2, #32
  405e04:	6843      	ldr	r3, [r0, #4]
  405e06:	6804      	ldr	r4, [r0, #0]
  405e08:	fa03 f506 	lsl.w	r5, r3, r6
  405e0c:	432c      	orrs	r4, r5
  405e0e:	40d3      	lsrs	r3, r2
  405e10:	6004      	str	r4, [r0, #0]
  405e12:	f840 3f04 	str.w	r3, [r0, #4]!
  405e16:	4288      	cmp	r0, r1
  405e18:	d3f4      	bcc.n	405e04 <L_shift+0xc>
  405e1a:	bd70      	pop	{r4, r5, r6, pc}

00405e1c <__match>:
  405e1c:	b530      	push	{r4, r5, lr}
  405e1e:	6803      	ldr	r3, [r0, #0]
  405e20:	3301      	adds	r3, #1
  405e22:	f811 4b01 	ldrb.w	r4, [r1], #1
  405e26:	b914      	cbnz	r4, 405e2e <__match+0x12>
  405e28:	6003      	str	r3, [r0, #0]
  405e2a:	2001      	movs	r0, #1
  405e2c:	bd30      	pop	{r4, r5, pc}
  405e2e:	f813 2b01 	ldrb.w	r2, [r3], #1
  405e32:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
  405e36:	2d19      	cmp	r5, #25
  405e38:	bf98      	it	ls
  405e3a:	3220      	addls	r2, #32
  405e3c:	42a2      	cmp	r2, r4
  405e3e:	d0f0      	beq.n	405e22 <__match+0x6>
  405e40:	2000      	movs	r0, #0
  405e42:	e7f3      	b.n	405e2c <__match+0x10>

00405e44 <__hexnan>:
  405e44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405e48:	680b      	ldr	r3, [r1, #0]
  405e4a:	6801      	ldr	r1, [r0, #0]
  405e4c:	115f      	asrs	r7, r3, #5
  405e4e:	eb02 0787 	add.w	r7, r2, r7, lsl #2
  405e52:	f013 031f 	ands.w	r3, r3, #31
  405e56:	b087      	sub	sp, #28
  405e58:	bf18      	it	ne
  405e5a:	3704      	addne	r7, #4
  405e5c:	2500      	movs	r5, #0
  405e5e:	1f3e      	subs	r6, r7, #4
  405e60:	4682      	mov	sl, r0
  405e62:	4690      	mov	r8, r2
  405e64:	9301      	str	r3, [sp, #4]
  405e66:	f847 5c04 	str.w	r5, [r7, #-4]
  405e6a:	46b1      	mov	r9, r6
  405e6c:	4634      	mov	r4, r6
  405e6e:	9502      	str	r5, [sp, #8]
  405e70:	46ab      	mov	fp, r5
  405e72:	784a      	ldrb	r2, [r1, #1]
  405e74:	1c4b      	adds	r3, r1, #1
  405e76:	9303      	str	r3, [sp, #12]
  405e78:	b342      	cbz	r2, 405ecc <__hexnan+0x88>
  405e7a:	4610      	mov	r0, r2
  405e7c:	9105      	str	r1, [sp, #20]
  405e7e:	9204      	str	r2, [sp, #16]
  405e80:	f7ff fd80 	bl	405984 <__hexdig_fun>
  405e84:	2800      	cmp	r0, #0
  405e86:	d143      	bne.n	405f10 <__hexnan+0xcc>
  405e88:	9a04      	ldr	r2, [sp, #16]
  405e8a:	9905      	ldr	r1, [sp, #20]
  405e8c:	2a20      	cmp	r2, #32
  405e8e:	d818      	bhi.n	405ec2 <__hexnan+0x7e>
  405e90:	9b02      	ldr	r3, [sp, #8]
  405e92:	459b      	cmp	fp, r3
  405e94:	dd13      	ble.n	405ebe <__hexnan+0x7a>
  405e96:	454c      	cmp	r4, r9
  405e98:	d206      	bcs.n	405ea8 <__hexnan+0x64>
  405e9a:	2d07      	cmp	r5, #7
  405e9c:	dc04      	bgt.n	405ea8 <__hexnan+0x64>
  405e9e:	462a      	mov	r2, r5
  405ea0:	4649      	mov	r1, r9
  405ea2:	4620      	mov	r0, r4
  405ea4:	f7ff ffa8 	bl	405df8 <L_shift>
  405ea8:	4544      	cmp	r4, r8
  405eaa:	d944      	bls.n	405f36 <__hexnan+0xf2>
  405eac:	2300      	movs	r3, #0
  405eae:	f1a4 0904 	sub.w	r9, r4, #4
  405eb2:	f844 3c04 	str.w	r3, [r4, #-4]
  405eb6:	f8cd b008 	str.w	fp, [sp, #8]
  405eba:	464c      	mov	r4, r9
  405ebc:	461d      	mov	r5, r3
  405ebe:	9903      	ldr	r1, [sp, #12]
  405ec0:	e7d7      	b.n	405e72 <__hexnan+0x2e>
  405ec2:	2a29      	cmp	r2, #41	; 0x29
  405ec4:	d14a      	bne.n	405f5c <__hexnan+0x118>
  405ec6:	3102      	adds	r1, #2
  405ec8:	f8ca 1000 	str.w	r1, [sl]
  405ecc:	f1bb 0f00 	cmp.w	fp, #0
  405ed0:	d044      	beq.n	405f5c <__hexnan+0x118>
  405ed2:	454c      	cmp	r4, r9
  405ed4:	d206      	bcs.n	405ee4 <__hexnan+0xa0>
  405ed6:	2d07      	cmp	r5, #7
  405ed8:	dc04      	bgt.n	405ee4 <__hexnan+0xa0>
  405eda:	462a      	mov	r2, r5
  405edc:	4649      	mov	r1, r9
  405ede:	4620      	mov	r0, r4
  405ee0:	f7ff ff8a 	bl	405df8 <L_shift>
  405ee4:	4544      	cmp	r4, r8
  405ee6:	d928      	bls.n	405f3a <__hexnan+0xf6>
  405ee8:	4643      	mov	r3, r8
  405eea:	f854 2b04 	ldr.w	r2, [r4], #4
  405eee:	f843 2b04 	str.w	r2, [r3], #4
  405ef2:	42a6      	cmp	r6, r4
  405ef4:	d2f9      	bcs.n	405eea <__hexnan+0xa6>
  405ef6:	2200      	movs	r2, #0
  405ef8:	f843 2b04 	str.w	r2, [r3], #4
  405efc:	429e      	cmp	r6, r3
  405efe:	d2fb      	bcs.n	405ef8 <__hexnan+0xb4>
  405f00:	6833      	ldr	r3, [r6, #0]
  405f02:	b91b      	cbnz	r3, 405f0c <__hexnan+0xc8>
  405f04:	4546      	cmp	r6, r8
  405f06:	d127      	bne.n	405f58 <__hexnan+0x114>
  405f08:	2301      	movs	r3, #1
  405f0a:	6033      	str	r3, [r6, #0]
  405f0c:	2005      	movs	r0, #5
  405f0e:	e026      	b.n	405f5e <__hexnan+0x11a>
  405f10:	3501      	adds	r5, #1
  405f12:	2d08      	cmp	r5, #8
  405f14:	f10b 0b01 	add.w	fp, fp, #1
  405f18:	dd06      	ble.n	405f28 <__hexnan+0xe4>
  405f1a:	4544      	cmp	r4, r8
  405f1c:	d9cf      	bls.n	405ebe <__hexnan+0x7a>
  405f1e:	2300      	movs	r3, #0
  405f20:	f844 3c04 	str.w	r3, [r4, #-4]
  405f24:	2501      	movs	r5, #1
  405f26:	3c04      	subs	r4, #4
  405f28:	6822      	ldr	r2, [r4, #0]
  405f2a:	f000 000f 	and.w	r0, r0, #15
  405f2e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
  405f32:	6020      	str	r0, [r4, #0]
  405f34:	e7c3      	b.n	405ebe <__hexnan+0x7a>
  405f36:	2508      	movs	r5, #8
  405f38:	e7c1      	b.n	405ebe <__hexnan+0x7a>
  405f3a:	9b01      	ldr	r3, [sp, #4]
  405f3c:	2b00      	cmp	r3, #0
  405f3e:	d0df      	beq.n	405f00 <__hexnan+0xbc>
  405f40:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  405f44:	f1c3 0320 	rsb	r3, r3, #32
  405f48:	fa22 f303 	lsr.w	r3, r2, r3
  405f4c:	f857 2c04 	ldr.w	r2, [r7, #-4]
  405f50:	401a      	ands	r2, r3
  405f52:	f847 2c04 	str.w	r2, [r7, #-4]
  405f56:	e7d3      	b.n	405f00 <__hexnan+0xbc>
  405f58:	3e04      	subs	r6, #4
  405f5a:	e7d1      	b.n	405f00 <__hexnan+0xbc>
  405f5c:	2004      	movs	r0, #4
  405f5e:	b007      	add	sp, #28
  405f60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00405f64 <_localeconv_r>:
  405f64:	4800      	ldr	r0, [pc, #0]	; (405f68 <_localeconv_r+0x4>)
  405f66:	4770      	bx	lr
  405f68:	2000016c 	.word	0x2000016c

00405f6c <__retarget_lock_init_recursive>:
  405f6c:	4770      	bx	lr

00405f6e <__retarget_lock_acquire_recursive>:
  405f6e:	4770      	bx	lr

00405f70 <__retarget_lock_release_recursive>:
  405f70:	4770      	bx	lr

00405f72 <__swhatbuf_r>:
  405f72:	b570      	push	{r4, r5, r6, lr}
  405f74:	460e      	mov	r6, r1
  405f76:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  405f7a:	2900      	cmp	r1, #0
  405f7c:	b096      	sub	sp, #88	; 0x58
  405f7e:	4614      	mov	r4, r2
  405f80:	461d      	mov	r5, r3
  405f82:	da07      	bge.n	405f94 <__swhatbuf_r+0x22>
  405f84:	2300      	movs	r3, #0
  405f86:	602b      	str	r3, [r5, #0]
  405f88:	89b3      	ldrh	r3, [r6, #12]
  405f8a:	061a      	lsls	r2, r3, #24
  405f8c:	d410      	bmi.n	405fb0 <__swhatbuf_r+0x3e>
  405f8e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  405f92:	e00e      	b.n	405fb2 <__swhatbuf_r+0x40>
  405f94:	466a      	mov	r2, sp
  405f96:	f000 ff4f 	bl	406e38 <_fstat_r>
  405f9a:	2800      	cmp	r0, #0
  405f9c:	dbf2      	blt.n	405f84 <__swhatbuf_r+0x12>
  405f9e:	9a01      	ldr	r2, [sp, #4]
  405fa0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
  405fa4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
  405fa8:	425a      	negs	r2, r3
  405faa:	415a      	adcs	r2, r3
  405fac:	602a      	str	r2, [r5, #0]
  405fae:	e7ee      	b.n	405f8e <__swhatbuf_r+0x1c>
  405fb0:	2340      	movs	r3, #64	; 0x40
  405fb2:	2000      	movs	r0, #0
  405fb4:	6023      	str	r3, [r4, #0]
  405fb6:	b016      	add	sp, #88	; 0x58
  405fb8:	bd70      	pop	{r4, r5, r6, pc}
	...

00405fbc <__smakebuf_r>:
  405fbc:	898b      	ldrh	r3, [r1, #12]
  405fbe:	b573      	push	{r0, r1, r4, r5, r6, lr}
  405fc0:	079d      	lsls	r5, r3, #30
  405fc2:	4606      	mov	r6, r0
  405fc4:	460c      	mov	r4, r1
  405fc6:	d507      	bpl.n	405fd8 <__smakebuf_r+0x1c>
  405fc8:	f104 0347 	add.w	r3, r4, #71	; 0x47
  405fcc:	6023      	str	r3, [r4, #0]
  405fce:	6123      	str	r3, [r4, #16]
  405fd0:	2301      	movs	r3, #1
  405fd2:	6163      	str	r3, [r4, #20]
  405fd4:	b002      	add	sp, #8
  405fd6:	bd70      	pop	{r4, r5, r6, pc}
  405fd8:	ab01      	add	r3, sp, #4
  405fda:	466a      	mov	r2, sp
  405fdc:	f7ff ffc9 	bl	405f72 <__swhatbuf_r>
  405fe0:	9900      	ldr	r1, [sp, #0]
  405fe2:	4605      	mov	r5, r0
  405fe4:	4630      	mov	r0, r6
  405fe6:	f000 fce3 	bl	4069b0 <_malloc_r>
  405fea:	b948      	cbnz	r0, 406000 <__smakebuf_r+0x44>
  405fec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
  405ff0:	059a      	lsls	r2, r3, #22
  405ff2:	d4ef      	bmi.n	405fd4 <__smakebuf_r+0x18>
  405ff4:	f023 0303 	bic.w	r3, r3, #3
  405ff8:	f043 0302 	orr.w	r3, r3, #2
  405ffc:	81a3      	strh	r3, [r4, #12]
  405ffe:	e7e3      	b.n	405fc8 <__smakebuf_r+0xc>
  406000:	4b0d      	ldr	r3, [pc, #52]	; (406038 <__smakebuf_r+0x7c>)
  406002:	62b3      	str	r3, [r6, #40]	; 0x28
  406004:	89a3      	ldrh	r3, [r4, #12]
  406006:	6020      	str	r0, [r4, #0]
  406008:	f043 0380 	orr.w	r3, r3, #128	; 0x80
  40600c:	81a3      	strh	r3, [r4, #12]
  40600e:	9b00      	ldr	r3, [sp, #0]
  406010:	6163      	str	r3, [r4, #20]
  406012:	9b01      	ldr	r3, [sp, #4]
  406014:	6120      	str	r0, [r4, #16]
  406016:	b15b      	cbz	r3, 406030 <__smakebuf_r+0x74>
  406018:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  40601c:	4630      	mov	r0, r6
  40601e:	f000 ff1d 	bl	406e5c <_isatty_r>
  406022:	b128      	cbz	r0, 406030 <__smakebuf_r+0x74>
  406024:	89a3      	ldrh	r3, [r4, #12]
  406026:	f023 0303 	bic.w	r3, r3, #3
  40602a:	f043 0301 	orr.w	r3, r3, #1
  40602e:	81a3      	strh	r3, [r4, #12]
  406030:	89a3      	ldrh	r3, [r4, #12]
  406032:	431d      	orrs	r5, r3
  406034:	81a5      	strh	r5, [r4, #12]
  406036:	e7cd      	b.n	405fd4 <__smakebuf_r+0x18>
  406038:	00405771 	.word	0x00405771

0040603c <malloc>:
  40603c:	4b02      	ldr	r3, [pc, #8]	; (406048 <malloc+0xc>)
  40603e:	4601      	mov	r1, r0
  406040:	6818      	ldr	r0, [r3, #0]
  406042:	f000 bcb5 	b.w	4069b0 <_malloc_r>
  406046:	bf00      	nop
  406048:	20000014 	.word	0x20000014

0040604c <__ascii_mbtowc>:
  40604c:	b082      	sub	sp, #8
  40604e:	b901      	cbnz	r1, 406052 <__ascii_mbtowc+0x6>
  406050:	a901      	add	r1, sp, #4
  406052:	b142      	cbz	r2, 406066 <__ascii_mbtowc+0x1a>
  406054:	b14b      	cbz	r3, 40606a <__ascii_mbtowc+0x1e>
  406056:	7813      	ldrb	r3, [r2, #0]
  406058:	600b      	str	r3, [r1, #0]
  40605a:	7812      	ldrb	r2, [r2, #0]
  40605c:	1c10      	adds	r0, r2, #0
  40605e:	bf18      	it	ne
  406060:	2001      	movne	r0, #1
  406062:	b002      	add	sp, #8
  406064:	4770      	bx	lr
  406066:	4610      	mov	r0, r2
  406068:	e7fb      	b.n	406062 <__ascii_mbtowc+0x16>
  40606a:	f06f 0001 	mvn.w	r0, #1
  40606e:	e7f8      	b.n	406062 <__ascii_mbtowc+0x16>

00406070 <memchr>:
  406070:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  406074:	2a10      	cmp	r2, #16
  406076:	db2b      	blt.n	4060d0 <memchr+0x60>
  406078:	f010 0f07 	tst.w	r0, #7
  40607c:	d008      	beq.n	406090 <memchr+0x20>
  40607e:	f810 3b01 	ldrb.w	r3, [r0], #1
  406082:	3a01      	subs	r2, #1
  406084:	428b      	cmp	r3, r1
  406086:	d02d      	beq.n	4060e4 <memchr+0x74>
  406088:	f010 0f07 	tst.w	r0, #7
  40608c:	b342      	cbz	r2, 4060e0 <memchr+0x70>
  40608e:	d1f6      	bne.n	40607e <memchr+0xe>
  406090:	b4f0      	push	{r4, r5, r6, r7}
  406092:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  406096:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  40609a:	f022 0407 	bic.w	r4, r2, #7
  40609e:	f07f 0700 	mvns.w	r7, #0
  4060a2:	2300      	movs	r3, #0
  4060a4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4060a8:	3c08      	subs	r4, #8
  4060aa:	ea85 0501 	eor.w	r5, r5, r1
  4060ae:	ea86 0601 	eor.w	r6, r6, r1
  4060b2:	fa85 f547 	uadd8	r5, r5, r7
  4060b6:	faa3 f587 	sel	r5, r3, r7
  4060ba:	fa86 f647 	uadd8	r6, r6, r7
  4060be:	faa5 f687 	sel	r6, r5, r7
  4060c2:	b98e      	cbnz	r6, 4060e8 <memchr+0x78>
  4060c4:	d1ee      	bne.n	4060a4 <memchr+0x34>
  4060c6:	bcf0      	pop	{r4, r5, r6, r7}
  4060c8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4060cc:	f002 0207 	and.w	r2, r2, #7
  4060d0:	b132      	cbz	r2, 4060e0 <memchr+0x70>
  4060d2:	f810 3b01 	ldrb.w	r3, [r0], #1
  4060d6:	3a01      	subs	r2, #1
  4060d8:	ea83 0301 	eor.w	r3, r3, r1
  4060dc:	b113      	cbz	r3, 4060e4 <memchr+0x74>
  4060de:	d1f8      	bne.n	4060d2 <memchr+0x62>
  4060e0:	2000      	movs	r0, #0
  4060e2:	4770      	bx	lr
  4060e4:	3801      	subs	r0, #1
  4060e6:	4770      	bx	lr
  4060e8:	2d00      	cmp	r5, #0
  4060ea:	bf06      	itte	eq
  4060ec:	4635      	moveq	r5, r6
  4060ee:	3803      	subeq	r0, #3
  4060f0:	3807      	subne	r0, #7
  4060f2:	f015 0f01 	tst.w	r5, #1
  4060f6:	d107      	bne.n	406108 <memchr+0x98>
  4060f8:	3001      	adds	r0, #1
  4060fa:	f415 7f80 	tst.w	r5, #256	; 0x100
  4060fe:	bf02      	ittt	eq
  406100:	3001      	addeq	r0, #1
  406102:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  406106:	3001      	addeq	r0, #1
  406108:	bcf0      	pop	{r4, r5, r6, r7}
  40610a:	3801      	subs	r0, #1
  40610c:	4770      	bx	lr
  40610e:	bf00      	nop

00406110 <_Balloc>:
  406110:	b570      	push	{r4, r5, r6, lr}
  406112:	6a45      	ldr	r5, [r0, #36]	; 0x24
  406114:	4604      	mov	r4, r0
  406116:	460e      	mov	r6, r1
  406118:	b93d      	cbnz	r5, 40612a <_Balloc+0x1a>
  40611a:	2010      	movs	r0, #16
  40611c:	f7ff ff8e 	bl	40603c <malloc>
  406120:	e9c0 5501 	strd	r5, r5, [r0, #4]
  406124:	6260      	str	r0, [r4, #36]	; 0x24
  406126:	6005      	str	r5, [r0, #0]
  406128:	60c5      	str	r5, [r0, #12]
  40612a:	6a65      	ldr	r5, [r4, #36]	; 0x24
  40612c:	68eb      	ldr	r3, [r5, #12]
  40612e:	b183      	cbz	r3, 406152 <_Balloc+0x42>
  406130:	6a63      	ldr	r3, [r4, #36]	; 0x24
  406132:	68db      	ldr	r3, [r3, #12]
  406134:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
  406138:	b9b8      	cbnz	r0, 40616a <_Balloc+0x5a>
  40613a:	2101      	movs	r1, #1
  40613c:	fa01 f506 	lsl.w	r5, r1, r6
  406140:	1d6a      	adds	r2, r5, #5
  406142:	0092      	lsls	r2, r2, #2
  406144:	4620      	mov	r0, r4
  406146:	f000 fbd6 	bl	4068f6 <_calloc_r>
  40614a:	b160      	cbz	r0, 406166 <_Balloc+0x56>
  40614c:	e9c0 6501 	strd	r6, r5, [r0, #4]
  406150:	e00e      	b.n	406170 <_Balloc+0x60>
  406152:	2221      	movs	r2, #33	; 0x21
  406154:	2104      	movs	r1, #4
  406156:	4620      	mov	r0, r4
  406158:	f000 fbcd 	bl	4068f6 <_calloc_r>
  40615c:	6a63      	ldr	r3, [r4, #36]	; 0x24
  40615e:	60e8      	str	r0, [r5, #12]
  406160:	68db      	ldr	r3, [r3, #12]
  406162:	2b00      	cmp	r3, #0
  406164:	d1e4      	bne.n	406130 <_Balloc+0x20>
  406166:	2000      	movs	r0, #0
  406168:	bd70      	pop	{r4, r5, r6, pc}
  40616a:	6802      	ldr	r2, [r0, #0]
  40616c:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
  406170:	2300      	movs	r3, #0
  406172:	e9c0 3303 	strd	r3, r3, [r0, #12]
  406176:	e7f7      	b.n	406168 <_Balloc+0x58>

00406178 <_Bfree>:
  406178:	b570      	push	{r4, r5, r6, lr}
  40617a:	6a44      	ldr	r4, [r0, #36]	; 0x24
  40617c:	4606      	mov	r6, r0
  40617e:	460d      	mov	r5, r1
  406180:	b93c      	cbnz	r4, 406192 <_Bfree+0x1a>
  406182:	2010      	movs	r0, #16
  406184:	f7ff ff5a 	bl	40603c <malloc>
  406188:	e9c0 4401 	strd	r4, r4, [r0, #4]
  40618c:	6270      	str	r0, [r6, #36]	; 0x24
  40618e:	6004      	str	r4, [r0, #0]
  406190:	60c4      	str	r4, [r0, #12]
  406192:	b13d      	cbz	r5, 4061a4 <_Bfree+0x2c>
  406194:	6a73      	ldr	r3, [r6, #36]	; 0x24
  406196:	686a      	ldr	r2, [r5, #4]
  406198:	68db      	ldr	r3, [r3, #12]
  40619a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  40619e:	6029      	str	r1, [r5, #0]
  4061a0:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  4061a4:	bd70      	pop	{r4, r5, r6, pc}

004061a6 <__multadd>:
  4061a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4061aa:	690d      	ldr	r5, [r1, #16]
  4061ac:	461f      	mov	r7, r3
  4061ae:	4606      	mov	r6, r0
  4061b0:	460c      	mov	r4, r1
  4061b2:	f101 0c14 	add.w	ip, r1, #20
  4061b6:	2300      	movs	r3, #0
  4061b8:	f8dc 0000 	ldr.w	r0, [ip]
  4061bc:	b281      	uxth	r1, r0
  4061be:	fb02 7101 	mla	r1, r2, r1, r7
  4061c2:	0c0f      	lsrs	r7, r1, #16
  4061c4:	0c00      	lsrs	r0, r0, #16
  4061c6:	fb02 7000 	mla	r0, r2, r0, r7
  4061ca:	b289      	uxth	r1, r1
  4061cc:	3301      	adds	r3, #1
  4061ce:	eb01 4100 	add.w	r1, r1, r0, lsl #16
  4061d2:	429d      	cmp	r5, r3
  4061d4:	ea4f 4710 	mov.w	r7, r0, lsr #16
  4061d8:	f84c 1b04 	str.w	r1, [ip], #4
  4061dc:	dcec      	bgt.n	4061b8 <__multadd+0x12>
  4061de:	b1d7      	cbz	r7, 406216 <__multadd+0x70>
  4061e0:	68a3      	ldr	r3, [r4, #8]
  4061e2:	42ab      	cmp	r3, r5
  4061e4:	dc12      	bgt.n	40620c <__multadd+0x66>
  4061e6:	6861      	ldr	r1, [r4, #4]
  4061e8:	4630      	mov	r0, r6
  4061ea:	3101      	adds	r1, #1
  4061ec:	f7ff ff90 	bl	406110 <_Balloc>
  4061f0:	6922      	ldr	r2, [r4, #16]
  4061f2:	3202      	adds	r2, #2
  4061f4:	f104 010c 	add.w	r1, r4, #12
  4061f8:	4680      	mov	r8, r0
  4061fa:	0092      	lsls	r2, r2, #2
  4061fc:	300c      	adds	r0, #12
  4061fe:	f7fc fe41 	bl	402e84 <memcpy>
  406202:	4621      	mov	r1, r4
  406204:	4630      	mov	r0, r6
  406206:	f7ff ffb7 	bl	406178 <_Bfree>
  40620a:	4644      	mov	r4, r8
  40620c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
  406210:	3501      	adds	r5, #1
  406212:	615f      	str	r7, [r3, #20]
  406214:	6125      	str	r5, [r4, #16]
  406216:	4620      	mov	r0, r4
  406218:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0040621c <__s2b>:
  40621c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406220:	460c      	mov	r4, r1
  406222:	4615      	mov	r5, r2
  406224:	461f      	mov	r7, r3
  406226:	2209      	movs	r2, #9
  406228:	3308      	adds	r3, #8
  40622a:	4606      	mov	r6, r0
  40622c:	fb93 f3f2 	sdiv	r3, r3, r2
  406230:	2100      	movs	r1, #0
  406232:	2201      	movs	r2, #1
  406234:	429a      	cmp	r2, r3
  406236:	db20      	blt.n	40627a <__s2b+0x5e>
  406238:	4630      	mov	r0, r6
  40623a:	f7ff ff69 	bl	406110 <_Balloc>
  40623e:	9b08      	ldr	r3, [sp, #32]
  406240:	6143      	str	r3, [r0, #20]
  406242:	2d09      	cmp	r5, #9
  406244:	f04f 0301 	mov.w	r3, #1
  406248:	6103      	str	r3, [r0, #16]
  40624a:	dd19      	ble.n	406280 <__s2b+0x64>
  40624c:	f104 0909 	add.w	r9, r4, #9
  406250:	46c8      	mov	r8, r9
  406252:	442c      	add	r4, r5
  406254:	f818 3b01 	ldrb.w	r3, [r8], #1
  406258:	4601      	mov	r1, r0
  40625a:	3b30      	subs	r3, #48	; 0x30
  40625c:	220a      	movs	r2, #10
  40625e:	4630      	mov	r0, r6
  406260:	f7ff ffa1 	bl	4061a6 <__multadd>
  406264:	45a0      	cmp	r8, r4
  406266:	d1f5      	bne.n	406254 <__s2b+0x38>
  406268:	f1a5 0408 	sub.w	r4, r5, #8
  40626c:	444c      	add	r4, r9
  40626e:	1b2d      	subs	r5, r5, r4
  406270:	1963      	adds	r3, r4, r5
  406272:	42bb      	cmp	r3, r7
  406274:	db07      	blt.n	406286 <__s2b+0x6a>
  406276:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40627a:	0052      	lsls	r2, r2, #1
  40627c:	3101      	adds	r1, #1
  40627e:	e7d9      	b.n	406234 <__s2b+0x18>
  406280:	340a      	adds	r4, #10
  406282:	2509      	movs	r5, #9
  406284:	e7f3      	b.n	40626e <__s2b+0x52>
  406286:	f814 3b01 	ldrb.w	r3, [r4], #1
  40628a:	4601      	mov	r1, r0
  40628c:	3b30      	subs	r3, #48	; 0x30
  40628e:	220a      	movs	r2, #10
  406290:	4630      	mov	r0, r6
  406292:	f7ff ff88 	bl	4061a6 <__multadd>
  406296:	e7eb      	b.n	406270 <__s2b+0x54>

00406298 <__hi0bits>:
  406298:	0c02      	lsrs	r2, r0, #16
  40629a:	0412      	lsls	r2, r2, #16
  40629c:	4603      	mov	r3, r0
  40629e:	b9ca      	cbnz	r2, 4062d4 <__hi0bits+0x3c>
  4062a0:	0403      	lsls	r3, r0, #16
  4062a2:	2010      	movs	r0, #16
  4062a4:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  4062a8:	bf04      	itt	eq
  4062aa:	021b      	lsleq	r3, r3, #8
  4062ac:	3008      	addeq	r0, #8
  4062ae:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  4062b2:	bf04      	itt	eq
  4062b4:	011b      	lsleq	r3, r3, #4
  4062b6:	3004      	addeq	r0, #4
  4062b8:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4062bc:	bf04      	itt	eq
  4062be:	009b      	lsleq	r3, r3, #2
  4062c0:	3002      	addeq	r0, #2
  4062c2:	2b00      	cmp	r3, #0
  4062c4:	db05      	blt.n	4062d2 <__hi0bits+0x3a>
  4062c6:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
  4062ca:	f100 0001 	add.w	r0, r0, #1
  4062ce:	bf08      	it	eq
  4062d0:	2020      	moveq	r0, #32
  4062d2:	4770      	bx	lr
  4062d4:	2000      	movs	r0, #0
  4062d6:	e7e5      	b.n	4062a4 <__hi0bits+0xc>

004062d8 <__lo0bits>:
  4062d8:	6803      	ldr	r3, [r0, #0]
  4062da:	f013 0207 	ands.w	r2, r3, #7
  4062de:	4601      	mov	r1, r0
  4062e0:	d00b      	beq.n	4062fa <__lo0bits+0x22>
  4062e2:	07da      	lsls	r2, r3, #31
  4062e4:	d424      	bmi.n	406330 <__lo0bits+0x58>
  4062e6:	0798      	lsls	r0, r3, #30
  4062e8:	bf49      	itett	mi
  4062ea:	085b      	lsrmi	r3, r3, #1
  4062ec:	089b      	lsrpl	r3, r3, #2
  4062ee:	2001      	movmi	r0, #1
  4062f0:	600b      	strmi	r3, [r1, #0]
  4062f2:	bf5c      	itt	pl
  4062f4:	600b      	strpl	r3, [r1, #0]
  4062f6:	2002      	movpl	r0, #2
  4062f8:	4770      	bx	lr
  4062fa:	b298      	uxth	r0, r3
  4062fc:	b9b0      	cbnz	r0, 40632c <__lo0bits+0x54>
  4062fe:	0c1b      	lsrs	r3, r3, #16
  406300:	2010      	movs	r0, #16
  406302:	f013 0fff 	tst.w	r3, #255	; 0xff
  406306:	bf04      	itt	eq
  406308:	0a1b      	lsreq	r3, r3, #8
  40630a:	3008      	addeq	r0, #8
  40630c:	071a      	lsls	r2, r3, #28
  40630e:	bf04      	itt	eq
  406310:	091b      	lsreq	r3, r3, #4
  406312:	3004      	addeq	r0, #4
  406314:	079a      	lsls	r2, r3, #30
  406316:	bf04      	itt	eq
  406318:	089b      	lsreq	r3, r3, #2
  40631a:	3002      	addeq	r0, #2
  40631c:	07da      	lsls	r2, r3, #31
  40631e:	d403      	bmi.n	406328 <__lo0bits+0x50>
  406320:	085b      	lsrs	r3, r3, #1
  406322:	f100 0001 	add.w	r0, r0, #1
  406326:	d005      	beq.n	406334 <__lo0bits+0x5c>
  406328:	600b      	str	r3, [r1, #0]
  40632a:	4770      	bx	lr
  40632c:	4610      	mov	r0, r2
  40632e:	e7e8      	b.n	406302 <__lo0bits+0x2a>
  406330:	2000      	movs	r0, #0
  406332:	4770      	bx	lr
  406334:	2020      	movs	r0, #32
  406336:	4770      	bx	lr

00406338 <__i2b>:
  406338:	b510      	push	{r4, lr}
  40633a:	460c      	mov	r4, r1
  40633c:	2101      	movs	r1, #1
  40633e:	f7ff fee7 	bl	406110 <_Balloc>
  406342:	2201      	movs	r2, #1
  406344:	6144      	str	r4, [r0, #20]
  406346:	6102      	str	r2, [r0, #16]
  406348:	bd10      	pop	{r4, pc}

0040634a <__multiply>:
  40634a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  40634e:	4690      	mov	r8, r2
  406350:	690a      	ldr	r2, [r1, #16]
  406352:	f8d8 3010 	ldr.w	r3, [r8, #16]
  406356:	429a      	cmp	r2, r3
  406358:	bfb8      	it	lt
  40635a:	460b      	movlt	r3, r1
  40635c:	460c      	mov	r4, r1
  40635e:	bfbc      	itt	lt
  406360:	4644      	movlt	r4, r8
  406362:	4698      	movlt	r8, r3
  406364:	6927      	ldr	r7, [r4, #16]
  406366:	f8d8 9010 	ldr.w	r9, [r8, #16]
  40636a:	68a3      	ldr	r3, [r4, #8]
  40636c:	6861      	ldr	r1, [r4, #4]
  40636e:	eb07 0609 	add.w	r6, r7, r9
  406372:	42b3      	cmp	r3, r6
  406374:	bfb8      	it	lt
  406376:	3101      	addlt	r1, #1
  406378:	f7ff feca 	bl	406110 <_Balloc>
  40637c:	f100 0514 	add.w	r5, r0, #20
  406380:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
  406384:	462b      	mov	r3, r5
  406386:	2200      	movs	r2, #0
  406388:	4573      	cmp	r3, lr
  40638a:	d316      	bcc.n	4063ba <__multiply+0x70>
  40638c:	f104 0314 	add.w	r3, r4, #20
  406390:	f108 0214 	add.w	r2, r8, #20
  406394:	eb03 0787 	add.w	r7, r3, r7, lsl #2
  406398:	eb02 0389 	add.w	r3, r2, r9, lsl #2
  40639c:	9300      	str	r3, [sp, #0]
  40639e:	9b00      	ldr	r3, [sp, #0]
  4063a0:	9201      	str	r2, [sp, #4]
  4063a2:	4293      	cmp	r3, r2
  4063a4:	d80c      	bhi.n	4063c0 <__multiply+0x76>
  4063a6:	2e00      	cmp	r6, #0
  4063a8:	dd03      	ble.n	4063b2 <__multiply+0x68>
  4063aa:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
  4063ae:	2b00      	cmp	r3, #0
  4063b0:	d059      	beq.n	406466 <__multiply+0x11c>
  4063b2:	6106      	str	r6, [r0, #16]
  4063b4:	b003      	add	sp, #12
  4063b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4063ba:	f843 2b04 	str.w	r2, [r3], #4
  4063be:	e7e3      	b.n	406388 <__multiply+0x3e>
  4063c0:	f8b2 a000 	ldrh.w	sl, [r2]
  4063c4:	f1ba 0f00 	cmp.w	sl, #0
  4063c8:	d023      	beq.n	406412 <__multiply+0xc8>
  4063ca:	f104 0914 	add.w	r9, r4, #20
  4063ce:	46ac      	mov	ip, r5
  4063d0:	f04f 0800 	mov.w	r8, #0
  4063d4:	f859 1b04 	ldr.w	r1, [r9], #4
  4063d8:	f8dc b000 	ldr.w	fp, [ip]
  4063dc:	b28b      	uxth	r3, r1
  4063de:	fa1f fb8b 	uxth.w	fp, fp
  4063e2:	fb0a b303 	mla	r3, sl, r3, fp
  4063e6:	ea4f 4b11 	mov.w	fp, r1, lsr #16
  4063ea:	f8dc 1000 	ldr.w	r1, [ip]
  4063ee:	4443      	add	r3, r8
  4063f0:	ea4f 4811 	mov.w	r8, r1, lsr #16
  4063f4:	fb0a 810b 	mla	r1, sl, fp, r8
  4063f8:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4063fc:	b29b      	uxth	r3, r3
  4063fe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  406402:	454f      	cmp	r7, r9
  406404:	ea4f 4811 	mov.w	r8, r1, lsr #16
  406408:	f84c 3b04 	str.w	r3, [ip], #4
  40640c:	d8e2      	bhi.n	4063d4 <__multiply+0x8a>
  40640e:	f8cc 8000 	str.w	r8, [ip]
  406412:	9b01      	ldr	r3, [sp, #4]
  406414:	f8b3 9002 	ldrh.w	r9, [r3, #2]
  406418:	3204      	adds	r2, #4
  40641a:	f1b9 0f00 	cmp.w	r9, #0
  40641e:	d020      	beq.n	406462 <__multiply+0x118>
  406420:	682b      	ldr	r3, [r5, #0]
  406422:	f104 0814 	add.w	r8, r4, #20
  406426:	46ac      	mov	ip, r5
  406428:	f04f 0a00 	mov.w	sl, #0
  40642c:	f8b8 1000 	ldrh.w	r1, [r8]
  406430:	f8bc b002 	ldrh.w	fp, [ip, #2]
  406434:	fb09 b101 	mla	r1, r9, r1, fp
  406438:	448a      	add	sl, r1
  40643a:	b29b      	uxth	r3, r3
  40643c:	ea43 430a 	orr.w	r3, r3, sl, lsl #16
  406440:	f84c 3b04 	str.w	r3, [ip], #4
  406444:	f858 3b04 	ldr.w	r3, [r8], #4
  406448:	f8bc 1000 	ldrh.w	r1, [ip]
  40644c:	0c1b      	lsrs	r3, r3, #16
  40644e:	fb09 1303 	mla	r3, r9, r3, r1
  406452:	eb03 431a 	add.w	r3, r3, sl, lsr #16
  406456:	4547      	cmp	r7, r8
  406458:	ea4f 4a13 	mov.w	sl, r3, lsr #16
  40645c:	d8e6      	bhi.n	40642c <__multiply+0xe2>
  40645e:	f8cc 3000 	str.w	r3, [ip]
  406462:	3504      	adds	r5, #4
  406464:	e79b      	b.n	40639e <__multiply+0x54>
  406466:	3e01      	subs	r6, #1
  406468:	e79d      	b.n	4063a6 <__multiply+0x5c>
	...

0040646c <__pow5mult>:
  40646c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  406470:	4615      	mov	r5, r2
  406472:	f012 0203 	ands.w	r2, r2, #3
  406476:	4606      	mov	r6, r0
  406478:	460f      	mov	r7, r1
  40647a:	d007      	beq.n	40648c <__pow5mult+0x20>
  40647c:	3a01      	subs	r2, #1
  40647e:	4c21      	ldr	r4, [pc, #132]	; (406504 <__pow5mult+0x98>)
  406480:	2300      	movs	r3, #0
  406482:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
  406486:	f7ff fe8e 	bl	4061a6 <__multadd>
  40648a:	4607      	mov	r7, r0
  40648c:	10ad      	asrs	r5, r5, #2
  40648e:	d035      	beq.n	4064fc <__pow5mult+0x90>
  406490:	6a74      	ldr	r4, [r6, #36]	; 0x24
  406492:	b93c      	cbnz	r4, 4064a4 <__pow5mult+0x38>
  406494:	2010      	movs	r0, #16
  406496:	f7ff fdd1 	bl	40603c <malloc>
  40649a:	e9c0 4401 	strd	r4, r4, [r0, #4]
  40649e:	6270      	str	r0, [r6, #36]	; 0x24
  4064a0:	6004      	str	r4, [r0, #0]
  4064a2:	60c4      	str	r4, [r0, #12]
  4064a4:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
  4064a8:	f8d8 4008 	ldr.w	r4, [r8, #8]
  4064ac:	b94c      	cbnz	r4, 4064c2 <__pow5mult+0x56>
  4064ae:	f240 2171 	movw	r1, #625	; 0x271
  4064b2:	4630      	mov	r0, r6
  4064b4:	f7ff ff40 	bl	406338 <__i2b>
  4064b8:	2300      	movs	r3, #0
  4064ba:	f8c8 0008 	str.w	r0, [r8, #8]
  4064be:	4604      	mov	r4, r0
  4064c0:	6003      	str	r3, [r0, #0]
  4064c2:	f04f 0800 	mov.w	r8, #0
  4064c6:	07eb      	lsls	r3, r5, #31
  4064c8:	d50a      	bpl.n	4064e0 <__pow5mult+0x74>
  4064ca:	4639      	mov	r1, r7
  4064cc:	4622      	mov	r2, r4
  4064ce:	4630      	mov	r0, r6
  4064d0:	f7ff ff3b 	bl	40634a <__multiply>
  4064d4:	4639      	mov	r1, r7
  4064d6:	4681      	mov	r9, r0
  4064d8:	4630      	mov	r0, r6
  4064da:	f7ff fe4d 	bl	406178 <_Bfree>
  4064de:	464f      	mov	r7, r9
  4064e0:	106d      	asrs	r5, r5, #1
  4064e2:	d00b      	beq.n	4064fc <__pow5mult+0x90>
  4064e4:	6820      	ldr	r0, [r4, #0]
  4064e6:	b938      	cbnz	r0, 4064f8 <__pow5mult+0x8c>
  4064e8:	4622      	mov	r2, r4
  4064ea:	4621      	mov	r1, r4
  4064ec:	4630      	mov	r0, r6
  4064ee:	f7ff ff2c 	bl	40634a <__multiply>
  4064f2:	6020      	str	r0, [r4, #0]
  4064f4:	f8c0 8000 	str.w	r8, [r0]
  4064f8:	4604      	mov	r4, r0
  4064fa:	e7e4      	b.n	4064c6 <__pow5mult+0x5a>
  4064fc:	4638      	mov	r0, r7
  4064fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406502:	bf00      	nop
  406504:	004086f0 	.word	0x004086f0

00406508 <__lshift>:
  406508:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  40650c:	460c      	mov	r4, r1
  40650e:	ea4f 1a62 	mov.w	sl, r2, asr #5
  406512:	6923      	ldr	r3, [r4, #16]
  406514:	6849      	ldr	r1, [r1, #4]
  406516:	eb0a 0903 	add.w	r9, sl, r3
  40651a:	68a3      	ldr	r3, [r4, #8]
  40651c:	4607      	mov	r7, r0
  40651e:	4616      	mov	r6, r2
  406520:	f109 0501 	add.w	r5, r9, #1
  406524:	42ab      	cmp	r3, r5
  406526:	db33      	blt.n	406590 <__lshift+0x88>
  406528:	4638      	mov	r0, r7
  40652a:	f7ff fdf1 	bl	406110 <_Balloc>
  40652e:	2300      	movs	r3, #0
  406530:	4680      	mov	r8, r0
  406532:	f100 0114 	add.w	r1, r0, #20
  406536:	f100 0210 	add.w	r2, r0, #16
  40653a:	4618      	mov	r0, r3
  40653c:	4553      	cmp	r3, sl
  40653e:	db2a      	blt.n	406596 <__lshift+0x8e>
  406540:	6920      	ldr	r0, [r4, #16]
  406542:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
  406546:	f104 0314 	add.w	r3, r4, #20
  40654a:	f016 021f 	ands.w	r2, r6, #31
  40654e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
  406552:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
  406556:	d022      	beq.n	40659e <__lshift+0x96>
  406558:	f1c2 0e20 	rsb	lr, r2, #32
  40655c:	2000      	movs	r0, #0
  40655e:	681e      	ldr	r6, [r3, #0]
  406560:	4096      	lsls	r6, r2
  406562:	4330      	orrs	r0, r6
  406564:	f841 0b04 	str.w	r0, [r1], #4
  406568:	f853 0b04 	ldr.w	r0, [r3], #4
  40656c:	459c      	cmp	ip, r3
  40656e:	fa20 f00e 	lsr.w	r0, r0, lr
  406572:	d8f4      	bhi.n	40655e <__lshift+0x56>
  406574:	6008      	str	r0, [r1, #0]
  406576:	b108      	cbz	r0, 40657c <__lshift+0x74>
  406578:	f109 0502 	add.w	r5, r9, #2
  40657c:	3d01      	subs	r5, #1
  40657e:	4638      	mov	r0, r7
  406580:	f8c8 5010 	str.w	r5, [r8, #16]
  406584:	4621      	mov	r1, r4
  406586:	f7ff fdf7 	bl	406178 <_Bfree>
  40658a:	4640      	mov	r0, r8
  40658c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  406590:	3101      	adds	r1, #1
  406592:	005b      	lsls	r3, r3, #1
  406594:	e7c6      	b.n	406524 <__lshift+0x1c>
  406596:	f842 0f04 	str.w	r0, [r2, #4]!
  40659a:	3301      	adds	r3, #1
  40659c:	e7ce      	b.n	40653c <__lshift+0x34>
  40659e:	3904      	subs	r1, #4
  4065a0:	f853 2b04 	ldr.w	r2, [r3], #4
  4065a4:	f841 2f04 	str.w	r2, [r1, #4]!
  4065a8:	459c      	cmp	ip, r3
  4065aa:	d8f9      	bhi.n	4065a0 <__lshift+0x98>
  4065ac:	e7e6      	b.n	40657c <__lshift+0x74>

004065ae <__mcmp>:
  4065ae:	6903      	ldr	r3, [r0, #16]
  4065b0:	690a      	ldr	r2, [r1, #16]
  4065b2:	1a9b      	subs	r3, r3, r2
  4065b4:	b530      	push	{r4, r5, lr}
  4065b6:	d10c      	bne.n	4065d2 <__mcmp+0x24>
  4065b8:	0092      	lsls	r2, r2, #2
  4065ba:	3014      	adds	r0, #20
  4065bc:	3114      	adds	r1, #20
  4065be:	1884      	adds	r4, r0, r2
  4065c0:	4411      	add	r1, r2
  4065c2:	f854 5d04 	ldr.w	r5, [r4, #-4]!
  4065c6:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  4065ca:	4295      	cmp	r5, r2
  4065cc:	d003      	beq.n	4065d6 <__mcmp+0x28>
  4065ce:	d305      	bcc.n	4065dc <__mcmp+0x2e>
  4065d0:	2301      	movs	r3, #1
  4065d2:	4618      	mov	r0, r3
  4065d4:	bd30      	pop	{r4, r5, pc}
  4065d6:	42a0      	cmp	r0, r4
  4065d8:	d3f3      	bcc.n	4065c2 <__mcmp+0x14>
  4065da:	e7fa      	b.n	4065d2 <__mcmp+0x24>
  4065dc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
  4065e0:	e7f7      	b.n	4065d2 <__mcmp+0x24>

004065e2 <__mdiff>:
  4065e2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4065e6:	460d      	mov	r5, r1
  4065e8:	4607      	mov	r7, r0
  4065ea:	4611      	mov	r1, r2
  4065ec:	4628      	mov	r0, r5
  4065ee:	4614      	mov	r4, r2
  4065f0:	f7ff ffdd 	bl	4065ae <__mcmp>
  4065f4:	1e06      	subs	r6, r0, #0
  4065f6:	d108      	bne.n	40660a <__mdiff+0x28>
  4065f8:	4631      	mov	r1, r6
  4065fa:	4638      	mov	r0, r7
  4065fc:	f7ff fd88 	bl	406110 <_Balloc>
  406600:	2301      	movs	r3, #1
  406602:	e9c0 3604 	strd	r3, r6, [r0, #16]
  406606:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40660a:	bfa4      	itt	ge
  40660c:	4623      	movge	r3, r4
  40660e:	462c      	movge	r4, r5
  406610:	4638      	mov	r0, r7
  406612:	6861      	ldr	r1, [r4, #4]
  406614:	bfa6      	itte	ge
  406616:	461d      	movge	r5, r3
  406618:	2600      	movge	r6, #0
  40661a:	2601      	movlt	r6, #1
  40661c:	f7ff fd78 	bl	406110 <_Balloc>
  406620:	692b      	ldr	r3, [r5, #16]
  406622:	60c6      	str	r6, [r0, #12]
  406624:	6926      	ldr	r6, [r4, #16]
  406626:	f105 0914 	add.w	r9, r5, #20
  40662a:	f104 0214 	add.w	r2, r4, #20
  40662e:	eb02 0786 	add.w	r7, r2, r6, lsl #2
  406632:	eb09 0883 	add.w	r8, r9, r3, lsl #2
  406636:	f100 0514 	add.w	r5, r0, #20
  40663a:	f04f 0e00 	mov.w	lr, #0
  40663e:	f852 ab04 	ldr.w	sl, [r2], #4
  406642:	f859 4b04 	ldr.w	r4, [r9], #4
  406646:	fa1e f18a 	uxtah	r1, lr, sl
  40664a:	b2a3      	uxth	r3, r4
  40664c:	1ac9      	subs	r1, r1, r3
  40664e:	0c23      	lsrs	r3, r4, #16
  406650:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
  406654:	eb03 4321 	add.w	r3, r3, r1, asr #16
  406658:	b289      	uxth	r1, r1
  40665a:	ea4f 4e23 	mov.w	lr, r3, asr #16
  40665e:	45c8      	cmp	r8, r9
  406660:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
  406664:	4694      	mov	ip, r2
  406666:	f845 3b04 	str.w	r3, [r5], #4
  40666a:	d8e8      	bhi.n	40663e <__mdiff+0x5c>
  40666c:	45bc      	cmp	ip, r7
  40666e:	d304      	bcc.n	40667a <__mdiff+0x98>
  406670:	f855 3d04 	ldr.w	r3, [r5, #-4]!
  406674:	b183      	cbz	r3, 406698 <__mdiff+0xb6>
  406676:	6106      	str	r6, [r0, #16]
  406678:	e7c5      	b.n	406606 <__mdiff+0x24>
  40667a:	f85c 1b04 	ldr.w	r1, [ip], #4
  40667e:	fa1e f381 	uxtah	r3, lr, r1
  406682:	141a      	asrs	r2, r3, #16
  406684:	eb02 4211 	add.w	r2, r2, r1, lsr #16
  406688:	b29b      	uxth	r3, r3
  40668a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  40668e:	ea4f 4e22 	mov.w	lr, r2, asr #16
  406692:	f845 3b04 	str.w	r3, [r5], #4
  406696:	e7e9      	b.n	40666c <__mdiff+0x8a>
  406698:	3e01      	subs	r6, #1
  40669a:	e7e9      	b.n	406670 <__mdiff+0x8e>

0040669c <__ulp>:
  40669c:	4b0f      	ldr	r3, [pc, #60]	; (4066dc <__ulp+0x40>)
  40669e:	400b      	ands	r3, r1
  4066a0:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
  4066a4:	2b00      	cmp	r3, #0
  4066a6:	dd02      	ble.n	4066ae <__ulp+0x12>
  4066a8:	2000      	movs	r0, #0
  4066aa:	4619      	mov	r1, r3
  4066ac:	4770      	bx	lr
  4066ae:	425b      	negs	r3, r3
  4066b0:	151b      	asrs	r3, r3, #20
  4066b2:	2b13      	cmp	r3, #19
  4066b4:	f04f 0000 	mov.w	r0, #0
  4066b8:	f04f 0100 	mov.w	r1, #0
  4066bc:	dc04      	bgt.n	4066c8 <__ulp+0x2c>
  4066be:	f44f 2200 	mov.w	r2, #524288	; 0x80000
  4066c2:	fa42 f103 	asr.w	r1, r2, r3
  4066c6:	4770      	bx	lr
  4066c8:	3b14      	subs	r3, #20
  4066ca:	2b1e      	cmp	r3, #30
  4066cc:	bfda      	itte	le
  4066ce:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
  4066d2:	fa22 f303 	lsrle.w	r3, r2, r3
  4066d6:	2301      	movgt	r3, #1
  4066d8:	4618      	mov	r0, r3
  4066da:	4770      	bx	lr
  4066dc:	7ff00000 	.word	0x7ff00000

004066e0 <__b2d>:
  4066e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4066e4:	6907      	ldr	r7, [r0, #16]
  4066e6:	f100 0914 	add.w	r9, r0, #20
  4066ea:	eb09 0787 	add.w	r7, r9, r7, lsl #2
  4066ee:	f1a7 0804 	sub.w	r8, r7, #4
  4066f2:	f857 6c04 	ldr.w	r6, [r7, #-4]
  4066f6:	4630      	mov	r0, r6
  4066f8:	f7ff fdce 	bl	406298 <__hi0bits>
  4066fc:	f1c0 0320 	rsb	r3, r0, #32
  406700:	280a      	cmp	r0, #10
  406702:	600b      	str	r3, [r1, #0]
  406704:	491f      	ldr	r1, [pc, #124]	; (406784 <__b2d+0xa4>)
  406706:	dc17      	bgt.n	406738 <__b2d+0x58>
  406708:	f1c0 0c0b 	rsb	ip, r0, #11
  40670c:	45c1      	cmp	r9, r8
  40670e:	fa26 f30c 	lsr.w	r3, r6, ip
  406712:	bf38      	it	cc
  406714:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
  406718:	ea43 0501 	orr.w	r5, r3, r1
  40671c:	bf28      	it	cs
  40671e:	2200      	movcs	r2, #0
  406720:	f100 0315 	add.w	r3, r0, #21
  406724:	fa06 f303 	lsl.w	r3, r6, r3
  406728:	fa22 f20c 	lsr.w	r2, r2, ip
  40672c:	ea43 0402 	orr.w	r4, r3, r2
  406730:	4620      	mov	r0, r4
  406732:	4629      	mov	r1, r5
  406734:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  406738:	45c1      	cmp	r9, r8
  40673a:	bf3a      	itte	cc
  40673c:	f1a7 0808 	subcc.w	r8, r7, #8
  406740:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
  406744:	2200      	movcs	r2, #0
  406746:	f1b0 030b 	subs.w	r3, r0, #11
  40674a:	d016      	beq.n	40677a <__b2d+0x9a>
  40674c:	f1c3 0720 	rsb	r7, r3, #32
  406750:	fa22 f107 	lsr.w	r1, r2, r7
  406754:	45c8      	cmp	r8, r9
  406756:	fa06 f603 	lsl.w	r6, r6, r3
  40675a:	ea46 0601 	orr.w	r6, r6, r1
  40675e:	bf8c      	ite	hi
  406760:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
  406764:	2100      	movls	r1, #0
  406766:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
  40676a:	fa02 f003 	lsl.w	r0, r2, r3
  40676e:	40f9      	lsrs	r1, r7
  406770:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
  406774:	ea40 0401 	orr.w	r4, r0, r1
  406778:	e7da      	b.n	406730 <__b2d+0x50>
  40677a:	ea46 0501 	orr.w	r5, r6, r1
  40677e:	4614      	mov	r4, r2
  406780:	e7d6      	b.n	406730 <__b2d+0x50>
  406782:	bf00      	nop
  406784:	3ff00000 	.word	0x3ff00000

00406788 <__d2b>:
  406788:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  40678c:	2101      	movs	r1, #1
  40678e:	461c      	mov	r4, r3
  406790:	4690      	mov	r8, r2
  406792:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
  406796:	f7ff fcbb 	bl	406110 <_Balloc>
  40679a:	f3c4 0213 	ubfx	r2, r4, #0, #20
  40679e:	f3c4 540a 	ubfx	r4, r4, #20, #11
  4067a2:	4607      	mov	r7, r0
  4067a4:	bb2c      	cbnz	r4, 4067f2 <__d2b+0x6a>
  4067a6:	9201      	str	r2, [sp, #4]
  4067a8:	f1b8 0200 	subs.w	r2, r8, #0
  4067ac:	d026      	beq.n	4067fc <__d2b+0x74>
  4067ae:	4668      	mov	r0, sp
  4067b0:	9200      	str	r2, [sp, #0]
  4067b2:	f7ff fd91 	bl	4062d8 <__lo0bits>
  4067b6:	9900      	ldr	r1, [sp, #0]
  4067b8:	b1f0      	cbz	r0, 4067f8 <__d2b+0x70>
  4067ba:	9a01      	ldr	r2, [sp, #4]
  4067bc:	f1c0 0320 	rsb	r3, r0, #32
  4067c0:	fa02 f303 	lsl.w	r3, r2, r3
  4067c4:	430b      	orrs	r3, r1
  4067c6:	40c2      	lsrs	r2, r0
  4067c8:	617b      	str	r3, [r7, #20]
  4067ca:	9201      	str	r2, [sp, #4]
  4067cc:	9b01      	ldr	r3, [sp, #4]
  4067ce:	61bb      	str	r3, [r7, #24]
  4067d0:	2b00      	cmp	r3, #0
  4067d2:	bf14      	ite	ne
  4067d4:	2102      	movne	r1, #2
  4067d6:	2101      	moveq	r1, #1
  4067d8:	6139      	str	r1, [r7, #16]
  4067da:	b1c4      	cbz	r4, 40680e <__d2b+0x86>
  4067dc:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
  4067e0:	4404      	add	r4, r0
  4067e2:	6034      	str	r4, [r6, #0]
  4067e4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  4067e8:	6028      	str	r0, [r5, #0]
  4067ea:	4638      	mov	r0, r7
  4067ec:	b002      	add	sp, #8
  4067ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4067f2:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
  4067f6:	e7d6      	b.n	4067a6 <__d2b+0x1e>
  4067f8:	6179      	str	r1, [r7, #20]
  4067fa:	e7e7      	b.n	4067cc <__d2b+0x44>
  4067fc:	a801      	add	r0, sp, #4
  4067fe:	f7ff fd6b 	bl	4062d8 <__lo0bits>
  406802:	9b01      	ldr	r3, [sp, #4]
  406804:	617b      	str	r3, [r7, #20]
  406806:	2101      	movs	r1, #1
  406808:	6139      	str	r1, [r7, #16]
  40680a:	3020      	adds	r0, #32
  40680c:	e7e5      	b.n	4067da <__d2b+0x52>
  40680e:	eb07 0381 	add.w	r3, r7, r1, lsl #2
  406812:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  406816:	6030      	str	r0, [r6, #0]
  406818:	6918      	ldr	r0, [r3, #16]
  40681a:	f7ff fd3d 	bl	406298 <__hi0bits>
  40681e:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  406822:	e7e1      	b.n	4067e8 <__d2b+0x60>

00406824 <__ratio>:
  406824:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406828:	4688      	mov	r8, r1
  40682a:	4669      	mov	r1, sp
  40682c:	4681      	mov	r9, r0
  40682e:	f7ff ff57 	bl	4066e0 <__b2d>
  406832:	468b      	mov	fp, r1
  406834:	4606      	mov	r6, r0
  406836:	460f      	mov	r7, r1
  406838:	4640      	mov	r0, r8
  40683a:	a901      	add	r1, sp, #4
  40683c:	f7ff ff50 	bl	4066e0 <__b2d>
  406840:	f8d9 3010 	ldr.w	r3, [r9, #16]
  406844:	f8d8 2010 	ldr.w	r2, [r8, #16]
  406848:	eba3 0c02 	sub.w	ip, r3, r2
  40684c:	e9dd 3200 	ldrd	r3, r2, [sp]
  406850:	1a9b      	subs	r3, r3, r2
  406852:	eb03 134c 	add.w	r3, r3, ip, lsl #5
  406856:	2b00      	cmp	r3, #0
  406858:	bfd5      	itete	le
  40685a:	460a      	movle	r2, r1
  40685c:	463a      	movgt	r2, r7
  40685e:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
  406862:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
  406866:	460d      	mov	r5, r1
  406868:	bfd8      	it	le
  40686a:	eb02 5503 	addle.w	r5, r2, r3, lsl #20
  40686e:	462b      	mov	r3, r5
  406870:	4602      	mov	r2, r0
  406872:	4659      	mov	r1, fp
  406874:	4630      	mov	r0, r6
  406876:	f000 fe17 	bl	4074a8 <__aeabi_ddiv>
  40687a:	b003      	add	sp, #12
  40687c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00406880 <__copybits>:
  406880:	3901      	subs	r1, #1
  406882:	b510      	push	{r4, lr}
  406884:	1149      	asrs	r1, r1, #5
  406886:	6914      	ldr	r4, [r2, #16]
  406888:	3101      	adds	r1, #1
  40688a:	f102 0314 	add.w	r3, r2, #20
  40688e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
  406892:	eb03 0484 	add.w	r4, r3, r4, lsl #2
  406896:	42a3      	cmp	r3, r4
  406898:	4602      	mov	r2, r0
  40689a:	d303      	bcc.n	4068a4 <__copybits+0x24>
  40689c:	2300      	movs	r3, #0
  40689e:	428a      	cmp	r2, r1
  4068a0:	d305      	bcc.n	4068ae <__copybits+0x2e>
  4068a2:	bd10      	pop	{r4, pc}
  4068a4:	f853 2b04 	ldr.w	r2, [r3], #4
  4068a8:	f840 2b04 	str.w	r2, [r0], #4
  4068ac:	e7f3      	b.n	406896 <__copybits+0x16>
  4068ae:	f842 3b04 	str.w	r3, [r2], #4
  4068b2:	e7f4      	b.n	40689e <__copybits+0x1e>

004068b4 <__any_on>:
  4068b4:	f100 0214 	add.w	r2, r0, #20
  4068b8:	6900      	ldr	r0, [r0, #16]
  4068ba:	114b      	asrs	r3, r1, #5
  4068bc:	4298      	cmp	r0, r3
  4068be:	b510      	push	{r4, lr}
  4068c0:	db11      	blt.n	4068e6 <__any_on+0x32>
  4068c2:	dd0a      	ble.n	4068da <__any_on+0x26>
  4068c4:	f011 011f 	ands.w	r1, r1, #31
  4068c8:	d007      	beq.n	4068da <__any_on+0x26>
  4068ca:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
  4068ce:	fa24 f001 	lsr.w	r0, r4, r1
  4068d2:	fa00 f101 	lsl.w	r1, r0, r1
  4068d6:	428c      	cmp	r4, r1
  4068d8:	d10b      	bne.n	4068f2 <__any_on+0x3e>
  4068da:	eb02 0383 	add.w	r3, r2, r3, lsl #2
  4068de:	4293      	cmp	r3, r2
  4068e0:	d803      	bhi.n	4068ea <__any_on+0x36>
  4068e2:	2000      	movs	r0, #0
  4068e4:	bd10      	pop	{r4, pc}
  4068e6:	4603      	mov	r3, r0
  4068e8:	e7f7      	b.n	4068da <__any_on+0x26>
  4068ea:	f853 1d04 	ldr.w	r1, [r3, #-4]!
  4068ee:	2900      	cmp	r1, #0
  4068f0:	d0f5      	beq.n	4068de <__any_on+0x2a>
  4068f2:	2001      	movs	r0, #1
  4068f4:	e7f6      	b.n	4068e4 <__any_on+0x30>

004068f6 <_calloc_r>:
  4068f6:	b538      	push	{r3, r4, r5, lr}
  4068f8:	fb02 f401 	mul.w	r4, r2, r1
  4068fc:	4621      	mov	r1, r4
  4068fe:	f000 f857 	bl	4069b0 <_malloc_r>
  406902:	4605      	mov	r5, r0
  406904:	b118      	cbz	r0, 40690e <_calloc_r+0x18>
  406906:	4622      	mov	r2, r4
  406908:	2100      	movs	r1, #0
  40690a:	f7fc fac9 	bl	402ea0 <memset>
  40690e:	4628      	mov	r0, r5
  406910:	bd38      	pop	{r3, r4, r5, pc}
	...

00406914 <_free_r>:
  406914:	b538      	push	{r3, r4, r5, lr}
  406916:	4605      	mov	r5, r0
  406918:	2900      	cmp	r1, #0
  40691a:	d045      	beq.n	4069a8 <_free_r+0x94>
  40691c:	f851 3c04 	ldr.w	r3, [r1, #-4]
  406920:	1f0c      	subs	r4, r1, #4
  406922:	2b00      	cmp	r3, #0
  406924:	bfb8      	it	lt
  406926:	18e4      	addlt	r4, r4, r3
  406928:	f000 faba 	bl	406ea0 <__malloc_lock>
  40692c:	4a1f      	ldr	r2, [pc, #124]	; (4069ac <_free_r+0x98>)
  40692e:	6813      	ldr	r3, [r2, #0]
  406930:	4610      	mov	r0, r2
  406932:	b933      	cbnz	r3, 406942 <_free_r+0x2e>
  406934:	6063      	str	r3, [r4, #4]
  406936:	6014      	str	r4, [r2, #0]
  406938:	4628      	mov	r0, r5
  40693a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  40693e:	f000 bab5 	b.w	406eac <__malloc_unlock>
  406942:	42a3      	cmp	r3, r4
  406944:	d90c      	bls.n	406960 <_free_r+0x4c>
  406946:	6821      	ldr	r1, [r4, #0]
  406948:	1862      	adds	r2, r4, r1
  40694a:	4293      	cmp	r3, r2
  40694c:	bf04      	itt	eq
  40694e:	681a      	ldreq	r2, [r3, #0]
  406950:	685b      	ldreq	r3, [r3, #4]
  406952:	6063      	str	r3, [r4, #4]
  406954:	bf04      	itt	eq
  406956:	1852      	addeq	r2, r2, r1
  406958:	6022      	streq	r2, [r4, #0]
  40695a:	6004      	str	r4, [r0, #0]
  40695c:	e7ec      	b.n	406938 <_free_r+0x24>
  40695e:	4613      	mov	r3, r2
  406960:	685a      	ldr	r2, [r3, #4]
  406962:	b10a      	cbz	r2, 406968 <_free_r+0x54>
  406964:	42a2      	cmp	r2, r4
  406966:	d9fa      	bls.n	40695e <_free_r+0x4a>
  406968:	6819      	ldr	r1, [r3, #0]
  40696a:	1858      	adds	r0, r3, r1
  40696c:	42a0      	cmp	r0, r4
  40696e:	d10b      	bne.n	406988 <_free_r+0x74>
  406970:	6820      	ldr	r0, [r4, #0]
  406972:	4401      	add	r1, r0
  406974:	1858      	adds	r0, r3, r1
  406976:	4282      	cmp	r2, r0
  406978:	6019      	str	r1, [r3, #0]
  40697a:	d1dd      	bne.n	406938 <_free_r+0x24>
  40697c:	6810      	ldr	r0, [r2, #0]
  40697e:	6852      	ldr	r2, [r2, #4]
  406980:	605a      	str	r2, [r3, #4]
  406982:	4401      	add	r1, r0
  406984:	6019      	str	r1, [r3, #0]
  406986:	e7d7      	b.n	406938 <_free_r+0x24>
  406988:	d902      	bls.n	406990 <_free_r+0x7c>
  40698a:	230c      	movs	r3, #12
  40698c:	602b      	str	r3, [r5, #0]
  40698e:	e7d3      	b.n	406938 <_free_r+0x24>
  406990:	6820      	ldr	r0, [r4, #0]
  406992:	1821      	adds	r1, r4, r0
  406994:	428a      	cmp	r2, r1
  406996:	bf04      	itt	eq
  406998:	6811      	ldreq	r1, [r2, #0]
  40699a:	6852      	ldreq	r2, [r2, #4]
  40699c:	6062      	str	r2, [r4, #4]
  40699e:	bf04      	itt	eq
  4069a0:	1809      	addeq	r1, r1, r0
  4069a2:	6021      	streq	r1, [r4, #0]
  4069a4:	605c      	str	r4, [r3, #4]
  4069a6:	e7c7      	b.n	406938 <_free_r+0x24>
  4069a8:	bd38      	pop	{r3, r4, r5, pc}
  4069aa:	bf00      	nop
  4069ac:	200004f0 	.word	0x200004f0

004069b0 <_malloc_r>:
  4069b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  4069b2:	1ccd      	adds	r5, r1, #3
  4069b4:	f025 0503 	bic.w	r5, r5, #3
  4069b8:	3508      	adds	r5, #8
  4069ba:	2d0c      	cmp	r5, #12
  4069bc:	bf38      	it	cc
  4069be:	250c      	movcc	r5, #12
  4069c0:	2d00      	cmp	r5, #0
  4069c2:	4606      	mov	r6, r0
  4069c4:	db01      	blt.n	4069ca <_malloc_r+0x1a>
  4069c6:	42a9      	cmp	r1, r5
  4069c8:	d903      	bls.n	4069d2 <_malloc_r+0x22>
  4069ca:	230c      	movs	r3, #12
  4069cc:	6033      	str	r3, [r6, #0]
  4069ce:	2000      	movs	r0, #0
  4069d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  4069d2:	f000 fa65 	bl	406ea0 <__malloc_lock>
  4069d6:	4921      	ldr	r1, [pc, #132]	; (406a5c <_malloc_r+0xac>)
  4069d8:	680a      	ldr	r2, [r1, #0]
  4069da:	4614      	mov	r4, r2
  4069dc:	b99c      	cbnz	r4, 406a06 <_malloc_r+0x56>
  4069de:	4f20      	ldr	r7, [pc, #128]	; (406a60 <_malloc_r+0xb0>)
  4069e0:	683b      	ldr	r3, [r7, #0]
  4069e2:	b923      	cbnz	r3, 4069ee <_malloc_r+0x3e>
  4069e4:	4621      	mov	r1, r4
  4069e6:	4630      	mov	r0, r6
  4069e8:	f000 f992 	bl	406d10 <_sbrk_r>
  4069ec:	6038      	str	r0, [r7, #0]
  4069ee:	4629      	mov	r1, r5
  4069f0:	4630      	mov	r0, r6
  4069f2:	f000 f98d 	bl	406d10 <_sbrk_r>
  4069f6:	1c43      	adds	r3, r0, #1
  4069f8:	d123      	bne.n	406a42 <_malloc_r+0x92>
  4069fa:	230c      	movs	r3, #12
  4069fc:	6033      	str	r3, [r6, #0]
  4069fe:	4630      	mov	r0, r6
  406a00:	f000 fa54 	bl	406eac <__malloc_unlock>
  406a04:	e7e3      	b.n	4069ce <_malloc_r+0x1e>
  406a06:	6823      	ldr	r3, [r4, #0]
  406a08:	1b5b      	subs	r3, r3, r5
  406a0a:	d417      	bmi.n	406a3c <_malloc_r+0x8c>
  406a0c:	2b0b      	cmp	r3, #11
  406a0e:	d903      	bls.n	406a18 <_malloc_r+0x68>
  406a10:	6023      	str	r3, [r4, #0]
  406a12:	441c      	add	r4, r3
  406a14:	6025      	str	r5, [r4, #0]
  406a16:	e004      	b.n	406a22 <_malloc_r+0x72>
  406a18:	6863      	ldr	r3, [r4, #4]
  406a1a:	42a2      	cmp	r2, r4
  406a1c:	bf0c      	ite	eq
  406a1e:	600b      	streq	r3, [r1, #0]
  406a20:	6053      	strne	r3, [r2, #4]
  406a22:	4630      	mov	r0, r6
  406a24:	f000 fa42 	bl	406eac <__malloc_unlock>
  406a28:	f104 000b 	add.w	r0, r4, #11
  406a2c:	1d23      	adds	r3, r4, #4
  406a2e:	f020 0007 	bic.w	r0, r0, #7
  406a32:	1ac2      	subs	r2, r0, r3
  406a34:	d0cc      	beq.n	4069d0 <_malloc_r+0x20>
  406a36:	1a1b      	subs	r3, r3, r0
  406a38:	50a3      	str	r3, [r4, r2]
  406a3a:	e7c9      	b.n	4069d0 <_malloc_r+0x20>
  406a3c:	4622      	mov	r2, r4
  406a3e:	6864      	ldr	r4, [r4, #4]
  406a40:	e7cc      	b.n	4069dc <_malloc_r+0x2c>
  406a42:	1cc4      	adds	r4, r0, #3
  406a44:	f024 0403 	bic.w	r4, r4, #3
  406a48:	42a0      	cmp	r0, r4
  406a4a:	d0e3      	beq.n	406a14 <_malloc_r+0x64>
  406a4c:	1a21      	subs	r1, r4, r0
  406a4e:	4630      	mov	r0, r6
  406a50:	f000 f95e 	bl	406d10 <_sbrk_r>
  406a54:	3001      	adds	r0, #1
  406a56:	d1dd      	bne.n	406a14 <_malloc_r+0x64>
  406a58:	e7cf      	b.n	4069fa <_malloc_r+0x4a>
  406a5a:	bf00      	nop
  406a5c:	200004f0 	.word	0x200004f0
  406a60:	200004f4 	.word	0x200004f4

00406a64 <__sfputc_r>:
  406a64:	6893      	ldr	r3, [r2, #8]
  406a66:	3b01      	subs	r3, #1
  406a68:	2b00      	cmp	r3, #0
  406a6a:	b410      	push	{r4}
  406a6c:	6093      	str	r3, [r2, #8]
  406a6e:	da07      	bge.n	406a80 <__sfputc_r+0x1c>
  406a70:	6994      	ldr	r4, [r2, #24]
  406a72:	42a3      	cmp	r3, r4
  406a74:	db01      	blt.n	406a7a <__sfputc_r+0x16>
  406a76:	290a      	cmp	r1, #10
  406a78:	d102      	bne.n	406a80 <__sfputc_r+0x1c>
  406a7a:	bc10      	pop	{r4}
  406a7c:	f7fd be9a 	b.w	4047b4 <__swbuf_r>
  406a80:	6813      	ldr	r3, [r2, #0]
  406a82:	1c58      	adds	r0, r3, #1
  406a84:	6010      	str	r0, [r2, #0]
  406a86:	7019      	strb	r1, [r3, #0]
  406a88:	4608      	mov	r0, r1
  406a8a:	bc10      	pop	{r4}
  406a8c:	4770      	bx	lr

00406a8e <__sfputs_r>:
  406a8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406a90:	4606      	mov	r6, r0
  406a92:	460f      	mov	r7, r1
  406a94:	4614      	mov	r4, r2
  406a96:	18d5      	adds	r5, r2, r3
  406a98:	42ac      	cmp	r4, r5
  406a9a:	d101      	bne.n	406aa0 <__sfputs_r+0x12>
  406a9c:	2000      	movs	r0, #0
  406a9e:	e007      	b.n	406ab0 <__sfputs_r+0x22>
  406aa0:	463a      	mov	r2, r7
  406aa2:	f814 1b01 	ldrb.w	r1, [r4], #1
  406aa6:	4630      	mov	r0, r6
  406aa8:	f7ff ffdc 	bl	406a64 <__sfputc_r>
  406aac:	1c43      	adds	r3, r0, #1
  406aae:	d1f3      	bne.n	406a98 <__sfputs_r+0xa>
  406ab0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

00406ab4 <_vfiprintf_r>:
  406ab4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  406ab8:	460d      	mov	r5, r1
  406aba:	b09d      	sub	sp, #116	; 0x74
  406abc:	4614      	mov	r4, r2
  406abe:	461e      	mov	r6, r3
  406ac0:	4607      	mov	r7, r0
  406ac2:	b118      	cbz	r0, 406acc <_vfiprintf_r+0x18>
  406ac4:	6983      	ldr	r3, [r0, #24]
  406ac6:	b90b      	cbnz	r3, 406acc <_vfiprintf_r+0x18>
  406ac8:	f7fe fe86 	bl	4057d8 <__sinit>
  406acc:	4b85      	ldr	r3, [pc, #532]	; (406ce4 <_vfiprintf_r+0x230>)
  406ace:	429d      	cmp	r5, r3
  406ad0:	d11b      	bne.n	406b0a <_vfiprintf_r+0x56>
  406ad2:	687d      	ldr	r5, [r7, #4]
  406ad4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  406ad6:	07d9      	lsls	r1, r3, #31
  406ad8:	d405      	bmi.n	406ae6 <_vfiprintf_r+0x32>
  406ada:	89ab      	ldrh	r3, [r5, #12]
  406adc:	059a      	lsls	r2, r3, #22
  406ade:	d402      	bmi.n	406ae6 <_vfiprintf_r+0x32>
  406ae0:	6da8      	ldr	r0, [r5, #88]	; 0x58
  406ae2:	f7ff fa44 	bl	405f6e <__retarget_lock_acquire_recursive>
  406ae6:	89ab      	ldrh	r3, [r5, #12]
  406ae8:	071b      	lsls	r3, r3, #28
  406aea:	d501      	bpl.n	406af0 <_vfiprintf_r+0x3c>
  406aec:	692b      	ldr	r3, [r5, #16]
  406aee:	b9eb      	cbnz	r3, 406b2c <_vfiprintf_r+0x78>
  406af0:	4629      	mov	r1, r5
  406af2:	4638      	mov	r0, r7
  406af4:	f7fd feb0 	bl	404858 <__swsetup_r>
  406af8:	b1c0      	cbz	r0, 406b2c <_vfiprintf_r+0x78>
  406afa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  406afc:	07d8      	lsls	r0, r3, #31
  406afe:	d50e      	bpl.n	406b1e <_vfiprintf_r+0x6a>
  406b00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  406b04:	b01d      	add	sp, #116	; 0x74
  406b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  406b0a:	4b77      	ldr	r3, [pc, #476]	; (406ce8 <_vfiprintf_r+0x234>)
  406b0c:	429d      	cmp	r5, r3
  406b0e:	d101      	bne.n	406b14 <_vfiprintf_r+0x60>
  406b10:	68bd      	ldr	r5, [r7, #8]
  406b12:	e7df      	b.n	406ad4 <_vfiprintf_r+0x20>
  406b14:	4b75      	ldr	r3, [pc, #468]	; (406cec <_vfiprintf_r+0x238>)
  406b16:	429d      	cmp	r5, r3
  406b18:	bf08      	it	eq
  406b1a:	68fd      	ldreq	r5, [r7, #12]
  406b1c:	e7da      	b.n	406ad4 <_vfiprintf_r+0x20>
  406b1e:	89ab      	ldrh	r3, [r5, #12]
  406b20:	0599      	lsls	r1, r3, #22
  406b22:	d4ed      	bmi.n	406b00 <_vfiprintf_r+0x4c>
  406b24:	6da8      	ldr	r0, [r5, #88]	; 0x58
  406b26:	f7ff fa23 	bl	405f70 <__retarget_lock_release_recursive>
  406b2a:	e7e9      	b.n	406b00 <_vfiprintf_r+0x4c>
  406b2c:	2300      	movs	r3, #0
  406b2e:	9309      	str	r3, [sp, #36]	; 0x24
  406b30:	2320      	movs	r3, #32
  406b32:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
  406b36:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 406cf0 <_vfiprintf_r+0x23c>
  406b3a:	9603      	str	r6, [sp, #12]
  406b3c:	2330      	movs	r3, #48	; 0x30
  406b3e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
  406b42:	f04f 0a01 	mov.w	sl, #1
  406b46:	4623      	mov	r3, r4
  406b48:	461e      	mov	r6, r3
  406b4a:	f813 2b01 	ldrb.w	r2, [r3], #1
  406b4e:	b10a      	cbz	r2, 406b54 <_vfiprintf_r+0xa0>
  406b50:	2a25      	cmp	r2, #37	; 0x25
  406b52:	d1f9      	bne.n	406b48 <_vfiprintf_r+0x94>
  406b54:	ebb6 0b04 	subs.w	fp, r6, r4
  406b58:	d00b      	beq.n	406b72 <_vfiprintf_r+0xbe>
  406b5a:	465b      	mov	r3, fp
  406b5c:	4622      	mov	r2, r4
  406b5e:	4629      	mov	r1, r5
  406b60:	4638      	mov	r0, r7
  406b62:	f7ff ff94 	bl	406a8e <__sfputs_r>
  406b66:	3001      	adds	r0, #1
  406b68:	f000 80a3 	beq.w	406cb2 <_vfiprintf_r+0x1fe>
  406b6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406b6e:	445b      	add	r3, fp
  406b70:	9309      	str	r3, [sp, #36]	; 0x24
  406b72:	7833      	ldrb	r3, [r6, #0]
  406b74:	2b00      	cmp	r3, #0
  406b76:	f000 809c 	beq.w	406cb2 <_vfiprintf_r+0x1fe>
  406b7a:	2300      	movs	r3, #0
  406b7c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
  406b80:	e9cd 2305 	strd	r2, r3, [sp, #20]
  406b84:	3601      	adds	r6, #1
  406b86:	9304      	str	r3, [sp, #16]
  406b88:	9307      	str	r3, [sp, #28]
  406b8a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
  406b8e:	931a      	str	r3, [sp, #104]	; 0x68
  406b90:	4634      	mov	r4, r6
  406b92:	2205      	movs	r2, #5
  406b94:	f814 1b01 	ldrb.w	r1, [r4], #1
  406b98:	4855      	ldr	r0, [pc, #340]	; (406cf0 <_vfiprintf_r+0x23c>)
  406b9a:	f7ff fa69 	bl	406070 <memchr>
  406b9e:	9b04      	ldr	r3, [sp, #16]
  406ba0:	b9c0      	cbnz	r0, 406bd4 <_vfiprintf_r+0x120>
  406ba2:	06da      	lsls	r2, r3, #27
  406ba4:	bf44      	itt	mi
  406ba6:	2220      	movmi	r2, #32
  406ba8:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  406bac:	0718      	lsls	r0, r3, #28
  406bae:	bf44      	itt	mi
  406bb0:	222b      	movmi	r2, #43	; 0x2b
  406bb2:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
  406bb6:	7832      	ldrb	r2, [r6, #0]
  406bb8:	2a2a      	cmp	r2, #42	; 0x2a
  406bba:	d013      	beq.n	406be4 <_vfiprintf_r+0x130>
  406bbc:	9a07      	ldr	r2, [sp, #28]
  406bbe:	4634      	mov	r4, r6
  406bc0:	2000      	movs	r0, #0
  406bc2:	260a      	movs	r6, #10
  406bc4:	4621      	mov	r1, r4
  406bc6:	f811 3b01 	ldrb.w	r3, [r1], #1
  406bca:	3b30      	subs	r3, #48	; 0x30
  406bcc:	2b09      	cmp	r3, #9
  406bce:	d94b      	bls.n	406c68 <_vfiprintf_r+0x1b4>
  406bd0:	b970      	cbnz	r0, 406bf0 <_vfiprintf_r+0x13c>
  406bd2:	e014      	b.n	406bfe <_vfiprintf_r+0x14a>
  406bd4:	eba0 0009 	sub.w	r0, r0, r9
  406bd8:	fa0a f000 	lsl.w	r0, sl, r0
  406bdc:	4318      	orrs	r0, r3
  406bde:	9004      	str	r0, [sp, #16]
  406be0:	4626      	mov	r6, r4
  406be2:	e7d5      	b.n	406b90 <_vfiprintf_r+0xdc>
  406be4:	9a03      	ldr	r2, [sp, #12]
  406be6:	1d11      	adds	r1, r2, #4
  406be8:	6812      	ldr	r2, [r2, #0]
  406bea:	9103      	str	r1, [sp, #12]
  406bec:	2a00      	cmp	r2, #0
  406bee:	db01      	blt.n	406bf4 <_vfiprintf_r+0x140>
  406bf0:	9207      	str	r2, [sp, #28]
  406bf2:	e004      	b.n	406bfe <_vfiprintf_r+0x14a>
  406bf4:	4252      	negs	r2, r2
  406bf6:	f043 0302 	orr.w	r3, r3, #2
  406bfa:	9207      	str	r2, [sp, #28]
  406bfc:	9304      	str	r3, [sp, #16]
  406bfe:	7823      	ldrb	r3, [r4, #0]
  406c00:	2b2e      	cmp	r3, #46	; 0x2e
  406c02:	d10c      	bne.n	406c1e <_vfiprintf_r+0x16a>
  406c04:	7863      	ldrb	r3, [r4, #1]
  406c06:	2b2a      	cmp	r3, #42	; 0x2a
  406c08:	d133      	bne.n	406c72 <_vfiprintf_r+0x1be>
  406c0a:	9b03      	ldr	r3, [sp, #12]
  406c0c:	1d1a      	adds	r2, r3, #4
  406c0e:	681b      	ldr	r3, [r3, #0]
  406c10:	9203      	str	r2, [sp, #12]
  406c12:	2b00      	cmp	r3, #0
  406c14:	bfb8      	it	lt
  406c16:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
  406c1a:	3402      	adds	r4, #2
  406c1c:	9305      	str	r3, [sp, #20]
  406c1e:	4e35      	ldr	r6, [pc, #212]	; (406cf4 <_vfiprintf_r+0x240>)
  406c20:	7821      	ldrb	r1, [r4, #0]
  406c22:	2203      	movs	r2, #3
  406c24:	4630      	mov	r0, r6
  406c26:	f7ff fa23 	bl	406070 <memchr>
  406c2a:	b138      	cbz	r0, 406c3c <_vfiprintf_r+0x188>
  406c2c:	2340      	movs	r3, #64	; 0x40
  406c2e:	1b80      	subs	r0, r0, r6
  406c30:	fa03 f000 	lsl.w	r0, r3, r0
  406c34:	9b04      	ldr	r3, [sp, #16]
  406c36:	4303      	orrs	r3, r0
  406c38:	3401      	adds	r4, #1
  406c3a:	9304      	str	r3, [sp, #16]
  406c3c:	f814 1b01 	ldrb.w	r1, [r4], #1
  406c40:	482d      	ldr	r0, [pc, #180]	; (406cf8 <_vfiprintf_r+0x244>)
  406c42:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
  406c46:	2206      	movs	r2, #6
  406c48:	f7ff fa12 	bl	406070 <memchr>
  406c4c:	2800      	cmp	r0, #0
  406c4e:	d03f      	beq.n	406cd0 <_vfiprintf_r+0x21c>
  406c50:	4b2a      	ldr	r3, [pc, #168]	; (406cfc <_vfiprintf_r+0x248>)
  406c52:	bb13      	cbnz	r3, 406c9a <_vfiprintf_r+0x1e6>
  406c54:	9b03      	ldr	r3, [sp, #12]
  406c56:	3307      	adds	r3, #7
  406c58:	f023 0307 	bic.w	r3, r3, #7
  406c5c:	3308      	adds	r3, #8
  406c5e:	9303      	str	r3, [sp, #12]
  406c60:	9b09      	ldr	r3, [sp, #36]	; 0x24
  406c62:	4443      	add	r3, r8
  406c64:	9309      	str	r3, [sp, #36]	; 0x24
  406c66:	e76e      	b.n	406b46 <_vfiprintf_r+0x92>
  406c68:	fb06 3202 	mla	r2, r6, r2, r3
  406c6c:	2001      	movs	r0, #1
  406c6e:	460c      	mov	r4, r1
  406c70:	e7a8      	b.n	406bc4 <_vfiprintf_r+0x110>
  406c72:	2300      	movs	r3, #0
  406c74:	3401      	adds	r4, #1
  406c76:	9305      	str	r3, [sp, #20]
  406c78:	4619      	mov	r1, r3
  406c7a:	260a      	movs	r6, #10
  406c7c:	4620      	mov	r0, r4
  406c7e:	f810 2b01 	ldrb.w	r2, [r0], #1
  406c82:	3a30      	subs	r2, #48	; 0x30
  406c84:	2a09      	cmp	r2, #9
  406c86:	d903      	bls.n	406c90 <_vfiprintf_r+0x1dc>
  406c88:	2b00      	cmp	r3, #0
  406c8a:	d0c8      	beq.n	406c1e <_vfiprintf_r+0x16a>
  406c8c:	9105      	str	r1, [sp, #20]
  406c8e:	e7c6      	b.n	406c1e <_vfiprintf_r+0x16a>
  406c90:	fb06 2101 	mla	r1, r6, r1, r2
  406c94:	2301      	movs	r3, #1
  406c96:	4604      	mov	r4, r0
  406c98:	e7f0      	b.n	406c7c <_vfiprintf_r+0x1c8>
  406c9a:	ab03      	add	r3, sp, #12
  406c9c:	9300      	str	r3, [sp, #0]
  406c9e:	462a      	mov	r2, r5
  406ca0:	4b17      	ldr	r3, [pc, #92]	; (406d00 <_vfiprintf_r+0x24c>)
  406ca2:	a904      	add	r1, sp, #16
  406ca4:	4638      	mov	r0, r7
  406ca6:	f7fc f993 	bl	402fd0 <_printf_float>
  406caa:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
  406cae:	4680      	mov	r8, r0
  406cb0:	d1d6      	bne.n	406c60 <_vfiprintf_r+0x1ac>
  406cb2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
  406cb4:	07d9      	lsls	r1, r3, #31
  406cb6:	d405      	bmi.n	406cc4 <_vfiprintf_r+0x210>
  406cb8:	89ab      	ldrh	r3, [r5, #12]
  406cba:	059a      	lsls	r2, r3, #22
  406cbc:	d402      	bmi.n	406cc4 <_vfiprintf_r+0x210>
  406cbe:	6da8      	ldr	r0, [r5, #88]	; 0x58
  406cc0:	f7ff f956 	bl	405f70 <__retarget_lock_release_recursive>
  406cc4:	89ab      	ldrh	r3, [r5, #12]
  406cc6:	065b      	lsls	r3, r3, #25
  406cc8:	f53f af1a 	bmi.w	406b00 <_vfiprintf_r+0x4c>
  406ccc:	9809      	ldr	r0, [sp, #36]	; 0x24
  406cce:	e719      	b.n	406b04 <_vfiprintf_r+0x50>
  406cd0:	ab03      	add	r3, sp, #12
  406cd2:	9300      	str	r3, [sp, #0]
  406cd4:	462a      	mov	r2, r5
  406cd6:	4b0a      	ldr	r3, [pc, #40]	; (406d00 <_vfiprintf_r+0x24c>)
  406cd8:	a904      	add	r1, sp, #16
  406cda:	4638      	mov	r0, r7
  406cdc:	f7fc fc10 	bl	403500 <_printf_i>
  406ce0:	e7e3      	b.n	406caa <_vfiprintf_r+0x1f6>
  406ce2:	bf00      	nop
  406ce4:	004085a8 	.word	0x004085a8
  406ce8:	004085c8 	.word	0x004085c8
  406cec:	00408588 	.word	0x00408588
  406cf0:	004086fc 	.word	0x004086fc
  406cf4:	00408702 	.word	0x00408702
  406cf8:	00408706 	.word	0x00408706
  406cfc:	00402fd1 	.word	0x00402fd1
  406d00:	00406a8f 	.word	0x00406a8f

00406d04 <nan>:
  406d04:	2000      	movs	r0, #0
  406d06:	4901      	ldr	r1, [pc, #4]	; (406d0c <nan+0x8>)
  406d08:	4770      	bx	lr
  406d0a:	bf00      	nop
  406d0c:	7ff80000 	.word	0x7ff80000

00406d10 <_sbrk_r>:
  406d10:	b538      	push	{r3, r4, r5, lr}
  406d12:	4c06      	ldr	r4, [pc, #24]	; (406d2c <_sbrk_r+0x1c>)
  406d14:	2300      	movs	r3, #0
  406d16:	4605      	mov	r5, r0
  406d18:	4608      	mov	r0, r1
  406d1a:	6023      	str	r3, [r4, #0]
  406d1c:	f7fb fcca 	bl	4026b4 <_sbrk>
  406d20:	1c43      	adds	r3, r0, #1
  406d22:	d102      	bne.n	406d2a <_sbrk_r+0x1a>
  406d24:	6823      	ldr	r3, [r4, #0]
  406d26:	b103      	cbz	r3, 406d2a <_sbrk_r+0x1a>
  406d28:	602b      	str	r3, [r5, #0]
  406d2a:	bd38      	pop	{r3, r4, r5, pc}
  406d2c:	200008b0 	.word	0x200008b0

00406d30 <__sread>:
  406d30:	b510      	push	{r4, lr}
  406d32:	460c      	mov	r4, r1
  406d34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406d38:	f000 f8be 	bl	406eb8 <_read_r>
  406d3c:	2800      	cmp	r0, #0
  406d3e:	bfab      	itete	ge
  406d40:	6d63      	ldrge	r3, [r4, #84]	; 0x54
  406d42:	89a3      	ldrhlt	r3, [r4, #12]
  406d44:	181b      	addge	r3, r3, r0
  406d46:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
  406d4a:	bfac      	ite	ge
  406d4c:	6563      	strge	r3, [r4, #84]	; 0x54
  406d4e:	81a3      	strhlt	r3, [r4, #12]
  406d50:	bd10      	pop	{r4, pc}

00406d52 <__swrite>:
  406d52:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  406d56:	461f      	mov	r7, r3
  406d58:	898b      	ldrh	r3, [r1, #12]
  406d5a:	05db      	lsls	r3, r3, #23
  406d5c:	4605      	mov	r5, r0
  406d5e:	460c      	mov	r4, r1
  406d60:	4616      	mov	r6, r2
  406d62:	d505      	bpl.n	406d70 <__swrite+0x1e>
  406d64:	2302      	movs	r3, #2
  406d66:	2200      	movs	r2, #0
  406d68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406d6c:	f000 f886 	bl	406e7c <_lseek_r>
  406d70:	89a3      	ldrh	r3, [r4, #12]
  406d72:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
  406d76:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
  406d7a:	81a3      	strh	r3, [r4, #12]
  406d7c:	4632      	mov	r2, r6
  406d7e:	463b      	mov	r3, r7
  406d80:	4628      	mov	r0, r5
  406d82:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  406d86:	f000 b835 	b.w	406df4 <_write_r>

00406d8a <__sseek>:
  406d8a:	b510      	push	{r4, lr}
  406d8c:	460c      	mov	r4, r1
  406d8e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406d92:	f000 f873 	bl	406e7c <_lseek_r>
  406d96:	1c43      	adds	r3, r0, #1
  406d98:	89a3      	ldrh	r3, [r4, #12]
  406d9a:	bf15      	itete	ne
  406d9c:	6560      	strne	r0, [r4, #84]	; 0x54
  406d9e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
  406da2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
  406da6:	81a3      	strheq	r3, [r4, #12]
  406da8:	bf18      	it	ne
  406daa:	81a3      	strhne	r3, [r4, #12]
  406dac:	bd10      	pop	{r4, pc}

00406dae <__sclose>:
  406dae:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
  406db2:	f000 b831 	b.w	406e18 <_close_r>

00406db6 <strncmp>:
  406db6:	b510      	push	{r4, lr}
  406db8:	b16a      	cbz	r2, 406dd6 <strncmp+0x20>
  406dba:	3901      	subs	r1, #1
  406dbc:	1884      	adds	r4, r0, r2
  406dbe:	f810 3b01 	ldrb.w	r3, [r0], #1
  406dc2:	f811 2f01 	ldrb.w	r2, [r1, #1]!
  406dc6:	4293      	cmp	r3, r2
  406dc8:	d103      	bne.n	406dd2 <strncmp+0x1c>
  406dca:	42a0      	cmp	r0, r4
  406dcc:	d001      	beq.n	406dd2 <strncmp+0x1c>
  406dce:	2b00      	cmp	r3, #0
  406dd0:	d1f5      	bne.n	406dbe <strncmp+0x8>
  406dd2:	1a98      	subs	r0, r3, r2
  406dd4:	bd10      	pop	{r4, pc}
  406dd6:	4610      	mov	r0, r2
  406dd8:	e7fc      	b.n	406dd4 <strncmp+0x1e>

00406dda <__ascii_wctomb>:
  406dda:	b149      	cbz	r1, 406df0 <__ascii_wctomb+0x16>
  406ddc:	2aff      	cmp	r2, #255	; 0xff
  406dde:	bf85      	ittet	hi
  406de0:	238a      	movhi	r3, #138	; 0x8a
  406de2:	6003      	strhi	r3, [r0, #0]
  406de4:	700a      	strbls	r2, [r1, #0]
  406de6:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
  406dea:	bf98      	it	ls
  406dec:	2001      	movls	r0, #1
  406dee:	4770      	bx	lr
  406df0:	4608      	mov	r0, r1
  406df2:	4770      	bx	lr

00406df4 <_write_r>:
  406df4:	b538      	push	{r3, r4, r5, lr}
  406df6:	4c07      	ldr	r4, [pc, #28]	; (406e14 <_write_r+0x20>)
  406df8:	4605      	mov	r5, r0
  406dfa:	4608      	mov	r0, r1
  406dfc:	4611      	mov	r1, r2
  406dfe:	2200      	movs	r2, #0
  406e00:	6022      	str	r2, [r4, #0]
  406e02:	461a      	mov	r2, r3
  406e04:	f7f9 f9c4 	bl	400190 <_write>
  406e08:	1c43      	adds	r3, r0, #1
  406e0a:	d102      	bne.n	406e12 <_write_r+0x1e>
  406e0c:	6823      	ldr	r3, [r4, #0]
  406e0e:	b103      	cbz	r3, 406e12 <_write_r+0x1e>
  406e10:	602b      	str	r3, [r5, #0]
  406e12:	bd38      	pop	{r3, r4, r5, pc}
  406e14:	200008b0 	.word	0x200008b0

00406e18 <_close_r>:
  406e18:	b538      	push	{r3, r4, r5, lr}
  406e1a:	4c06      	ldr	r4, [pc, #24]	; (406e34 <_close_r+0x1c>)
  406e1c:	2300      	movs	r3, #0
  406e1e:	4605      	mov	r5, r0
  406e20:	4608      	mov	r0, r1
  406e22:	6023      	str	r3, [r4, #0]
  406e24:	f7fb fc60 	bl	4026e8 <_close>
  406e28:	1c43      	adds	r3, r0, #1
  406e2a:	d102      	bne.n	406e32 <_close_r+0x1a>
  406e2c:	6823      	ldr	r3, [r4, #0]
  406e2e:	b103      	cbz	r3, 406e32 <_close_r+0x1a>
  406e30:	602b      	str	r3, [r5, #0]
  406e32:	bd38      	pop	{r3, r4, r5, pc}
  406e34:	200008b0 	.word	0x200008b0

00406e38 <_fstat_r>:
  406e38:	b538      	push	{r3, r4, r5, lr}
  406e3a:	4c07      	ldr	r4, [pc, #28]	; (406e58 <_fstat_r+0x20>)
  406e3c:	2300      	movs	r3, #0
  406e3e:	4605      	mov	r5, r0
  406e40:	4608      	mov	r0, r1
  406e42:	4611      	mov	r1, r2
  406e44:	6023      	str	r3, [r4, #0]
  406e46:	f7fb fc52 	bl	4026ee <_fstat>
  406e4a:	1c43      	adds	r3, r0, #1
  406e4c:	d102      	bne.n	406e54 <_fstat_r+0x1c>
  406e4e:	6823      	ldr	r3, [r4, #0]
  406e50:	b103      	cbz	r3, 406e54 <_fstat_r+0x1c>
  406e52:	602b      	str	r3, [r5, #0]
  406e54:	bd38      	pop	{r3, r4, r5, pc}
  406e56:	bf00      	nop
  406e58:	200008b0 	.word	0x200008b0

00406e5c <_isatty_r>:
  406e5c:	b538      	push	{r3, r4, r5, lr}
  406e5e:	4c06      	ldr	r4, [pc, #24]	; (406e78 <_isatty_r+0x1c>)
  406e60:	2300      	movs	r3, #0
  406e62:	4605      	mov	r5, r0
  406e64:	4608      	mov	r0, r1
  406e66:	6023      	str	r3, [r4, #0]
  406e68:	f7fb fc46 	bl	4026f8 <_isatty>
  406e6c:	1c43      	adds	r3, r0, #1
  406e6e:	d102      	bne.n	406e76 <_isatty_r+0x1a>
  406e70:	6823      	ldr	r3, [r4, #0]
  406e72:	b103      	cbz	r3, 406e76 <_isatty_r+0x1a>
  406e74:	602b      	str	r3, [r5, #0]
  406e76:	bd38      	pop	{r3, r4, r5, pc}
  406e78:	200008b0 	.word	0x200008b0

00406e7c <_lseek_r>:
  406e7c:	b538      	push	{r3, r4, r5, lr}
  406e7e:	4c07      	ldr	r4, [pc, #28]	; (406e9c <_lseek_r+0x20>)
  406e80:	4605      	mov	r5, r0
  406e82:	4608      	mov	r0, r1
  406e84:	4611      	mov	r1, r2
  406e86:	2200      	movs	r2, #0
  406e88:	6022      	str	r2, [r4, #0]
  406e8a:	461a      	mov	r2, r3
  406e8c:	f7fb fc36 	bl	4026fc <_lseek>
  406e90:	1c43      	adds	r3, r0, #1
  406e92:	d102      	bne.n	406e9a <_lseek_r+0x1e>
  406e94:	6823      	ldr	r3, [r4, #0]
  406e96:	b103      	cbz	r3, 406e9a <_lseek_r+0x1e>
  406e98:	602b      	str	r3, [r5, #0]
  406e9a:	bd38      	pop	{r3, r4, r5, pc}
  406e9c:	200008b0 	.word	0x200008b0

00406ea0 <__malloc_lock>:
  406ea0:	4801      	ldr	r0, [pc, #4]	; (406ea8 <__malloc_lock+0x8>)
  406ea2:	f7ff b864 	b.w	405f6e <__retarget_lock_acquire_recursive>
  406ea6:	bf00      	nop
  406ea8:	200008a8 	.word	0x200008a8

00406eac <__malloc_unlock>:
  406eac:	4801      	ldr	r0, [pc, #4]	; (406eb4 <__malloc_unlock+0x8>)
  406eae:	f7ff b85f 	b.w	405f70 <__retarget_lock_release_recursive>
  406eb2:	bf00      	nop
  406eb4:	200008a8 	.word	0x200008a8

00406eb8 <_read_r>:
  406eb8:	b538      	push	{r3, r4, r5, lr}
  406eba:	4c07      	ldr	r4, [pc, #28]	; (406ed8 <_read_r+0x20>)
  406ebc:	4605      	mov	r5, r0
  406ebe:	4608      	mov	r0, r1
  406ec0:	4611      	mov	r1, r2
  406ec2:	2200      	movs	r2, #0
  406ec4:	6022      	str	r2, [r4, #0]
  406ec6:	461a      	mov	r2, r3
  406ec8:	f7f9 f944 	bl	400154 <_read>
  406ecc:	1c43      	adds	r3, r0, #1
  406ece:	d102      	bne.n	406ed6 <_read_r+0x1e>
  406ed0:	6823      	ldr	r3, [r4, #0]
  406ed2:	b103      	cbz	r3, 406ed6 <_read_r+0x1e>
  406ed4:	602b      	str	r3, [r5, #0]
  406ed6:	bd38      	pop	{r3, r4, r5, pc}
  406ed8:	200008b0 	.word	0x200008b0

00406edc <__aeabi_drsub>:
  406edc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  406ee0:	e002      	b.n	406ee8 <__adddf3>
  406ee2:	bf00      	nop

00406ee4 <__aeabi_dsub>:
  406ee4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00406ee8 <__adddf3>:
  406ee8:	b530      	push	{r4, r5, lr}
  406eea:	ea4f 0441 	mov.w	r4, r1, lsl #1
  406eee:	ea4f 0543 	mov.w	r5, r3, lsl #1
  406ef2:	ea94 0f05 	teq	r4, r5
  406ef6:	bf08      	it	eq
  406ef8:	ea90 0f02 	teqeq	r0, r2
  406efc:	bf1f      	itttt	ne
  406efe:	ea54 0c00 	orrsne.w	ip, r4, r0
  406f02:	ea55 0c02 	orrsne.w	ip, r5, r2
  406f06:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  406f0a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  406f0e:	f000 80e2 	beq.w	4070d6 <__adddf3+0x1ee>
  406f12:	ea4f 5454 	mov.w	r4, r4, lsr #21
  406f16:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  406f1a:	bfb8      	it	lt
  406f1c:	426d      	neglt	r5, r5
  406f1e:	dd0c      	ble.n	406f3a <__adddf3+0x52>
  406f20:	442c      	add	r4, r5
  406f22:	ea80 0202 	eor.w	r2, r0, r2
  406f26:	ea81 0303 	eor.w	r3, r1, r3
  406f2a:	ea82 0000 	eor.w	r0, r2, r0
  406f2e:	ea83 0101 	eor.w	r1, r3, r1
  406f32:	ea80 0202 	eor.w	r2, r0, r2
  406f36:	ea81 0303 	eor.w	r3, r1, r3
  406f3a:	2d36      	cmp	r5, #54	; 0x36
  406f3c:	bf88      	it	hi
  406f3e:	bd30      	pophi	{r4, r5, pc}
  406f40:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  406f44:	ea4f 3101 	mov.w	r1, r1, lsl #12
  406f48:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  406f4c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  406f50:	d002      	beq.n	406f58 <__adddf3+0x70>
  406f52:	4240      	negs	r0, r0
  406f54:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  406f58:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  406f5c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  406f60:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  406f64:	d002      	beq.n	406f6c <__adddf3+0x84>
  406f66:	4252      	negs	r2, r2
  406f68:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  406f6c:	ea94 0f05 	teq	r4, r5
  406f70:	f000 80a7 	beq.w	4070c2 <__adddf3+0x1da>
  406f74:	f1a4 0401 	sub.w	r4, r4, #1
  406f78:	f1d5 0e20 	rsbs	lr, r5, #32
  406f7c:	db0d      	blt.n	406f9a <__adddf3+0xb2>
  406f7e:	fa02 fc0e 	lsl.w	ip, r2, lr
  406f82:	fa22 f205 	lsr.w	r2, r2, r5
  406f86:	1880      	adds	r0, r0, r2
  406f88:	f141 0100 	adc.w	r1, r1, #0
  406f8c:	fa03 f20e 	lsl.w	r2, r3, lr
  406f90:	1880      	adds	r0, r0, r2
  406f92:	fa43 f305 	asr.w	r3, r3, r5
  406f96:	4159      	adcs	r1, r3
  406f98:	e00e      	b.n	406fb8 <__adddf3+0xd0>
  406f9a:	f1a5 0520 	sub.w	r5, r5, #32
  406f9e:	f10e 0e20 	add.w	lr, lr, #32
  406fa2:	2a01      	cmp	r2, #1
  406fa4:	fa03 fc0e 	lsl.w	ip, r3, lr
  406fa8:	bf28      	it	cs
  406faa:	f04c 0c02 	orrcs.w	ip, ip, #2
  406fae:	fa43 f305 	asr.w	r3, r3, r5
  406fb2:	18c0      	adds	r0, r0, r3
  406fb4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  406fb8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  406fbc:	d507      	bpl.n	406fce <__adddf3+0xe6>
  406fbe:	f04f 0e00 	mov.w	lr, #0
  406fc2:	f1dc 0c00 	rsbs	ip, ip, #0
  406fc6:	eb7e 0000 	sbcs.w	r0, lr, r0
  406fca:	eb6e 0101 	sbc.w	r1, lr, r1
  406fce:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  406fd2:	d31b      	bcc.n	40700c <__adddf3+0x124>
  406fd4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  406fd8:	d30c      	bcc.n	406ff4 <__adddf3+0x10c>
  406fda:	0849      	lsrs	r1, r1, #1
  406fdc:	ea5f 0030 	movs.w	r0, r0, rrx
  406fe0:	ea4f 0c3c 	mov.w	ip, ip, rrx
  406fe4:	f104 0401 	add.w	r4, r4, #1
  406fe8:	ea4f 5244 	mov.w	r2, r4, lsl #21
  406fec:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  406ff0:	f080 809a 	bcs.w	407128 <__adddf3+0x240>
  406ff4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  406ff8:	bf08      	it	eq
  406ffa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  406ffe:	f150 0000 	adcs.w	r0, r0, #0
  407002:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407006:	ea41 0105 	orr.w	r1, r1, r5
  40700a:	bd30      	pop	{r4, r5, pc}
  40700c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  407010:	4140      	adcs	r0, r0
  407012:	eb41 0101 	adc.w	r1, r1, r1
  407016:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  40701a:	f1a4 0401 	sub.w	r4, r4, #1
  40701e:	d1e9      	bne.n	406ff4 <__adddf3+0x10c>
  407020:	f091 0f00 	teq	r1, #0
  407024:	bf04      	itt	eq
  407026:	4601      	moveq	r1, r0
  407028:	2000      	moveq	r0, #0
  40702a:	fab1 f381 	clz	r3, r1
  40702e:	bf08      	it	eq
  407030:	3320      	addeq	r3, #32
  407032:	f1a3 030b 	sub.w	r3, r3, #11
  407036:	f1b3 0220 	subs.w	r2, r3, #32
  40703a:	da0c      	bge.n	407056 <__adddf3+0x16e>
  40703c:	320c      	adds	r2, #12
  40703e:	dd08      	ble.n	407052 <__adddf3+0x16a>
  407040:	f102 0c14 	add.w	ip, r2, #20
  407044:	f1c2 020c 	rsb	r2, r2, #12
  407048:	fa01 f00c 	lsl.w	r0, r1, ip
  40704c:	fa21 f102 	lsr.w	r1, r1, r2
  407050:	e00c      	b.n	40706c <__adddf3+0x184>
  407052:	f102 0214 	add.w	r2, r2, #20
  407056:	bfd8      	it	le
  407058:	f1c2 0c20 	rsble	ip, r2, #32
  40705c:	fa01 f102 	lsl.w	r1, r1, r2
  407060:	fa20 fc0c 	lsr.w	ip, r0, ip
  407064:	bfdc      	itt	le
  407066:	ea41 010c 	orrle.w	r1, r1, ip
  40706a:	4090      	lslle	r0, r2
  40706c:	1ae4      	subs	r4, r4, r3
  40706e:	bfa2      	ittt	ge
  407070:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  407074:	4329      	orrge	r1, r5
  407076:	bd30      	popge	{r4, r5, pc}
  407078:	ea6f 0404 	mvn.w	r4, r4
  40707c:	3c1f      	subs	r4, #31
  40707e:	da1c      	bge.n	4070ba <__adddf3+0x1d2>
  407080:	340c      	adds	r4, #12
  407082:	dc0e      	bgt.n	4070a2 <__adddf3+0x1ba>
  407084:	f104 0414 	add.w	r4, r4, #20
  407088:	f1c4 0220 	rsb	r2, r4, #32
  40708c:	fa20 f004 	lsr.w	r0, r0, r4
  407090:	fa01 f302 	lsl.w	r3, r1, r2
  407094:	ea40 0003 	orr.w	r0, r0, r3
  407098:	fa21 f304 	lsr.w	r3, r1, r4
  40709c:	ea45 0103 	orr.w	r1, r5, r3
  4070a0:	bd30      	pop	{r4, r5, pc}
  4070a2:	f1c4 040c 	rsb	r4, r4, #12
  4070a6:	f1c4 0220 	rsb	r2, r4, #32
  4070aa:	fa20 f002 	lsr.w	r0, r0, r2
  4070ae:	fa01 f304 	lsl.w	r3, r1, r4
  4070b2:	ea40 0003 	orr.w	r0, r0, r3
  4070b6:	4629      	mov	r1, r5
  4070b8:	bd30      	pop	{r4, r5, pc}
  4070ba:	fa21 f004 	lsr.w	r0, r1, r4
  4070be:	4629      	mov	r1, r5
  4070c0:	bd30      	pop	{r4, r5, pc}
  4070c2:	f094 0f00 	teq	r4, #0
  4070c6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  4070ca:	bf06      	itte	eq
  4070cc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  4070d0:	3401      	addeq	r4, #1
  4070d2:	3d01      	subne	r5, #1
  4070d4:	e74e      	b.n	406f74 <__adddf3+0x8c>
  4070d6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4070da:	bf18      	it	ne
  4070dc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4070e0:	d029      	beq.n	407136 <__adddf3+0x24e>
  4070e2:	ea94 0f05 	teq	r4, r5
  4070e6:	bf08      	it	eq
  4070e8:	ea90 0f02 	teqeq	r0, r2
  4070ec:	d005      	beq.n	4070fa <__adddf3+0x212>
  4070ee:	ea54 0c00 	orrs.w	ip, r4, r0
  4070f2:	bf04      	itt	eq
  4070f4:	4619      	moveq	r1, r3
  4070f6:	4610      	moveq	r0, r2
  4070f8:	bd30      	pop	{r4, r5, pc}
  4070fa:	ea91 0f03 	teq	r1, r3
  4070fe:	bf1e      	ittt	ne
  407100:	2100      	movne	r1, #0
  407102:	2000      	movne	r0, #0
  407104:	bd30      	popne	{r4, r5, pc}
  407106:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  40710a:	d105      	bne.n	407118 <__adddf3+0x230>
  40710c:	0040      	lsls	r0, r0, #1
  40710e:	4149      	adcs	r1, r1
  407110:	bf28      	it	cs
  407112:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  407116:	bd30      	pop	{r4, r5, pc}
  407118:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  40711c:	bf3c      	itt	cc
  40711e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  407122:	bd30      	popcc	{r4, r5, pc}
  407124:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  407128:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  40712c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407130:	f04f 0000 	mov.w	r0, #0
  407134:	bd30      	pop	{r4, r5, pc}
  407136:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  40713a:	bf1a      	itte	ne
  40713c:	4619      	movne	r1, r3
  40713e:	4610      	movne	r0, r2
  407140:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  407144:	bf1c      	itt	ne
  407146:	460b      	movne	r3, r1
  407148:	4602      	movne	r2, r0
  40714a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  40714e:	bf06      	itte	eq
  407150:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  407154:	ea91 0f03 	teqeq	r1, r3
  407158:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  40715c:	bd30      	pop	{r4, r5, pc}
  40715e:	bf00      	nop

00407160 <__aeabi_ui2d>:
  407160:	f090 0f00 	teq	r0, #0
  407164:	bf04      	itt	eq
  407166:	2100      	moveq	r1, #0
  407168:	4770      	bxeq	lr
  40716a:	b530      	push	{r4, r5, lr}
  40716c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407170:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407174:	f04f 0500 	mov.w	r5, #0
  407178:	f04f 0100 	mov.w	r1, #0
  40717c:	e750      	b.n	407020 <__adddf3+0x138>
  40717e:	bf00      	nop

00407180 <__aeabi_i2d>:
  407180:	f090 0f00 	teq	r0, #0
  407184:	bf04      	itt	eq
  407186:	2100      	moveq	r1, #0
  407188:	4770      	bxeq	lr
  40718a:	b530      	push	{r4, r5, lr}
  40718c:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407190:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407194:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  407198:	bf48      	it	mi
  40719a:	4240      	negmi	r0, r0
  40719c:	f04f 0100 	mov.w	r1, #0
  4071a0:	e73e      	b.n	407020 <__adddf3+0x138>
  4071a2:	bf00      	nop

004071a4 <__aeabi_f2d>:
  4071a4:	0042      	lsls	r2, r0, #1
  4071a6:	ea4f 01e2 	mov.w	r1, r2, asr #3
  4071aa:	ea4f 0131 	mov.w	r1, r1, rrx
  4071ae:	ea4f 7002 	mov.w	r0, r2, lsl #28
  4071b2:	bf1f      	itttt	ne
  4071b4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  4071b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  4071bc:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  4071c0:	4770      	bxne	lr
  4071c2:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
  4071c6:	bf08      	it	eq
  4071c8:	4770      	bxeq	lr
  4071ca:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
  4071ce:	bf04      	itt	eq
  4071d0:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
  4071d4:	4770      	bxeq	lr
  4071d6:	b530      	push	{r4, r5, lr}
  4071d8:	f44f 7460 	mov.w	r4, #896	; 0x380
  4071dc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4071e0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  4071e4:	e71c      	b.n	407020 <__adddf3+0x138>
  4071e6:	bf00      	nop

004071e8 <__aeabi_ul2d>:
  4071e8:	ea50 0201 	orrs.w	r2, r0, r1
  4071ec:	bf08      	it	eq
  4071ee:	4770      	bxeq	lr
  4071f0:	b530      	push	{r4, r5, lr}
  4071f2:	f04f 0500 	mov.w	r5, #0
  4071f6:	e00a      	b.n	40720e <__aeabi_l2d+0x16>

004071f8 <__aeabi_l2d>:
  4071f8:	ea50 0201 	orrs.w	r2, r0, r1
  4071fc:	bf08      	it	eq
  4071fe:	4770      	bxeq	lr
  407200:	b530      	push	{r4, r5, lr}
  407202:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  407206:	d502      	bpl.n	40720e <__aeabi_l2d+0x16>
  407208:	4240      	negs	r0, r0
  40720a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  40720e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  407212:	f104 0432 	add.w	r4, r4, #50	; 0x32
  407216:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  40721a:	f43f aed8 	beq.w	406fce <__adddf3+0xe6>
  40721e:	f04f 0203 	mov.w	r2, #3
  407222:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  407226:	bf18      	it	ne
  407228:	3203      	addne	r2, #3
  40722a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  40722e:	bf18      	it	ne
  407230:	3203      	addne	r2, #3
  407232:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  407236:	f1c2 0320 	rsb	r3, r2, #32
  40723a:	fa00 fc03 	lsl.w	ip, r0, r3
  40723e:	fa20 f002 	lsr.w	r0, r0, r2
  407242:	fa01 fe03 	lsl.w	lr, r1, r3
  407246:	ea40 000e 	orr.w	r0, r0, lr
  40724a:	fa21 f102 	lsr.w	r1, r1, r2
  40724e:	4414      	add	r4, r2
  407250:	e6bd      	b.n	406fce <__adddf3+0xe6>
  407252:	bf00      	nop

00407254 <__aeabi_dmul>:
  407254:	b570      	push	{r4, r5, r6, lr}
  407256:	f04f 0cff 	mov.w	ip, #255	; 0xff
  40725a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  40725e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  407262:	bf1d      	ittte	ne
  407264:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  407268:	ea94 0f0c 	teqne	r4, ip
  40726c:	ea95 0f0c 	teqne	r5, ip
  407270:	f000 f8de 	bleq	407430 <__aeabi_dmul+0x1dc>
  407274:	442c      	add	r4, r5
  407276:	ea81 0603 	eor.w	r6, r1, r3
  40727a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  40727e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  407282:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  407286:	bf18      	it	ne
  407288:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  40728c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407290:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  407294:	d038      	beq.n	407308 <__aeabi_dmul+0xb4>
  407296:	fba0 ce02 	umull	ip, lr, r0, r2
  40729a:	f04f 0500 	mov.w	r5, #0
  40729e:	fbe1 e502 	umlal	lr, r5, r1, r2
  4072a2:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  4072a6:	fbe0 e503 	umlal	lr, r5, r0, r3
  4072aa:	f04f 0600 	mov.w	r6, #0
  4072ae:	fbe1 5603 	umlal	r5, r6, r1, r3
  4072b2:	f09c 0f00 	teq	ip, #0
  4072b6:	bf18      	it	ne
  4072b8:	f04e 0e01 	orrne.w	lr, lr, #1
  4072bc:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  4072c0:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  4072c4:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  4072c8:	d204      	bcs.n	4072d4 <__aeabi_dmul+0x80>
  4072ca:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  4072ce:	416d      	adcs	r5, r5
  4072d0:	eb46 0606 	adc.w	r6, r6, r6
  4072d4:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  4072d8:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  4072dc:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  4072e0:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  4072e4:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  4072e8:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4072ec:	bf88      	it	hi
  4072ee:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4072f2:	d81e      	bhi.n	407332 <__aeabi_dmul+0xde>
  4072f4:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  4072f8:	bf08      	it	eq
  4072fa:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  4072fe:	f150 0000 	adcs.w	r0, r0, #0
  407302:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  407306:	bd70      	pop	{r4, r5, r6, pc}
  407308:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  40730c:	ea46 0101 	orr.w	r1, r6, r1
  407310:	ea40 0002 	orr.w	r0, r0, r2
  407314:	ea81 0103 	eor.w	r1, r1, r3
  407318:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  40731c:	bfc2      	ittt	gt
  40731e:	ebd4 050c 	rsbsgt	r5, r4, ip
  407322:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407326:	bd70      	popgt	{r4, r5, r6, pc}
  407328:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40732c:	f04f 0e00 	mov.w	lr, #0
  407330:	3c01      	subs	r4, #1
  407332:	f300 80ab 	bgt.w	40748c <__aeabi_dmul+0x238>
  407336:	f114 0f36 	cmn.w	r4, #54	; 0x36
  40733a:	bfde      	ittt	le
  40733c:	2000      	movle	r0, #0
  40733e:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  407342:	bd70      	pople	{r4, r5, r6, pc}
  407344:	f1c4 0400 	rsb	r4, r4, #0
  407348:	3c20      	subs	r4, #32
  40734a:	da35      	bge.n	4073b8 <__aeabi_dmul+0x164>
  40734c:	340c      	adds	r4, #12
  40734e:	dc1b      	bgt.n	407388 <__aeabi_dmul+0x134>
  407350:	f104 0414 	add.w	r4, r4, #20
  407354:	f1c4 0520 	rsb	r5, r4, #32
  407358:	fa00 f305 	lsl.w	r3, r0, r5
  40735c:	fa20 f004 	lsr.w	r0, r0, r4
  407360:	fa01 f205 	lsl.w	r2, r1, r5
  407364:	ea40 0002 	orr.w	r0, r0, r2
  407368:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  40736c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  407370:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  407374:	fa21 f604 	lsr.w	r6, r1, r4
  407378:	eb42 0106 	adc.w	r1, r2, r6
  40737c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  407380:	bf08      	it	eq
  407382:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  407386:	bd70      	pop	{r4, r5, r6, pc}
  407388:	f1c4 040c 	rsb	r4, r4, #12
  40738c:	f1c4 0520 	rsb	r5, r4, #32
  407390:	fa00 f304 	lsl.w	r3, r0, r4
  407394:	fa20 f005 	lsr.w	r0, r0, r5
  407398:	fa01 f204 	lsl.w	r2, r1, r4
  40739c:	ea40 0002 	orr.w	r0, r0, r2
  4073a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4073a4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  4073a8:	f141 0100 	adc.w	r1, r1, #0
  4073ac:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4073b0:	bf08      	it	eq
  4073b2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4073b6:	bd70      	pop	{r4, r5, r6, pc}
  4073b8:	f1c4 0520 	rsb	r5, r4, #32
  4073bc:	fa00 f205 	lsl.w	r2, r0, r5
  4073c0:	ea4e 0e02 	orr.w	lr, lr, r2
  4073c4:	fa20 f304 	lsr.w	r3, r0, r4
  4073c8:	fa01 f205 	lsl.w	r2, r1, r5
  4073cc:	ea43 0302 	orr.w	r3, r3, r2
  4073d0:	fa21 f004 	lsr.w	r0, r1, r4
  4073d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  4073d8:	fa21 f204 	lsr.w	r2, r1, r4
  4073dc:	ea20 0002 	bic.w	r0, r0, r2
  4073e0:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  4073e4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  4073e8:	bf08      	it	eq
  4073ea:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  4073ee:	bd70      	pop	{r4, r5, r6, pc}
  4073f0:	f094 0f00 	teq	r4, #0
  4073f4:	d10f      	bne.n	407416 <__aeabi_dmul+0x1c2>
  4073f6:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  4073fa:	0040      	lsls	r0, r0, #1
  4073fc:	eb41 0101 	adc.w	r1, r1, r1
  407400:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  407404:	bf08      	it	eq
  407406:	3c01      	subeq	r4, #1
  407408:	d0f7      	beq.n	4073fa <__aeabi_dmul+0x1a6>
  40740a:	ea41 0106 	orr.w	r1, r1, r6
  40740e:	f095 0f00 	teq	r5, #0
  407412:	bf18      	it	ne
  407414:	4770      	bxne	lr
  407416:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  40741a:	0052      	lsls	r2, r2, #1
  40741c:	eb43 0303 	adc.w	r3, r3, r3
  407420:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  407424:	bf08      	it	eq
  407426:	3d01      	subeq	r5, #1
  407428:	d0f7      	beq.n	40741a <__aeabi_dmul+0x1c6>
  40742a:	ea43 0306 	orr.w	r3, r3, r6
  40742e:	4770      	bx	lr
  407430:	ea94 0f0c 	teq	r4, ip
  407434:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  407438:	bf18      	it	ne
  40743a:	ea95 0f0c 	teqne	r5, ip
  40743e:	d00c      	beq.n	40745a <__aeabi_dmul+0x206>
  407440:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  407444:	bf18      	it	ne
  407446:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  40744a:	d1d1      	bne.n	4073f0 <__aeabi_dmul+0x19c>
  40744c:	ea81 0103 	eor.w	r1, r1, r3
  407450:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407454:	f04f 0000 	mov.w	r0, #0
  407458:	bd70      	pop	{r4, r5, r6, pc}
  40745a:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40745e:	bf06      	itte	eq
  407460:	4610      	moveq	r0, r2
  407462:	4619      	moveq	r1, r3
  407464:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407468:	d019      	beq.n	40749e <__aeabi_dmul+0x24a>
  40746a:	ea94 0f0c 	teq	r4, ip
  40746e:	d102      	bne.n	407476 <__aeabi_dmul+0x222>
  407470:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  407474:	d113      	bne.n	40749e <__aeabi_dmul+0x24a>
  407476:	ea95 0f0c 	teq	r5, ip
  40747a:	d105      	bne.n	407488 <__aeabi_dmul+0x234>
  40747c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  407480:	bf1c      	itt	ne
  407482:	4610      	movne	r0, r2
  407484:	4619      	movne	r1, r3
  407486:	d10a      	bne.n	40749e <__aeabi_dmul+0x24a>
  407488:	ea81 0103 	eor.w	r1, r1, r3
  40748c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  407490:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  407494:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  407498:	f04f 0000 	mov.w	r0, #0
  40749c:	bd70      	pop	{r4, r5, r6, pc}
  40749e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  4074a2:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  4074a6:	bd70      	pop	{r4, r5, r6, pc}

004074a8 <__aeabi_ddiv>:
  4074a8:	b570      	push	{r4, r5, r6, lr}
  4074aa:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4074ae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4074b2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  4074b6:	bf1d      	ittte	ne
  4074b8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  4074bc:	ea94 0f0c 	teqne	r4, ip
  4074c0:	ea95 0f0c 	teqne	r5, ip
  4074c4:	f000 f8a7 	bleq	407616 <__aeabi_ddiv+0x16e>
  4074c8:	eba4 0405 	sub.w	r4, r4, r5
  4074cc:	ea81 0e03 	eor.w	lr, r1, r3
  4074d0:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  4074d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4074d8:	f000 8088 	beq.w	4075ec <__aeabi_ddiv+0x144>
  4074dc:	ea4f 3303 	mov.w	r3, r3, lsl #12
  4074e0:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  4074e4:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  4074e8:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  4074ec:	ea4f 2202 	mov.w	r2, r2, lsl #8
  4074f0:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  4074f4:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  4074f8:	ea4f 2600 	mov.w	r6, r0, lsl #8
  4074fc:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  407500:	429d      	cmp	r5, r3
  407502:	bf08      	it	eq
  407504:	4296      	cmpeq	r6, r2
  407506:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  40750a:	f504 7440 	add.w	r4, r4, #768	; 0x300
  40750e:	d202      	bcs.n	407516 <__aeabi_ddiv+0x6e>
  407510:	085b      	lsrs	r3, r3, #1
  407512:	ea4f 0232 	mov.w	r2, r2, rrx
  407516:	1ab6      	subs	r6, r6, r2
  407518:	eb65 0503 	sbc.w	r5, r5, r3
  40751c:	085b      	lsrs	r3, r3, #1
  40751e:	ea4f 0232 	mov.w	r2, r2, rrx
  407522:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  407526:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  40752a:	ebb6 0e02 	subs.w	lr, r6, r2
  40752e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407532:	bf22      	ittt	cs
  407534:	1ab6      	subcs	r6, r6, r2
  407536:	4675      	movcs	r5, lr
  407538:	ea40 000c 	orrcs.w	r0, r0, ip
  40753c:	085b      	lsrs	r3, r3, #1
  40753e:	ea4f 0232 	mov.w	r2, r2, rrx
  407542:	ebb6 0e02 	subs.w	lr, r6, r2
  407546:	eb75 0e03 	sbcs.w	lr, r5, r3
  40754a:	bf22      	ittt	cs
  40754c:	1ab6      	subcs	r6, r6, r2
  40754e:	4675      	movcs	r5, lr
  407550:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  407554:	085b      	lsrs	r3, r3, #1
  407556:	ea4f 0232 	mov.w	r2, r2, rrx
  40755a:	ebb6 0e02 	subs.w	lr, r6, r2
  40755e:	eb75 0e03 	sbcs.w	lr, r5, r3
  407562:	bf22      	ittt	cs
  407564:	1ab6      	subcs	r6, r6, r2
  407566:	4675      	movcs	r5, lr
  407568:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  40756c:	085b      	lsrs	r3, r3, #1
  40756e:	ea4f 0232 	mov.w	r2, r2, rrx
  407572:	ebb6 0e02 	subs.w	lr, r6, r2
  407576:	eb75 0e03 	sbcs.w	lr, r5, r3
  40757a:	bf22      	ittt	cs
  40757c:	1ab6      	subcs	r6, r6, r2
  40757e:	4675      	movcs	r5, lr
  407580:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  407584:	ea55 0e06 	orrs.w	lr, r5, r6
  407588:	d018      	beq.n	4075bc <__aeabi_ddiv+0x114>
  40758a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  40758e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  407592:	ea4f 1606 	mov.w	r6, r6, lsl #4
  407596:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  40759a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  40759e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  4075a2:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  4075a6:	d1c0      	bne.n	40752a <__aeabi_ddiv+0x82>
  4075a8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4075ac:	d10b      	bne.n	4075c6 <__aeabi_ddiv+0x11e>
  4075ae:	ea41 0100 	orr.w	r1, r1, r0
  4075b2:	f04f 0000 	mov.w	r0, #0
  4075b6:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  4075ba:	e7b6      	b.n	40752a <__aeabi_ddiv+0x82>
  4075bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4075c0:	bf04      	itt	eq
  4075c2:	4301      	orreq	r1, r0
  4075c4:	2000      	moveq	r0, #0
  4075c6:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  4075ca:	bf88      	it	hi
  4075cc:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  4075d0:	f63f aeaf 	bhi.w	407332 <__aeabi_dmul+0xde>
  4075d4:	ebb5 0c03 	subs.w	ip, r5, r3
  4075d8:	bf04      	itt	eq
  4075da:	ebb6 0c02 	subseq.w	ip, r6, r2
  4075de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4075e2:	f150 0000 	adcs.w	r0, r0, #0
  4075e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4075ea:	bd70      	pop	{r4, r5, r6, pc}
  4075ec:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  4075f0:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  4075f4:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  4075f8:	bfc2      	ittt	gt
  4075fa:	ebd4 050c 	rsbsgt	r5, r4, ip
  4075fe:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  407602:	bd70      	popgt	{r4, r5, r6, pc}
  407604:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  407608:	f04f 0e00 	mov.w	lr, #0
  40760c:	3c01      	subs	r4, #1
  40760e:	e690      	b.n	407332 <__aeabi_dmul+0xde>
  407610:	ea45 0e06 	orr.w	lr, r5, r6
  407614:	e68d      	b.n	407332 <__aeabi_dmul+0xde>
  407616:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  40761a:	ea94 0f0c 	teq	r4, ip
  40761e:	bf08      	it	eq
  407620:	ea95 0f0c 	teqeq	r5, ip
  407624:	f43f af3b 	beq.w	40749e <__aeabi_dmul+0x24a>
  407628:	ea94 0f0c 	teq	r4, ip
  40762c:	d10a      	bne.n	407644 <__aeabi_ddiv+0x19c>
  40762e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  407632:	f47f af34 	bne.w	40749e <__aeabi_dmul+0x24a>
  407636:	ea95 0f0c 	teq	r5, ip
  40763a:	f47f af25 	bne.w	407488 <__aeabi_dmul+0x234>
  40763e:	4610      	mov	r0, r2
  407640:	4619      	mov	r1, r3
  407642:	e72c      	b.n	40749e <__aeabi_dmul+0x24a>
  407644:	ea95 0f0c 	teq	r5, ip
  407648:	d106      	bne.n	407658 <__aeabi_ddiv+0x1b0>
  40764a:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  40764e:	f43f aefd 	beq.w	40744c <__aeabi_dmul+0x1f8>
  407652:	4610      	mov	r0, r2
  407654:	4619      	mov	r1, r3
  407656:	e722      	b.n	40749e <__aeabi_dmul+0x24a>
  407658:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  40765c:	bf18      	it	ne
  40765e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  407662:	f47f aec5 	bne.w	4073f0 <__aeabi_dmul+0x19c>
  407666:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  40766a:	f47f af0d 	bne.w	407488 <__aeabi_dmul+0x234>
  40766e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  407672:	f47f aeeb 	bne.w	40744c <__aeabi_dmul+0x1f8>
  407676:	e712      	b.n	40749e <__aeabi_dmul+0x24a>

00407678 <__gedf2>:
  407678:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
  40767c:	e006      	b.n	40768c <__cmpdf2+0x4>
  40767e:	bf00      	nop

00407680 <__ledf2>:
  407680:	f04f 0c01 	mov.w	ip, #1
  407684:	e002      	b.n	40768c <__cmpdf2+0x4>
  407686:	bf00      	nop

00407688 <__cmpdf2>:
  407688:	f04f 0c01 	mov.w	ip, #1
  40768c:	f84d cd04 	str.w	ip, [sp, #-4]!
  407690:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  407694:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407698:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40769c:	bf18      	it	ne
  40769e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  4076a2:	d01b      	beq.n	4076dc <__cmpdf2+0x54>
  4076a4:	b001      	add	sp, #4
  4076a6:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  4076aa:	bf0c      	ite	eq
  4076ac:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  4076b0:	ea91 0f03 	teqne	r1, r3
  4076b4:	bf02      	ittt	eq
  4076b6:	ea90 0f02 	teqeq	r0, r2
  4076ba:	2000      	moveq	r0, #0
  4076bc:	4770      	bxeq	lr
  4076be:	f110 0f00 	cmn.w	r0, #0
  4076c2:	ea91 0f03 	teq	r1, r3
  4076c6:	bf58      	it	pl
  4076c8:	4299      	cmppl	r1, r3
  4076ca:	bf08      	it	eq
  4076cc:	4290      	cmpeq	r0, r2
  4076ce:	bf2c      	ite	cs
  4076d0:	17d8      	asrcs	r0, r3, #31
  4076d2:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  4076d6:	f040 0001 	orr.w	r0, r0, #1
  4076da:	4770      	bx	lr
  4076dc:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  4076e0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4076e4:	d102      	bne.n	4076ec <__cmpdf2+0x64>
  4076e6:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  4076ea:	d107      	bne.n	4076fc <__cmpdf2+0x74>
  4076ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  4076f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4076f4:	d1d6      	bne.n	4076a4 <__cmpdf2+0x1c>
  4076f6:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4076fa:	d0d3      	beq.n	4076a4 <__cmpdf2+0x1c>
  4076fc:	f85d 0b04 	ldr.w	r0, [sp], #4
  407700:	4770      	bx	lr
  407702:	bf00      	nop

00407704 <__aeabi_cdrcmple>:
  407704:	4684      	mov	ip, r0
  407706:	4610      	mov	r0, r2
  407708:	4662      	mov	r2, ip
  40770a:	468c      	mov	ip, r1
  40770c:	4619      	mov	r1, r3
  40770e:	4663      	mov	r3, ip
  407710:	e000      	b.n	407714 <__aeabi_cdcmpeq>
  407712:	bf00      	nop

00407714 <__aeabi_cdcmpeq>:
  407714:	b501      	push	{r0, lr}
  407716:	f7ff ffb7 	bl	407688 <__cmpdf2>
  40771a:	2800      	cmp	r0, #0
  40771c:	bf48      	it	mi
  40771e:	f110 0f00 	cmnmi.w	r0, #0
  407722:	bd01      	pop	{r0, pc}

00407724 <__aeabi_dcmpeq>:
  407724:	f84d ed08 	str.w	lr, [sp, #-8]!
  407728:	f7ff fff4 	bl	407714 <__aeabi_cdcmpeq>
  40772c:	bf0c      	ite	eq
  40772e:	2001      	moveq	r0, #1
  407730:	2000      	movne	r0, #0
  407732:	f85d fb08 	ldr.w	pc, [sp], #8
  407736:	bf00      	nop

00407738 <__aeabi_dcmplt>:
  407738:	f84d ed08 	str.w	lr, [sp, #-8]!
  40773c:	f7ff ffea 	bl	407714 <__aeabi_cdcmpeq>
  407740:	bf34      	ite	cc
  407742:	2001      	movcc	r0, #1
  407744:	2000      	movcs	r0, #0
  407746:	f85d fb08 	ldr.w	pc, [sp], #8
  40774a:	bf00      	nop

0040774c <__aeabi_dcmple>:
  40774c:	f84d ed08 	str.w	lr, [sp, #-8]!
  407750:	f7ff ffe0 	bl	407714 <__aeabi_cdcmpeq>
  407754:	bf94      	ite	ls
  407756:	2001      	movls	r0, #1
  407758:	2000      	movhi	r0, #0
  40775a:	f85d fb08 	ldr.w	pc, [sp], #8
  40775e:	bf00      	nop

00407760 <__aeabi_dcmpge>:
  407760:	f84d ed08 	str.w	lr, [sp, #-8]!
  407764:	f7ff ffce 	bl	407704 <__aeabi_cdrcmple>
  407768:	bf94      	ite	ls
  40776a:	2001      	movls	r0, #1
  40776c:	2000      	movhi	r0, #0
  40776e:	f85d fb08 	ldr.w	pc, [sp], #8
  407772:	bf00      	nop

00407774 <__aeabi_dcmpgt>:
  407774:	f84d ed08 	str.w	lr, [sp, #-8]!
  407778:	f7ff ffc4 	bl	407704 <__aeabi_cdrcmple>
  40777c:	bf34      	ite	cc
  40777e:	2001      	movcc	r0, #1
  407780:	2000      	movcs	r0, #0
  407782:	f85d fb08 	ldr.w	pc, [sp], #8
  407786:	bf00      	nop

00407788 <__aeabi_dcmpun>:
  407788:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  40778c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  407790:	d102      	bne.n	407798 <__aeabi_dcmpun+0x10>
  407792:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  407796:	d10a      	bne.n	4077ae <__aeabi_dcmpun+0x26>
  407798:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  40779c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  4077a0:	d102      	bne.n	4077a8 <__aeabi_dcmpun+0x20>
  4077a2:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  4077a6:	d102      	bne.n	4077ae <__aeabi_dcmpun+0x26>
  4077a8:	f04f 0000 	mov.w	r0, #0
  4077ac:	4770      	bx	lr
  4077ae:	f04f 0001 	mov.w	r0, #1
  4077b2:	4770      	bx	lr

004077b4 <__aeabi_d2iz>:
  4077b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
  4077b8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  4077bc:	d215      	bcs.n	4077ea <__aeabi_d2iz+0x36>
  4077be:	d511      	bpl.n	4077e4 <__aeabi_d2iz+0x30>
  4077c0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  4077c4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  4077c8:	d912      	bls.n	4077f0 <__aeabi_d2iz+0x3c>
  4077ca:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4077ce:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  4077d2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  4077d6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4077da:	fa23 f002 	lsr.w	r0, r3, r2
  4077de:	bf18      	it	ne
  4077e0:	4240      	negne	r0, r0
  4077e2:	4770      	bx	lr
  4077e4:	f04f 0000 	mov.w	r0, #0
  4077e8:	4770      	bx	lr
  4077ea:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  4077ee:	d105      	bne.n	4077fc <__aeabi_d2iz+0x48>
  4077f0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  4077f4:	bf08      	it	eq
  4077f6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  4077fa:	4770      	bx	lr
  4077fc:	f04f 0000 	mov.w	r0, #0
  407800:	4770      	bx	lr
  407802:	bf00      	nop

00407804 <__aeabi_d2uiz>:
  407804:	004a      	lsls	r2, r1, #1
  407806:	d211      	bcs.n	40782c <__aeabi_d2uiz+0x28>
  407808:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  40780c:	d211      	bcs.n	407832 <__aeabi_d2uiz+0x2e>
  40780e:	d50d      	bpl.n	40782c <__aeabi_d2uiz+0x28>
  407810:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  407814:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  407818:	d40e      	bmi.n	407838 <__aeabi_d2uiz+0x34>
  40781a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  40781e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  407822:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  407826:	fa23 f002 	lsr.w	r0, r3, r2
  40782a:	4770      	bx	lr
  40782c:	f04f 0000 	mov.w	r0, #0
  407830:	4770      	bx	lr
  407832:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  407836:	d102      	bne.n	40783e <__aeabi_d2uiz+0x3a>
  407838:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  40783c:	4770      	bx	lr
  40783e:	f04f 0000 	mov.w	r0, #0
  407842:	4770      	bx	lr

00407844 <__aeabi_d2f>:
  407844:	ea4f 0241 	mov.w	r2, r1, lsl #1
  407848:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
  40784c:	bf24      	itt	cs
  40784e:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
  407852:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
  407856:	d90d      	bls.n	407874 <__aeabi_d2f+0x30>
  407858:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  40785c:	ea4f 02c0 	mov.w	r2, r0, lsl #3
  407860:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
  407864:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
  407868:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
  40786c:	bf08      	it	eq
  40786e:	f020 0001 	biceq.w	r0, r0, #1
  407872:	4770      	bx	lr
  407874:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
  407878:	d121      	bne.n	4078be <__aeabi_d2f+0x7a>
  40787a:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
  40787e:	bfbc      	itt	lt
  407880:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
  407884:	4770      	bxlt	lr
  407886:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  40788a:	ea4f 5252 	mov.w	r2, r2, lsr #21
  40788e:	f1c2 0218 	rsb	r2, r2, #24
  407892:	f1c2 0c20 	rsb	ip, r2, #32
  407896:	fa10 f30c 	lsls.w	r3, r0, ip
  40789a:	fa20 f002 	lsr.w	r0, r0, r2
  40789e:	bf18      	it	ne
  4078a0:	f040 0001 	orrne.w	r0, r0, #1
  4078a4:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  4078a8:	ea4f 23d3 	mov.w	r3, r3, lsr #11
  4078ac:	fa03 fc0c 	lsl.w	ip, r3, ip
  4078b0:	ea40 000c 	orr.w	r0, r0, ip
  4078b4:	fa23 f302 	lsr.w	r3, r3, r2
  4078b8:	ea4f 0343 	mov.w	r3, r3, lsl #1
  4078bc:	e7cc      	b.n	407858 <__aeabi_d2f+0x14>
  4078be:	ea7f 5362 	mvns.w	r3, r2, asr #21
  4078c2:	d107      	bne.n	4078d4 <__aeabi_d2f+0x90>
  4078c4:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
  4078c8:	bf1e      	ittt	ne
  4078ca:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
  4078ce:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
  4078d2:	4770      	bxne	lr
  4078d4:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
  4078d8:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  4078dc:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  4078e0:	4770      	bx	lr
  4078e2:	bf00      	nop

004078e4 <__aeabi_frsub>:
  4078e4:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
  4078e8:	e002      	b.n	4078f0 <__addsf3>
  4078ea:	bf00      	nop

004078ec <__aeabi_fsub>:
  4078ec:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

004078f0 <__addsf3>:
  4078f0:	0042      	lsls	r2, r0, #1
  4078f2:	bf1f      	itttt	ne
  4078f4:	ea5f 0341 	movsne.w	r3, r1, lsl #1
  4078f8:	ea92 0f03 	teqne	r2, r3
  4078fc:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
  407900:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  407904:	d06a      	beq.n	4079dc <__addsf3+0xec>
  407906:	ea4f 6212 	mov.w	r2, r2, lsr #24
  40790a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
  40790e:	bfc1      	itttt	gt
  407910:	18d2      	addgt	r2, r2, r3
  407912:	4041      	eorgt	r1, r0
  407914:	4048      	eorgt	r0, r1
  407916:	4041      	eorgt	r1, r0
  407918:	bfb8      	it	lt
  40791a:	425b      	neglt	r3, r3
  40791c:	2b19      	cmp	r3, #25
  40791e:	bf88      	it	hi
  407920:	4770      	bxhi	lr
  407922:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  407926:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  40792a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
  40792e:	bf18      	it	ne
  407930:	4240      	negne	r0, r0
  407932:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  407936:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
  40793a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
  40793e:	bf18      	it	ne
  407940:	4249      	negne	r1, r1
  407942:	ea92 0f03 	teq	r2, r3
  407946:	d03f      	beq.n	4079c8 <__addsf3+0xd8>
  407948:	f1a2 0201 	sub.w	r2, r2, #1
  40794c:	fa41 fc03 	asr.w	ip, r1, r3
  407950:	eb10 000c 	adds.w	r0, r0, ip
  407954:	f1c3 0320 	rsb	r3, r3, #32
  407958:	fa01 f103 	lsl.w	r1, r1, r3
  40795c:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  407960:	d502      	bpl.n	407968 <__addsf3+0x78>
  407962:	4249      	negs	r1, r1
  407964:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
  407968:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
  40796c:	d313      	bcc.n	407996 <__addsf3+0xa6>
  40796e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
  407972:	d306      	bcc.n	407982 <__addsf3+0x92>
  407974:	0840      	lsrs	r0, r0, #1
  407976:	ea4f 0131 	mov.w	r1, r1, rrx
  40797a:	f102 0201 	add.w	r2, r2, #1
  40797e:	2afe      	cmp	r2, #254	; 0xfe
  407980:	d251      	bcs.n	407a26 <__addsf3+0x136>
  407982:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
  407986:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  40798a:	bf08      	it	eq
  40798c:	f020 0001 	biceq.w	r0, r0, #1
  407990:	ea40 0003 	orr.w	r0, r0, r3
  407994:	4770      	bx	lr
  407996:	0049      	lsls	r1, r1, #1
  407998:	eb40 0000 	adc.w	r0, r0, r0
  40799c:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
  4079a0:	f1a2 0201 	sub.w	r2, r2, #1
  4079a4:	d1ed      	bne.n	407982 <__addsf3+0x92>
  4079a6:	fab0 fc80 	clz	ip, r0
  4079aa:	f1ac 0c08 	sub.w	ip, ip, #8
  4079ae:	ebb2 020c 	subs.w	r2, r2, ip
  4079b2:	fa00 f00c 	lsl.w	r0, r0, ip
  4079b6:	bfaa      	itet	ge
  4079b8:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
  4079bc:	4252      	neglt	r2, r2
  4079be:	4318      	orrge	r0, r3
  4079c0:	bfbc      	itt	lt
  4079c2:	40d0      	lsrlt	r0, r2
  4079c4:	4318      	orrlt	r0, r3
  4079c6:	4770      	bx	lr
  4079c8:	f092 0f00 	teq	r2, #0
  4079cc:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
  4079d0:	bf06      	itte	eq
  4079d2:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
  4079d6:	3201      	addeq	r2, #1
  4079d8:	3b01      	subne	r3, #1
  4079da:	e7b5      	b.n	407948 <__addsf3+0x58>
  4079dc:	ea4f 0341 	mov.w	r3, r1, lsl #1
  4079e0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  4079e4:	bf18      	it	ne
  4079e6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  4079ea:	d021      	beq.n	407a30 <__addsf3+0x140>
  4079ec:	ea92 0f03 	teq	r2, r3
  4079f0:	d004      	beq.n	4079fc <__addsf3+0x10c>
  4079f2:	f092 0f00 	teq	r2, #0
  4079f6:	bf08      	it	eq
  4079f8:	4608      	moveq	r0, r1
  4079fa:	4770      	bx	lr
  4079fc:	ea90 0f01 	teq	r0, r1
  407a00:	bf1c      	itt	ne
  407a02:	2000      	movne	r0, #0
  407a04:	4770      	bxne	lr
  407a06:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
  407a0a:	d104      	bne.n	407a16 <__addsf3+0x126>
  407a0c:	0040      	lsls	r0, r0, #1
  407a0e:	bf28      	it	cs
  407a10:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
  407a14:	4770      	bx	lr
  407a16:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
  407a1a:	bf3c      	itt	cc
  407a1c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
  407a20:	4770      	bxcc	lr
  407a22:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
  407a26:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
  407a2a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407a2e:	4770      	bx	lr
  407a30:	ea7f 6222 	mvns.w	r2, r2, asr #24
  407a34:	bf16      	itet	ne
  407a36:	4608      	movne	r0, r1
  407a38:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
  407a3c:	4601      	movne	r1, r0
  407a3e:	0242      	lsls	r2, r0, #9
  407a40:	bf06      	itte	eq
  407a42:	ea5f 2341 	movseq.w	r3, r1, lsl #9
  407a46:	ea90 0f01 	teqeq	r0, r1
  407a4a:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
  407a4e:	4770      	bx	lr

00407a50 <__aeabi_ui2f>:
  407a50:	f04f 0300 	mov.w	r3, #0
  407a54:	e004      	b.n	407a60 <__aeabi_i2f+0x8>
  407a56:	bf00      	nop

00407a58 <__aeabi_i2f>:
  407a58:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
  407a5c:	bf48      	it	mi
  407a5e:	4240      	negmi	r0, r0
  407a60:	ea5f 0c00 	movs.w	ip, r0
  407a64:	bf08      	it	eq
  407a66:	4770      	bxeq	lr
  407a68:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
  407a6c:	4601      	mov	r1, r0
  407a6e:	f04f 0000 	mov.w	r0, #0
  407a72:	e01c      	b.n	407aae <__aeabi_l2f+0x2a>

00407a74 <__aeabi_ul2f>:
  407a74:	ea50 0201 	orrs.w	r2, r0, r1
  407a78:	bf08      	it	eq
  407a7a:	4770      	bxeq	lr
  407a7c:	f04f 0300 	mov.w	r3, #0
  407a80:	e00a      	b.n	407a98 <__aeabi_l2f+0x14>
  407a82:	bf00      	nop

00407a84 <__aeabi_l2f>:
  407a84:	ea50 0201 	orrs.w	r2, r0, r1
  407a88:	bf08      	it	eq
  407a8a:	4770      	bxeq	lr
  407a8c:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
  407a90:	d502      	bpl.n	407a98 <__aeabi_l2f+0x14>
  407a92:	4240      	negs	r0, r0
  407a94:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407a98:	ea5f 0c01 	movs.w	ip, r1
  407a9c:	bf02      	ittt	eq
  407a9e:	4684      	moveq	ip, r0
  407aa0:	4601      	moveq	r1, r0
  407aa2:	2000      	moveq	r0, #0
  407aa4:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
  407aa8:	bf08      	it	eq
  407aaa:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
  407aae:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
  407ab2:	fabc f28c 	clz	r2, ip
  407ab6:	3a08      	subs	r2, #8
  407ab8:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
  407abc:	db10      	blt.n	407ae0 <__aeabi_l2f+0x5c>
  407abe:	fa01 fc02 	lsl.w	ip, r1, r2
  407ac2:	4463      	add	r3, ip
  407ac4:	fa00 fc02 	lsl.w	ip, r0, r2
  407ac8:	f1c2 0220 	rsb	r2, r2, #32
  407acc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  407ad0:	fa20 f202 	lsr.w	r2, r0, r2
  407ad4:	eb43 0002 	adc.w	r0, r3, r2
  407ad8:	bf08      	it	eq
  407ada:	f020 0001 	biceq.w	r0, r0, #1
  407ade:	4770      	bx	lr
  407ae0:	f102 0220 	add.w	r2, r2, #32
  407ae4:	fa01 fc02 	lsl.w	ip, r1, r2
  407ae8:	f1c2 0220 	rsb	r2, r2, #32
  407aec:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
  407af0:	fa21 f202 	lsr.w	r2, r1, r2
  407af4:	eb43 0002 	adc.w	r0, r3, r2
  407af8:	bf08      	it	eq
  407afa:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  407afe:	4770      	bx	lr

00407b00 <__aeabi_fmul>:
  407b00:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407b04:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  407b08:	bf1e      	ittt	ne
  407b0a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  407b0e:	ea92 0f0c 	teqne	r2, ip
  407b12:	ea93 0f0c 	teqne	r3, ip
  407b16:	d06f      	beq.n	407bf8 <__aeabi_fmul+0xf8>
  407b18:	441a      	add	r2, r3
  407b1a:	ea80 0c01 	eor.w	ip, r0, r1
  407b1e:	0240      	lsls	r0, r0, #9
  407b20:	bf18      	it	ne
  407b22:	ea5f 2141 	movsne.w	r1, r1, lsl #9
  407b26:	d01e      	beq.n	407b66 <__aeabi_fmul+0x66>
  407b28:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
  407b2c:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
  407b30:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
  407b34:	fba0 3101 	umull	r3, r1, r0, r1
  407b38:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  407b3c:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
  407b40:	bf3e      	ittt	cc
  407b42:	0049      	lslcc	r1, r1, #1
  407b44:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
  407b48:	005b      	lslcc	r3, r3, #1
  407b4a:	ea40 0001 	orr.w	r0, r0, r1
  407b4e:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
  407b52:	2afd      	cmp	r2, #253	; 0xfd
  407b54:	d81d      	bhi.n	407b92 <__aeabi_fmul+0x92>
  407b56:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
  407b5a:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  407b5e:	bf08      	it	eq
  407b60:	f020 0001 	biceq.w	r0, r0, #1
  407b64:	4770      	bx	lr
  407b66:	f090 0f00 	teq	r0, #0
  407b6a:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  407b6e:	bf08      	it	eq
  407b70:	0249      	lsleq	r1, r1, #9
  407b72:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  407b76:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
  407b7a:	3a7f      	subs	r2, #127	; 0x7f
  407b7c:	bfc2      	ittt	gt
  407b7e:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  407b82:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  407b86:	4770      	bxgt	lr
  407b88:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407b8c:	f04f 0300 	mov.w	r3, #0
  407b90:	3a01      	subs	r2, #1
  407b92:	dc5d      	bgt.n	407c50 <__aeabi_fmul+0x150>
  407b94:	f112 0f19 	cmn.w	r2, #25
  407b98:	bfdc      	itt	le
  407b9a:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
  407b9e:	4770      	bxle	lr
  407ba0:	f1c2 0200 	rsb	r2, r2, #0
  407ba4:	0041      	lsls	r1, r0, #1
  407ba6:	fa21 f102 	lsr.w	r1, r1, r2
  407baa:	f1c2 0220 	rsb	r2, r2, #32
  407bae:	fa00 fc02 	lsl.w	ip, r0, r2
  407bb2:	ea5f 0031 	movs.w	r0, r1, rrx
  407bb6:	f140 0000 	adc.w	r0, r0, #0
  407bba:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
  407bbe:	bf08      	it	eq
  407bc0:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
  407bc4:	4770      	bx	lr
  407bc6:	f092 0f00 	teq	r2, #0
  407bca:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  407bce:	bf02      	ittt	eq
  407bd0:	0040      	lsleq	r0, r0, #1
  407bd2:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  407bd6:	3a01      	subeq	r2, #1
  407bd8:	d0f9      	beq.n	407bce <__aeabi_fmul+0xce>
  407bda:	ea40 000c 	orr.w	r0, r0, ip
  407bde:	f093 0f00 	teq	r3, #0
  407be2:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  407be6:	bf02      	ittt	eq
  407be8:	0049      	lsleq	r1, r1, #1
  407bea:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  407bee:	3b01      	subeq	r3, #1
  407bf0:	d0f9      	beq.n	407be6 <__aeabi_fmul+0xe6>
  407bf2:	ea41 010c 	orr.w	r1, r1, ip
  407bf6:	e78f      	b.n	407b18 <__aeabi_fmul+0x18>
  407bf8:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  407bfc:	ea92 0f0c 	teq	r2, ip
  407c00:	bf18      	it	ne
  407c02:	ea93 0f0c 	teqne	r3, ip
  407c06:	d00a      	beq.n	407c1e <__aeabi_fmul+0x11e>
  407c08:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  407c0c:	bf18      	it	ne
  407c0e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  407c12:	d1d8      	bne.n	407bc6 <__aeabi_fmul+0xc6>
  407c14:	ea80 0001 	eor.w	r0, r0, r1
  407c18:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  407c1c:	4770      	bx	lr
  407c1e:	f090 0f00 	teq	r0, #0
  407c22:	bf17      	itett	ne
  407c24:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
  407c28:	4608      	moveq	r0, r1
  407c2a:	f091 0f00 	teqne	r1, #0
  407c2e:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
  407c32:	d014      	beq.n	407c5e <__aeabi_fmul+0x15e>
  407c34:	ea92 0f0c 	teq	r2, ip
  407c38:	d101      	bne.n	407c3e <__aeabi_fmul+0x13e>
  407c3a:	0242      	lsls	r2, r0, #9
  407c3c:	d10f      	bne.n	407c5e <__aeabi_fmul+0x15e>
  407c3e:	ea93 0f0c 	teq	r3, ip
  407c42:	d103      	bne.n	407c4c <__aeabi_fmul+0x14c>
  407c44:	024b      	lsls	r3, r1, #9
  407c46:	bf18      	it	ne
  407c48:	4608      	movne	r0, r1
  407c4a:	d108      	bne.n	407c5e <__aeabi_fmul+0x15e>
  407c4c:	ea80 0001 	eor.w	r0, r0, r1
  407c50:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
  407c54:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  407c58:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407c5c:	4770      	bx	lr
  407c5e:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
  407c62:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
  407c66:	4770      	bx	lr

00407c68 <__aeabi_fdiv>:
  407c68:	f04f 0cff 	mov.w	ip, #255	; 0xff
  407c6c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
  407c70:	bf1e      	ittt	ne
  407c72:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
  407c76:	ea92 0f0c 	teqne	r2, ip
  407c7a:	ea93 0f0c 	teqne	r3, ip
  407c7e:	d069      	beq.n	407d54 <__aeabi_fdiv+0xec>
  407c80:	eba2 0203 	sub.w	r2, r2, r3
  407c84:	ea80 0c01 	eor.w	ip, r0, r1
  407c88:	0249      	lsls	r1, r1, #9
  407c8a:	ea4f 2040 	mov.w	r0, r0, lsl #9
  407c8e:	d037      	beq.n	407d00 <__aeabi_fdiv+0x98>
  407c90:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  407c94:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
  407c98:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
  407c9c:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
  407ca0:	428b      	cmp	r3, r1
  407ca2:	bf38      	it	cc
  407ca4:	005b      	lslcc	r3, r3, #1
  407ca6:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
  407caa:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
  407cae:	428b      	cmp	r3, r1
  407cb0:	bf24      	itt	cs
  407cb2:	1a5b      	subcs	r3, r3, r1
  407cb4:	ea40 000c 	orrcs.w	r0, r0, ip
  407cb8:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
  407cbc:	bf24      	itt	cs
  407cbe:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
  407cc2:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  407cc6:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
  407cca:	bf24      	itt	cs
  407ccc:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
  407cd0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  407cd4:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
  407cd8:	bf24      	itt	cs
  407cda:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
  407cde:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  407ce2:	011b      	lsls	r3, r3, #4
  407ce4:	bf18      	it	ne
  407ce6:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
  407cea:	d1e0      	bne.n	407cae <__aeabi_fdiv+0x46>
  407cec:	2afd      	cmp	r2, #253	; 0xfd
  407cee:	f63f af50 	bhi.w	407b92 <__aeabi_fmul+0x92>
  407cf2:	428b      	cmp	r3, r1
  407cf4:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
  407cf8:	bf08      	it	eq
  407cfa:	f020 0001 	biceq.w	r0, r0, #1
  407cfe:	4770      	bx	lr
  407d00:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
  407d04:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
  407d08:	327f      	adds	r2, #127	; 0x7f
  407d0a:	bfc2      	ittt	gt
  407d0c:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
  407d10:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
  407d14:	4770      	bxgt	lr
  407d16:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
  407d1a:	f04f 0300 	mov.w	r3, #0
  407d1e:	3a01      	subs	r2, #1
  407d20:	e737      	b.n	407b92 <__aeabi_fmul+0x92>
  407d22:	f092 0f00 	teq	r2, #0
  407d26:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
  407d2a:	bf02      	ittt	eq
  407d2c:	0040      	lsleq	r0, r0, #1
  407d2e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
  407d32:	3a01      	subeq	r2, #1
  407d34:	d0f9      	beq.n	407d2a <__aeabi_fdiv+0xc2>
  407d36:	ea40 000c 	orr.w	r0, r0, ip
  407d3a:	f093 0f00 	teq	r3, #0
  407d3e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
  407d42:	bf02      	ittt	eq
  407d44:	0049      	lsleq	r1, r1, #1
  407d46:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
  407d4a:	3b01      	subeq	r3, #1
  407d4c:	d0f9      	beq.n	407d42 <__aeabi_fdiv+0xda>
  407d4e:	ea41 010c 	orr.w	r1, r1, ip
  407d52:	e795      	b.n	407c80 <__aeabi_fdiv+0x18>
  407d54:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
  407d58:	ea92 0f0c 	teq	r2, ip
  407d5c:	d108      	bne.n	407d70 <__aeabi_fdiv+0x108>
  407d5e:	0242      	lsls	r2, r0, #9
  407d60:	f47f af7d 	bne.w	407c5e <__aeabi_fmul+0x15e>
  407d64:	ea93 0f0c 	teq	r3, ip
  407d68:	f47f af70 	bne.w	407c4c <__aeabi_fmul+0x14c>
  407d6c:	4608      	mov	r0, r1
  407d6e:	e776      	b.n	407c5e <__aeabi_fmul+0x15e>
  407d70:	ea93 0f0c 	teq	r3, ip
  407d74:	d104      	bne.n	407d80 <__aeabi_fdiv+0x118>
  407d76:	024b      	lsls	r3, r1, #9
  407d78:	f43f af4c 	beq.w	407c14 <__aeabi_fmul+0x114>
  407d7c:	4608      	mov	r0, r1
  407d7e:	e76e      	b.n	407c5e <__aeabi_fmul+0x15e>
  407d80:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
  407d84:	bf18      	it	ne
  407d86:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
  407d8a:	d1ca      	bne.n	407d22 <__aeabi_fdiv+0xba>
  407d8c:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
  407d90:	f47f af5c 	bne.w	407c4c <__aeabi_fmul+0x14c>
  407d94:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
  407d98:	f47f af3c 	bne.w	407c14 <__aeabi_fmul+0x114>
  407d9c:	e75f      	b.n	407c5e <__aeabi_fmul+0x15e>
  407d9e:	bf00      	nop

00407da0 <__gesf2>:
  407da0:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
  407da4:	e006      	b.n	407db4 <__cmpsf2+0x4>
  407da6:	bf00      	nop

00407da8 <__lesf2>:
  407da8:	f04f 0c01 	mov.w	ip, #1
  407dac:	e002      	b.n	407db4 <__cmpsf2+0x4>
  407dae:	bf00      	nop

00407db0 <__cmpsf2>:
  407db0:	f04f 0c01 	mov.w	ip, #1
  407db4:	f84d cd04 	str.w	ip, [sp, #-4]!
  407db8:	ea4f 0240 	mov.w	r2, r0, lsl #1
  407dbc:	ea4f 0341 	mov.w	r3, r1, lsl #1
  407dc0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  407dc4:	bf18      	it	ne
  407dc6:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
  407dca:	d011      	beq.n	407df0 <__cmpsf2+0x40>
  407dcc:	b001      	add	sp, #4
  407dce:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
  407dd2:	bf18      	it	ne
  407dd4:	ea90 0f01 	teqne	r0, r1
  407dd8:	bf58      	it	pl
  407dda:	ebb2 0003 	subspl.w	r0, r2, r3
  407dde:	bf88      	it	hi
  407de0:	17c8      	asrhi	r0, r1, #31
  407de2:	bf38      	it	cc
  407de4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
  407de8:	bf18      	it	ne
  407dea:	f040 0001 	orrne.w	r0, r0, #1
  407dee:	4770      	bx	lr
  407df0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
  407df4:	d102      	bne.n	407dfc <__cmpsf2+0x4c>
  407df6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
  407dfa:	d105      	bne.n	407e08 <__cmpsf2+0x58>
  407dfc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
  407e00:	d1e4      	bne.n	407dcc <__cmpsf2+0x1c>
  407e02:	ea5f 2c41 	movs.w	ip, r1, lsl #9
  407e06:	d0e1      	beq.n	407dcc <__cmpsf2+0x1c>
  407e08:	f85d 0b04 	ldr.w	r0, [sp], #4
  407e0c:	4770      	bx	lr
  407e0e:	bf00      	nop

00407e10 <__aeabi_cfrcmple>:
  407e10:	4684      	mov	ip, r0
  407e12:	4608      	mov	r0, r1
  407e14:	4661      	mov	r1, ip
  407e16:	e7ff      	b.n	407e18 <__aeabi_cfcmpeq>

00407e18 <__aeabi_cfcmpeq>:
  407e18:	b50f      	push	{r0, r1, r2, r3, lr}
  407e1a:	f7ff ffc9 	bl	407db0 <__cmpsf2>
  407e1e:	2800      	cmp	r0, #0
  407e20:	bf48      	it	mi
  407e22:	f110 0f00 	cmnmi.w	r0, #0
  407e26:	bd0f      	pop	{r0, r1, r2, r3, pc}

00407e28 <__aeabi_fcmpeq>:
  407e28:	f84d ed08 	str.w	lr, [sp, #-8]!
  407e2c:	f7ff fff4 	bl	407e18 <__aeabi_cfcmpeq>
  407e30:	bf0c      	ite	eq
  407e32:	2001      	moveq	r0, #1
  407e34:	2000      	movne	r0, #0
  407e36:	f85d fb08 	ldr.w	pc, [sp], #8
  407e3a:	bf00      	nop

00407e3c <__aeabi_fcmplt>:
  407e3c:	f84d ed08 	str.w	lr, [sp, #-8]!
  407e40:	f7ff ffea 	bl	407e18 <__aeabi_cfcmpeq>
  407e44:	bf34      	ite	cc
  407e46:	2001      	movcc	r0, #1
  407e48:	2000      	movcs	r0, #0
  407e4a:	f85d fb08 	ldr.w	pc, [sp], #8
  407e4e:	bf00      	nop

00407e50 <__aeabi_fcmple>:
  407e50:	f84d ed08 	str.w	lr, [sp, #-8]!
  407e54:	f7ff ffe0 	bl	407e18 <__aeabi_cfcmpeq>
  407e58:	bf94      	ite	ls
  407e5a:	2001      	movls	r0, #1
  407e5c:	2000      	movhi	r0, #0
  407e5e:	f85d fb08 	ldr.w	pc, [sp], #8
  407e62:	bf00      	nop

00407e64 <__aeabi_fcmpge>:
  407e64:	f84d ed08 	str.w	lr, [sp, #-8]!
  407e68:	f7ff ffd2 	bl	407e10 <__aeabi_cfrcmple>
  407e6c:	bf94      	ite	ls
  407e6e:	2001      	movls	r0, #1
  407e70:	2000      	movhi	r0, #0
  407e72:	f85d fb08 	ldr.w	pc, [sp], #8
  407e76:	bf00      	nop

00407e78 <__aeabi_fcmpgt>:
  407e78:	f84d ed08 	str.w	lr, [sp, #-8]!
  407e7c:	f7ff ffc8 	bl	407e10 <__aeabi_cfrcmple>
  407e80:	bf34      	ite	cc
  407e82:	2001      	movcc	r0, #1
  407e84:	2000      	movcs	r0, #0
  407e86:	f85d fb08 	ldr.w	pc, [sp], #8
  407e8a:	bf00      	nop

00407e8c <__aeabi_f2iz>:
  407e8c:	ea4f 0240 	mov.w	r2, r0, lsl #1
  407e90:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  407e94:	d30f      	bcc.n	407eb6 <__aeabi_f2iz+0x2a>
  407e96:	f04f 039e 	mov.w	r3, #158	; 0x9e
  407e9a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  407e9e:	d90d      	bls.n	407ebc <__aeabi_f2iz+0x30>
  407ea0:	ea4f 2300 	mov.w	r3, r0, lsl #8
  407ea4:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  407ea8:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
  407eac:	fa23 f002 	lsr.w	r0, r3, r2
  407eb0:	bf18      	it	ne
  407eb2:	4240      	negne	r0, r0
  407eb4:	4770      	bx	lr
  407eb6:	f04f 0000 	mov.w	r0, #0
  407eba:	4770      	bx	lr
  407ebc:	f112 0f61 	cmn.w	r2, #97	; 0x61
  407ec0:	d101      	bne.n	407ec6 <__aeabi_f2iz+0x3a>
  407ec2:	0242      	lsls	r2, r0, #9
  407ec4:	d105      	bne.n	407ed2 <__aeabi_f2iz+0x46>
  407ec6:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
  407eca:	bf08      	it	eq
  407ecc:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  407ed0:	4770      	bx	lr
  407ed2:	f04f 0000 	mov.w	r0, #0
  407ed6:	4770      	bx	lr

00407ed8 <__aeabi_f2uiz>:
  407ed8:	0042      	lsls	r2, r0, #1
  407eda:	d20e      	bcs.n	407efa <__aeabi_f2uiz+0x22>
  407edc:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
  407ee0:	d30b      	bcc.n	407efa <__aeabi_f2uiz+0x22>
  407ee2:	f04f 039e 	mov.w	r3, #158	; 0x9e
  407ee6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
  407eea:	d409      	bmi.n	407f00 <__aeabi_f2uiz+0x28>
  407eec:	ea4f 2300 	mov.w	r3, r0, lsl #8
  407ef0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  407ef4:	fa23 f002 	lsr.w	r0, r3, r2
  407ef8:	4770      	bx	lr
  407efa:	f04f 0000 	mov.w	r0, #0
  407efe:	4770      	bx	lr
  407f00:	f112 0f61 	cmn.w	r2, #97	; 0x61
  407f04:	d101      	bne.n	407f0a <__aeabi_f2uiz+0x32>
  407f06:	0242      	lsls	r2, r0, #9
  407f08:	d102      	bne.n	407f10 <__aeabi_f2uiz+0x38>
  407f0a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
  407f0e:	4770      	bx	lr
  407f10:	f04f 0000 	mov.w	r0, #0
  407f14:	4770      	bx	lr
  407f16:	bf00      	nop

00407f18 <__aeabi_d2lz>:
  407f18:	b538      	push	{r3, r4, r5, lr}
  407f1a:	4605      	mov	r5, r0
  407f1c:	460c      	mov	r4, r1
  407f1e:	4628      	mov	r0, r5
  407f20:	4621      	mov	r1, r4
  407f22:	2200      	movs	r2, #0
  407f24:	2300      	movs	r3, #0
  407f26:	f7ff fc07 	bl	407738 <__aeabi_dcmplt>
  407f2a:	b928      	cbnz	r0, 407f38 <__aeabi_d2lz+0x20>
  407f2c:	4628      	mov	r0, r5
  407f2e:	4621      	mov	r1, r4
  407f30:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  407f34:	f000 b80a 	b.w	407f4c <__aeabi_d2ulz>
  407f38:	4628      	mov	r0, r5
  407f3a:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
  407f3e:	f000 f805 	bl	407f4c <__aeabi_d2ulz>
  407f42:	4240      	negs	r0, r0
  407f44:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  407f48:	bd38      	pop	{r3, r4, r5, pc}
  407f4a:	bf00      	nop

00407f4c <__aeabi_d2ulz>:
  407f4c:	b5d0      	push	{r4, r6, r7, lr}
  407f4e:	2200      	movs	r2, #0
  407f50:	4b0b      	ldr	r3, [pc, #44]	; (407f80 <__aeabi_d2ulz+0x34>)
  407f52:	4606      	mov	r6, r0
  407f54:	460f      	mov	r7, r1
  407f56:	f7ff f97d 	bl	407254 <__aeabi_dmul>
  407f5a:	f7ff fc53 	bl	407804 <__aeabi_d2uiz>
  407f5e:	4604      	mov	r4, r0
  407f60:	f7ff f8fe 	bl	407160 <__aeabi_ui2d>
  407f64:	2200      	movs	r2, #0
  407f66:	4b07      	ldr	r3, [pc, #28]	; (407f84 <__aeabi_d2ulz+0x38>)
  407f68:	f7ff f974 	bl	407254 <__aeabi_dmul>
  407f6c:	4602      	mov	r2, r0
  407f6e:	460b      	mov	r3, r1
  407f70:	4630      	mov	r0, r6
  407f72:	4639      	mov	r1, r7
  407f74:	f7fe ffb6 	bl	406ee4 <__aeabi_dsub>
  407f78:	f7ff fc44 	bl	407804 <__aeabi_d2uiz>
  407f7c:	4621      	mov	r1, r4
  407f7e:	bdd0      	pop	{r4, r6, r7, pc}
  407f80:	3df00000 	.word	0x3df00000
  407f84:	41f00000 	.word	0x41f00000
  407f88:	0a0d0a0d 	.word	0x0a0d0a0d
  407f8c:	346d6173 	.word	0x346d6173
  407f90:	63323364 	.word	0x63323364
  407f94:	756d6920 	.word	0x756d6920
  407f98:	6d656420 	.word	0x6d656420
  407f9c:	2e2e2e6f 	.word	0x2e2e2e6f
  407fa0:	00000a0d 	.word	0x00000a0d
  407fa4:	0000002e 	.word	0x0000002e
  407fa8:	61656c70 	.word	0x61656c70
  407fac:	70206573 	.word	0x70206573
  407fb0:	73736572 	.word	0x73736572
  407fb4:	74756220 	.word	0x74756220
  407fb8:	206e6f74 	.word	0x206e6f74
  407fbc:	61206f74 	.word	0x61206f74
  407fc0:	6d206d72 	.word	0x6d206d72
  407fc4:	726f746f 	.word	0x726f746f
  407fc8:	000a0d73 	.word	0x000a0d73
  407fcc:	6f746f6d 	.word	0x6f746f6d
  407fd0:	72615f72 	.word	0x72615f72
  407fd4:	3a64656d 	.word	0x3a64656d
  407fd8:	0d642520 	.word	0x0d642520
  407fdc:	0000000a 	.word	0x0000000a
  407fe0:	78615f78 	.word	0x78615f78
  407fe4:	093a7369 	.word	0x093a7369
  407fe8:	00096625 	.word	0x00096625
  407fec:	78615f79 	.word	0x78615f79
  407ff0:	093a7369 	.word	0x093a7369
  407ff4:	00096625 	.word	0x00096625
  407ff8:	5f727770 	.word	0x5f727770
  407ffc:	7466656c 	.word	0x7466656c
  408000:	6c25093a 	.word	0x6c25093a
  408004:	00000964 	.word	0x00000964
  408008:	5f727770 	.word	0x5f727770
  40800c:	68676972 	.word	0x68676972
  408010:	25093a74 	.word	0x25093a74
  408014:	0009646c 	.word	0x0009646c
  408018:	00787061 	.word	0x00787061
  40801c:	642e5041 	.word	0x642e5041
  408020:	72697365 	.word	0x72697365
  408024:	615f6465 	.word	0x615f6465
  408028:	656c676e 	.word	0x656c676e
  40802c:	203a785f 	.word	0x203a785f
  408030:	0a0d6625 	.word	0x0a0d6625
  408034:	00000000 	.word	0x00000000
  408038:	00797061 	.word	0x00797061
  40803c:	642e5041 	.word	0x642e5041
  408040:	72697365 	.word	0x72697365
  408044:	615f6465 	.word	0x615f6465
  408048:	656c676e 	.word	0x656c676e
  40804c:	203a795f 	.word	0x203a795f
  408050:	0a0d6625 	.word	0x0a0d6625
  408054:	00000000 	.word	0x00000000
  408058:	0000706b 	.word	0x0000706b
  40805c:	666e6f63 	.word	0x666e6f63
  408060:	702e6769 	.word	0x702e6769
  408064:	6b5f6469 	.word	0x6b5f6469
  408068:	25203a70 	.word	0x25203a70
  40806c:	000a0d66 	.word	0x000a0d66
  408070:	0000696b 	.word	0x0000696b
  408074:	666e6f63 	.word	0x666e6f63
  408078:	702e6769 	.word	0x702e6769
  40807c:	6b5f6469 	.word	0x6b5f6469
  408080:	25203a69 	.word	0x25203a69
  408084:	000a0d66 	.word	0x000a0d66
  408088:	0000646b 	.word	0x0000646b
  40808c:	666e6f63 	.word	0x666e6f63
  408090:	702e6769 	.word	0x702e6769
  408094:	6b5f6469 	.word	0x6b5f6469
  408098:	25203a64 	.word	0x25203a64
  40809c:	000a0d66 	.word	0x000a0d66
  4080a0:	5f756d69 	.word	0x5f756d69
  4080a4:	696c6163 	.word	0x696c6163
  4080a8:	74617262 	.word	0x74617262
  4080ac:	00000065 	.word	0x00000065
  4080b0:	5f756d69 	.word	0x5f756d69
  4080b4:	696c6163 	.word	0x696c6163
  4080b8:	74617262 	.word	0x74617262
  4080bc:	25203a65 	.word	0x25203a65
  4080c0:	000a0d64 	.word	0x000a0d64
  4080c4:	6f746f6d 	.word	0x6f746f6d
  4080c8:	72615f72 	.word	0x72615f72
  4080cc:	0064656d 	.word	0x0064656d
  4080d0:	6f746f6d 	.word	0x6f746f6d
  4080d4:	666f5f72 	.word	0x666f5f72
  4080d8:	74657366 	.word	0x74657366
  4080dc:	00000000 	.word	0x00000000
  4080e0:	6f746f6d 	.word	0x6f746f6d
  4080e4:	666f5f72 	.word	0x666f5f72
  4080e8:	74657366 	.word	0x74657366
  4080ec:	6425203a 	.word	0x6425203a
  4080f0:	00000a0d 	.word	0x00000a0d
  4080f4:	6f746f6d 	.word	0x6f746f6d
  4080f8:	696d5f72 	.word	0x696d5f72
  4080fc:	0000006e 	.word	0x0000006e
  408100:	6f746f6d 	.word	0x6f746f6d
  408104:	696d2072 	.word	0x696d2072
  408108:	6f63206e 	.word	0x6f63206e
  40810c:	6e616d6d 	.word	0x6e616d6d
  408110:	73692064 	.word	0x73692064
  408114:	64657573 	.word	0x64657573
  408118:	00000a0d 	.word	0x00000a0d
  40811c:	6f746f6d 	.word	0x6f746f6d
  408120:	696d5f72 	.word	0x696d5f72
  408124:	00000064 	.word	0x00000064
  408128:	6f746f6d 	.word	0x6f746f6d
  40812c:	696d2072 	.word	0x696d2072
  408130:	6f632064 	.word	0x6f632064
  408134:	6e616d6d 	.word	0x6e616d6d
  408138:	73692064 	.word	0x73692064
  40813c:	64657573 	.word	0x64657573
  408140:	00000a0d 	.word	0x00000a0d
  408144:	6f746f6d 	.word	0x6f746f6d
  408148:	616d5f72 	.word	0x616d5f72
  40814c:	00000078 	.word	0x00000078
  408150:	6f746f6d 	.word	0x6f746f6d
  408154:	616d2072 	.word	0x616d2072
  408158:	6f632078 	.word	0x6f632078
  40815c:	6e616d6d 	.word	0x6e616d6d
  408160:	73692064 	.word	0x73692064
  408164:	64657573 	.word	0x64657573
  408168:	00000a0d 	.word	0x00000a0d
  40816c:	5f676f6c 	.word	0x5f676f6c
  408170:	00756d69 	.word	0x00756d69
  408174:	5f676f6c 	.word	0x5f676f6c
  408178:	3a756d69 	.word	0x3a756d69
  40817c:	0d642520 	.word	0x0d642520
  408180:	0000000a 	.word	0x0000000a
  408184:	5f676f6c 	.word	0x5f676f6c
  408188:	6f746f6d 	.word	0x6f746f6d
  40818c:	00000072 	.word	0x00000072
  408190:	5f676f6c 	.word	0x5f676f6c
  408194:	6f746f6d 	.word	0x6f746f6d
  408198:	25203a72 	.word	0x25203a72
  40819c:	000a0d64 	.word	0x000a0d64
  4081a0:	00000020 	.word	0x00000020
  4081a4:	5f697774 	.word	0x5f697774
  4081a8:	7473616d 	.word	0x7473616d
  4081ac:	695f7265 	.word	0x695f7265
  4081b0:	3a74696e 	.word	0x3a74696e
  4081b4:	69616620 	.word	0x69616620
  4081b8:	0d64656c 	.word	0x0d64656c
  4081bc:	0000000a 	.word	0x0000000a
  4081c0:	5f697774 	.word	0x5f697774
  4081c4:	7473616d 	.word	0x7473616d
  4081c8:	695f7265 	.word	0x695f7265
  4081cc:	3a74696e 	.word	0x3a74696e
  4081d0:	63757320 	.word	0x63757320
  4081d4:	73736563 	.word	0x73736563
  4081d8:	00000a0d 	.word	0x00000a0d
  4081dc:	62616e45 	.word	0x62616e45
  4081e0:	0064656c 	.word	0x0064656c
  4081e4:	61736944 	.word	0x61736944
  4081e8:	64656c62 	.word	0x64656c62
  4081ec:	00000000 	.word	0x00000000
  4081f0:	69766544 	.word	0x69766544
  4081f4:	203a6563 	.word	0x203a6563
  4081f8:	31257830 	.word	0x31257830
  4081fc:	000a0d78 	.word	0x000a0d78
  408200:	65656c53 	.word	0x65656c53
  408204:	6f4d2070 	.word	0x6f4d2070
  408208:	203a6564 	.word	0x203a6564
  40820c:	0a0d7325 	.word	0x0a0d7325
  408210:	00000000 	.word	0x00000000
  408214:	636f6c43 	.word	0x636f6c43
  408218:	6f53206b 	.word	0x6f53206b
  40821c:	65637275 	.word	0x65637275
  408220:	0000203a 	.word	0x0000203a
  408224:	65746e49 	.word	0x65746e49
  408228:	6c616e72 	.word	0x6c616e72
  40822c:	484d3820 	.word	0x484d3820
  408230:	736f207a 	.word	0x736f207a
  408234:	6c6c6963 	.word	0x6c6c6963
  408238:	726f7461 	.word	0x726f7461
  40823c:	00000a0d 	.word	0x00000a0d
  408240:	204c4c50 	.word	0x204c4c50
  408244:	68746977 	.word	0x68746977
  408248:	61205820 	.word	0x61205820
  40824c:	20736978 	.word	0x20736978
  408250:	6f727967 	.word	0x6f727967
  408254:	706f6373 	.word	0x706f6373
  408258:	65722065 	.word	0x65722065
  40825c:	65726566 	.word	0x65726566
  408260:	0d65636e 	.word	0x0d65636e
  408264:	0000000a 	.word	0x0000000a
  408268:	6f727947 	.word	0x6f727947
  40826c:	706f6373 	.word	0x706f6373
  408270:	00203a65 	.word	0x00203a65
  408274:	20303532 	.word	0x20303532
  408278:	0d737064 	.word	0x0d737064
  40827c:	0000000a 	.word	0x0000000a
  408280:	20303035 	.word	0x20303035
  408284:	0d737064 	.word	0x0d737064
  408288:	0000000a 	.word	0x0000000a
  40828c:	30303031 	.word	0x30303031
  408290:	73706420 	.word	0x73706420
  408294:	00000a0d 	.word	0x00000a0d
  408298:	30303032 	.word	0x30303032
  40829c:	73706420 	.word	0x73706420
  4082a0:	00000a0d 	.word	0x00000a0d
  4082a4:	5f657375 	.word	0x5f657375
  4082a8:	696c6163 	.word	0x696c6163
  4082ac:	74617262 	.word	0x74617262
  4082b0:	25203a65 	.word	0x25203a65
  4082b4:	000a0d64 	.word	0x000a0d64
  4082b8:	75746361 	.word	0x75746361
  4082bc:	745f6c61 	.word	0x745f6c61
  4082c0:	73657268 	.word	0x73657268
  4082c4:	646c6f68 	.word	0x646c6f68
  4082c8:	6625203a 	.word	0x6625203a
  4082cc:	00000a0d 	.word	0x00000a0d
  4082d0:	5f737064 	.word	0x5f737064
  4082d4:	5f726570 	.word	0x5f726570
  4082d8:	69676964 	.word	0x69676964
  4082dc:	25203a74 	.word	0x25203a74
  4082e0:	000a0d66 	.word	0x000a0d66
  4082e4:	676e6172 	.word	0x676e6172
  4082e8:	65705f65 	.word	0x65705f65
  4082ec:	69645f72 	.word	0x69645f72
  4082f0:	3a746967 	.word	0x3a746967
  4082f4:	0d662520 	.word	0x0d662520
  4082f8:	0000000a 	.word	0x0000000a
  4082fc:	5f697774 	.word	0x5f697774
  408300:	626f7270 	.word	0x626f7270
  408304:	66203a65 	.word	0x66203a65
  408308:	656c6961 	.word	0x656c6961
  40830c:	000a0d64 	.word	0x000a0d64
  408310:	5f697774 	.word	0x5f697774
  408314:	626f7270 	.word	0x626f7270
  408318:	73203a65 	.word	0x73203a65
  40831c:	65636375 	.word	0x65636375
  408320:	0a0d7373 	.word	0x0a0d7373
  408324:	00000000 	.word	0x00000000
  408328:	696c6163 	.word	0x696c6163
  40832c:	74617262 	.word	0x74617262
  408330:	20676e69 	.word	0x20676e69
  408334:	2e756d69 	.word	0x2e756d69
  408338:	0a0d2e2e 	.word	0x0a0d2e2e
  40833c:	00000000 	.word	0x00000000
  408340:	696c6163 	.word	0x696c6163
  408344:	74617262 	.word	0x74617262
  408348:	206e6f69 	.word	0x206e6f69
  40834c:	706d6f63 	.word	0x706d6f63
  408350:	6574656c 	.word	0x6574656c
  408354:	000a0d2e 	.word	0x000a0d2e
  408358:	6f746f6d 	.word	0x6f746f6d
  40835c:	6e695f72 	.word	0x6e695f72
  408360:	0a0d7469 	.word	0x0a0d7469
  408364:	00000000 	.word	0x00000000
  408368:	6f746f6d 	.word	0x6f746f6d
  40836c:	756f5f72 	.word	0x756f5f72
  408370:	74757074 	.word	0x74757074
  408374:	6425203a 	.word	0x6425203a
  408378:	00000a0d 	.word	0x00000a0d
  40837c:	00000001 	.word	0x00000001
  408380:	00000002 	.word	0x00000002
  408384:	00000004 	.word	0x00000004
  408388:	00000008 	.word	0x00000008
  40838c:	00000010 	.word	0x00000010
  408390:	00000020 	.word	0x00000020
  408394:	00000040 	.word	0x00000040
  408398:	00000080 	.word	0x00000080
  40839c:	00000100 	.word	0x00000100
  4083a0:	00000200 	.word	0x00000200
  4083a4:	00000400 	.word	0x00000400
  4083a8:	74727173 	.word	0x74727173
  4083ac:	00000000 	.word	0x00000000

004083b0 <atanhi>:
  4083b0:	0561bb4f 3fddac67 54442d18 3fe921fb     O.a.g..?.-DT.!.?
  4083c0:	d281f69b 3fef730b 54442d18 3ff921fb     .....s.?.-DT.!.?

004083d0 <atanlo>:
  4083d0:	222f65e2 3c7a2b7f 33145c07 3c81a626     .e/".+z<.\.3&..<
  4083e0:	7af0cbbd 3c700788 33145c07 3c91a626     ...z..p<.\.3&..<

004083f0 <_global_impure_ptr>:
  4083f0:	20000018 00464e49 00666e69 004e414e     ... INF.inf.NAN.
  408400:	006e616e 31300030 35343332 39383736     nan.0.0123456789
  408410:	44434241 30004645 34333231 38373635     ABCDEF.012345678
  408420:	63626139 00666564                       9abcdef.

00408428 <fpi.6223>:
  408428:	00000035 fffffbce 000003cb 00000001     5...............
  408438:	00000000                                ....

0040843c <fpinan.6259>:
  40843c:	00000034 fffffbce 000003cb 00000001     4...............
  40844c:	00000000                                ....

00408450 <tinytens>:
  408450:	97d889bc 3c9cd2b2 d5a8a733 3949f623     .......<3...#.I9
  408460:	44f4a73d 32a50ffd cf8c979d 255bba08     =..D...2......[%
  408470:	64ac6f43 11680628                       Co.d(.h.

00408478 <_ctype_>:
  408478:	20202000 20202020 28282020 20282828     .         ((((( 
  408488:	20202020 20202020 20202020 20202020                     
  408498:	10108820 10101010 10101010 10101010      ...............
  4084a8:	04040410 04040404 10040404 10101010     ................
  4084b8:	41411010 41414141 01010101 01010101     ..AAAAAA........
  4084c8:	01010101 01010101 01010101 10101010     ................
  4084d8:	42421010 42424242 02020202 02020202     ..BBBBBB........
  4084e8:	02020202 02020202 02020202 10101010     ................
  4084f8:	00000020 00000000 00000000 00000000      ...............
	...
  408578:	666e4900 74696e69 614e0079 0000004e     .Infinity.NaN...

00408588 <__sf_fake_stderr>:
	...

004085a8 <__sf_fake_stdin>:
	...

004085c8 <__sf_fake_stdout>:
	...

004085e8 <_C_numeric_locale>:
  4085e8:	004085f4 00408701 20000078 0043002e     ..@...@.x.. ..C.
  4085f8:	49534f50 00000058                       POSIX...

00408600 <__mprec_bigtens>:
  408600:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
  408610:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
  408620:	7f73bf3c 75154fdd                       <.s..O.u

00408628 <__mprec_tens>:
  408628:	00000000 3ff00000 00000000 40240000     .......?......$@
  408638:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
  408648:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
  408658:	00000000 412e8480 00000000 416312d0     .......A......cA
  408668:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
  408678:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
  408688:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
  408698:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
  4086a8:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
  4086b8:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
  4086c8:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
  4086d8:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
  4086e8:	79d99db4 44ea7843                       ...yCx.D

004086f0 <p05.6147>:
  4086f0:	00000005 00000019 0000007d 2b302d23     ........}...#-0+
  408700:	6c680020 6665004c 47464567 00000000      .hlL.efgEFG....

00408710 <_init>:
  408710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408712:	bf00      	nop
  408714:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408716:	bc08      	pop	{r3}
  408718:	469e      	mov	lr, r3
  40871a:	4770      	bx	lr

0040871c <__init_array_start>:
  40871c:	004000f1 	.word	0x004000f1

00408720 <_fini>:
  408720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  408722:	bf00      	nop
  408724:	bcf8      	pop	{r3, r4, r5, r6, r7}
  408726:	bc08      	pop	{r3}
  408728:	469e      	mov	lr, r3
  40872a:	4770      	bx	lr
  40872c:	0000      	movs	r0, r0
	...

00408730 <__portable_delay_cycles_veneer>:
  408730:	f85f f000 	ldr.w	pc, [pc]	; 408734 <__portable_delay_cycles_veneer+0x4>
  408734:	20000001 	.word	0x20000001

00408738 <__fini_array_start>:
  408738:	004000cd 	.word	0x004000cd

Disassembly of section .relocate:

20000000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20000000:	f3bf 8f5f 	dmb	sy
20000004:	3801      	subs	r0, #1
20000006:	d1fb      	bne.n	20000000 <portable_delay_cycles>
		"loop: DMB	\n"
		"SUBS R0, R0, #1  \n"
		"BNE.N loop         "
	);
}
20000008:	4770      	bx	lr
	...

2000000c <SystemCoreClock>:
2000000c:	0900 003d                                   ..=.

20000010 <__fdlib_version>:
20000010:	0001 0000                                   ....

20000014 <_impure_ptr>:
20000014:	0018 2000                                   ... 

20000018 <impure_data>:
20000018:	0000 0000 85a8 0040 85c8 0040 8588 0040     ......@...@...@.
	...

20000078 <numempty>:
20000078:	00ff 0000                                   ....

2000007c <__global_locale>:
2000007c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2000009c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200000bc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200000dc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
200000fc:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2000011c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2000013c:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
2000015c:	6ddb 0040 604d 0040 0000 0000 8478 0040     .m@.M`@.....x.@.
2000016c:	85f4 0040 8701 0040 8701 0040 8701 0040     ..@...@...@...@.
2000017c:	8701 0040 8701 0040 8701 0040 8701 0040     ..@...@...@...@.
2000018c:	8701 0040 8701 0040 ffff ffff ffff ffff     ..@...@.........
2000019c:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
200001c4:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
